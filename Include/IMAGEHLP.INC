;--- include file created by h2incx v0.99.9, copyright 2005 japheth
;--- source file: c:\programme\devstudio\vc6\include\IMAGEHLP.H, last modified: 4/24/1998 0:0

ifndef _IMAGEHLP_
_IMAGEHLP_	EQU	<>
ifdef __cplusplus
;extern "C"
;{
endif 

CHECKSUM_SUCCESS	EQU	0
CHECKSUM_OPEN_FAILURE	EQU	1
CHECKSUM_MAP_FAILURE	EQU	2
CHECKSUM_MAPVIEW_FAILURE	EQU	3
CHECKSUM_UNICODE_FAILURE	EQU	4
SPLITSYM_REMOVE_PRIVATE	EQU	00000001h
SPLITSYM_EXTRACT_ALL	EQU	00000002h
SPLITSYM_SYMBOLPATH_IS_SRC	EQU	00000004h

ifdef _IMAGEHLP_SOURCE_
IMAGEAPI	EQU	<>
else 
IMAGEAPI	EQU	<DECLSPEC_IMPORT>
endif 

@DefProto WINBASEAPI, CreateToolhelp32Snapshot, WINSTDCALLCONV, , <:DWORD, :DWORD>, 8

@DefProto IMAGEAPI, CheckSumMappedFile,  WINSTDCALLCONV, , <:LPVOID, :DWORD, :LPDWORD, :LPDWORD>, 16
@DefProto IMAGEAPI, MapFileAndCheckSumA, WINSTDCALLCONV, , <:LPSTR, :LPDWORD, :LPDWORD>, 12
@DefProto IMAGEAPI, MapFileAndCheckSumW, WINSTDCALLCONV, , <:PWSTR, :LPDWORD, :LPDWORD>, 12
ifdef UNICODE
MapFileAndCheckSum	EQU	<MapFileAndCheckSumW>
else 
MapFileAndCheckSum	EQU	<MapFileAndCheckSumA>
endif 
@DefProto IMAGEAPI, TouchFileTimes,        WINSTDCALLCONV, , <:HANDLE, :LPSYSTEMTIME>, 8
@DefProto IMAGEAPI, SplitSymbols,          WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR, :DWORD>, 16
@DefProto IMAGEAPI, FindDebugInfoFile,     WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR>, 12
;@DefProto IMAGEAPI, FindExecutableImage,   WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR>, 12
@DefProto IMAGEAPI, UpdateDebugInfoFile,   WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR, :PIMAGE_NT_HEADERS>, 16
@DefProto IMAGEAPI, UpdateDebugInfoFileEx, WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR, :PIMAGE_NT_HEADERS, :DWORD>, 20
@DefProto IMAGEAPI, BindImage,             WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR>, 12

IMAGEHLP_STATUS_REASON typedef DWORD
BindOutOfMemory = 0
BindRvaToVaFailed = 1
BindNoRoomInImage = 2
BindImportModuleFailed = 3
BindImportProcedureFailed = 4
BindImportModule = 5
BindImportProcedure = 6
BindForwarder = 7
BindForwarderNOT = 8
BindImageModified = 9
BindExpandFileHeaders = 10
BindImageComplete = 11
BindMismatchedSymbols = 12
BindSymbolsNotUpdated = 13

proto_PIMAGEHLP_STATUS_ROUTINE typedef proto WINSTDCALLCONV :IMAGEHLP_STATUS_REASON,:LPSTR,:LPSTR,:ULONG_PTR,:ULONG_PTR
PIMAGEHLP_STATUS_ROUTINE typedef ptr proto_PIMAGEHLP_STATUS_ROUTINE

@DefProto IMAGEAPI, BindImageEx, WINSTDCALLCONV, , <:DWORD, :LPSTR, :LPSTR, :LPSTR, :PIMAGEHLP_STATUS_ROUTINE>, 20

BIND_NO_BOUND_IMPORTS	EQU	00000001h
BIND_NO_UPDATE	EQU	00000002h
BIND_ALL_IMAGES	EQU	00000004h
BIND_CACHE_IMPORT_DLLS	EQU	00000008h

@DefProto IMAGEAPI, ReBaseImage, WINSTDCALLCONV, , <:LPSTR, :LPSTR, :BOOL, :BOOL, :BOOL, :DWORD, :ptr DWORD, :ptr ULONG_PTR, :ptr DWORD, :ptr ULONG_PTR, :DWORD>, 44

IMAGE_SEPARATION	EQU	( 64 * 1024 )

LOADED_IMAGE	struct 4
ModuleName	LPSTR	?
hFile	HANDLE	?
MappedAddress	PUCHAR	?
FileHeader	PIMAGE_NT_HEADERS	?
LastRvaSection	PIMAGE_SECTION_HEADER	?
NumberOfSections	DWORD	?
Sections	PIMAGE_SECTION_HEADER	?
Characteristics	DWORD	?
fSystemImage	BOOLEAN	?
fDOSImage	BOOLEAN	?
Links	LIST_ENTRY	<>
SizeOfImage	DWORD	?
LOADED_IMAGE	ends

PLOADED_IMAGE typedef ptr LOADED_IMAGE

@DefProto IMAGEAPI, ImageLoad,                 WINSTDCALLCONV, , <:LPSTR, :LPSTR>, 8
@DefProto IMAGEAPI, ImageUnload,               WINSTDCALLCONV, , <:PLOADED_IMAGE>, 4
@DefProto IMAGEAPI, ImageNtHeader,             WINSTDCALLCONV, , <:PVOID>, 4
@DefProto IMAGEAPI, ImageDirectoryEntryToData, WINSTDCALLCONV, , <:PVOID, :BOOLEAN, :WORD, :PULONG>, 16
@DefProto IMAGEAPI, ImageRvaToSection,         WINSTDCALLCONV, , <:PIMAGE_NT_HEADERS, :PVOID, :DWORD>, 12
@DefProto IMAGEAPI, ImageRvaToVa,              WINSTDCALLCONV, , <:PIMAGE_NT_HEADERS, :PVOID, :DWORD, :ptr PIMAGE_SECTION_HEADER>, 16
@DefProto IMAGEAPI, MapAndLoad,                WINSTDCALLCONV, , <:LPSTR, :LPSTR, :PLOADED_IMAGE, :BOOL, :BOOL>, 20
@DefProto IMAGEAPI, GetImageConfigInformation, WINSTDCALLCONV, , <:PLOADED_IMAGE, :PIMAGE_LOAD_CONFIG_DIRECTORY>, 8 
@DefProto IMAGEAPI, GetImageUnusedHeaderBytes, WINSTDCALLCONV, , <:PLOADED_IMAGE, :LPDWORD>, 8
@DefProto IMAGEAPI, SetImageConfigInformation, WINSTDCALLCONV, , <:PLOADED_IMAGE, :PIMAGE_LOAD_CONFIG_DIRECTORY>, 8
@DefProto IMAGEAPI, UnMapAndLoad,              WINSTDCALLCONV, , <:PLOADED_IMAGE>, 4

IMAGE_DEBUG_INFORMATION	struct 
List	LIST_ENTRY	<>
Size_	DWORD	?
MappedBase	PVOID	?
Machine	WORD	?
Characteristics	WORD	?
CheckSum	DWORD	?
ImageBase	DWORD	?
SizeOfImage	DWORD	?
NumberOfSections	DWORD	?
Sections	PIMAGE_SECTION_HEADER	?
ExportedNamesSize	DWORD	?
ExportedNames	LPSTR	?
NumberOfFunctionTableEntries	DWORD	?
FunctionTableEntries	PIMAGE_FUNCTION_ENTRY	?
LowestFunctionStartingAddress	DWORD	?
HighestFunctionEndingAddress	DWORD	?
NumberOfFpoTableEntries	DWORD	?
FpoTableEntries	PFPO_DATA	?
SizeOfCoffSymbols	DWORD	?
CoffSymbols	PIMAGE_COFF_SYMBOLS_HEADER	?
SizeOfCodeViewSymbols	DWORD	?
CodeViewSymbols	PVOID	?
ImageFilePath	LPSTR	?
ImageFileName	LPSTR	?
DebugFilePath	LPSTR	?
TimeDateStamp	DWORD	?
RomImage	BOOL	?
DebugDirectory	PIMAGE_DEBUG_DIRECTORY	?
NumberOfDebugDirectories	DWORD	?
Reserved	DWORD 3 dup (?)
IMAGE_DEBUG_INFORMATION	ends

PIMAGE_DEBUG_INFORMATION typedef ptr IMAGE_DEBUG_INFORMATION

@DefProto IMAGEAPI, MapDebugInformation,         WINSTDCALLCONV, , <:HANDLE, :LPSTR, :LPSTR, :DWORD>, 16
@DefProto IMAGEAPI, UnmapDebugInformation,       WINSTDCALLCONV, , <:PIMAGE_DEBUG_INFORMATION>, 4
@DefProto IMAGEAPI, FindExecutableImage,         WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR>, 12
@DefProto IMAGEAPI, SearchTreeForFile,           WINSTDCALLCONV, , <:LPSTR, :LPSTR, :LPSTR>, 12
@DefProto IMAGEAPI, MakeSureDirectoryPathExists, WINSTDCALLCONV, , <:LPSTR>, 4

UNDNAME_COMPLETE	EQU	0000h
UNDNAME_NO_LEADING_UNDERSCORES	EQU	0001h
UNDNAME_NO_MS_KEYWORDS	EQU	0002h
UNDNAME_NO_FUNCTION_RETURNS	EQU	0004h
UNDNAME_NO_ALLOCATION_MODEL	EQU	0008h
UNDNAME_NO_ALLOCATION_LANGUAGE	EQU	0010h
UNDNAME_NO_MS_THISTYPE	EQU	0020h
UNDNAME_NO_CV_THISTYPE	EQU	0040h
UNDNAME_NO_THISTYPE	EQU	0060h
UNDNAME_NO_ACCESS_SPECIFIERS	EQU	0080h
UNDNAME_NO_THROW_SIGNATURES	EQU	0100h
UNDNAME_NO_MEMBER_TYPE	EQU	0200h
UNDNAME_NO_RETURN_UDT_MODEL	EQU	0400h
UNDNAME_32_BIT_DECODE	EQU	0800h
UNDNAME_NAME_ONLY	EQU	1000h
UNDNAME_NO_ARGUMENTS	EQU	2000h
UNDNAME_NO_SPECIAL_SYMS	EQU	4000h

@DefProto IMAGEAPI, UnDecorateSymbolName, WINSTDCALLCONV, , <:LPSTR, :LPSTR, :DWORD, :DWORD>, 16

ADDRESS_MODE typedef DWORD
AddrMode1616 = 0
AddrMode1632 = 1
AddrModeReal = 2
AddrModeFlat = 3

ADDRESS	struct 4
Offset_	DWORD	?
Segment_	WORD	?
Mode	ADDRESS_MODE	?
ADDRESS	ends

LPADDRESS typedef ptr ADDRESS

KDHELP	struct 
Thread	DWORD	?
ThCallbackStack	DWORD	?
NextCallback	DWORD	?
FramePointer	DWORD	?
KiCallUserMode	DWORD	?
KeUserCallbackDispatcher	DWORD	?
SystemRangeStart	DWORD	?
KDHELP	ends

PKDHELP typedef ptr KDHELP

STACKFRAME	struct 
AddrPC	ADDRESS	<>
AddrReturn	ADDRESS	<>
AddrFrame	ADDRESS	<>
AddrStack	ADDRESS	<>
FuncTableEntry	LPVOID	?
Params	DWORD 4 dup (?)
Far_	BOOL	?
Virtual	BOOL	?
Reserved	DWORD 3 dup (?)
KdHelp	KDHELP	<>
STACKFRAME	ends

LPSTACKFRAME typedef ptr STACKFRAME

proto_PREAD_PROCESS_MEMORY_ROUTINE   typedef proto WINSTDCALLCONV :HANDLE,:LPCVOID,:LPVOID,:DWORD,:LPDWORD
PREAD_PROCESS_MEMORY_ROUTINE         typedef ptr proto_PREAD_PROCESS_MEMORY_ROUTINE
proto_PFUNCTION_TABLE_ACCESS_ROUTINE typedef proto WINSTDCALLCONV :HANDLE,:DWORD
PFUNCTION_TABLE_ACCESS_ROUTINE       typedef ptr proto_PFUNCTION_TABLE_ACCESS_ROUTINE
proto_PGET_MODULE_BASE_ROUTINE       typedef proto WINSTDCALLCONV :HANDLE,:DWORD
PGET_MODULE_BASE_ROUTINE             typedef ptr proto_PGET_MODULE_BASE_ROUTINE
proto_PTRANSLATE_ADDRESS_ROUTINE     typedef proto WINSTDCALLCONV :HANDLE,:HANDLE,:LPADDRESS
PTRANSLATE_ADDRESS_ROUTINE           typedef ptr proto_PTRANSLATE_ADDRESS_ROUTINE

@DefProto IMAGEAPI, StackWalk, WINSTDCALLCONV, , <:DWORD, :HANDLE, :HANDLE, :LPSTACKFRAME, :LPVOID, :PREAD_PROCESS_MEMORY_ROUTINE, :PFUNCTION_TABLE_ACCESS_ROUTINE, :PGET_MODULE_BASE_ROUTINE, :PTRANSLATE_ADDRESS_ROUTINE>, 36

API_VERSION_NUMBER	EQU	7

API_VERSION	struct 
MajorVersion	WORD	?
MinorVersion	WORD	?
Revision	WORD	?
Reserved	WORD	?
API_VERSION	ends

LPAPI_VERSION typedef ptr API_VERSION

@DefProto IMAGEAPI, ImagehlpApiVersion,           WINSTDCALLCONV, , <>, 0 
@DefProto IMAGEAPI, ImagehlpApiVersionEx,         WINSTDCALLCONV, , <:LPAPI_VERSION>, 4
@DefProto IMAGEAPI, GetTimestampForLoadedLibrary, WINSTDCALLCONV, , <:HMODULE>, 4
@DefProto IMAGEAPI, RemovePrivateCvSymbolic,      WINSTDCALLCONV, , <:PCHAR, :ptr PCHAR, :ptr DWORD>, 12
@DefProto IMAGEAPI, RemoveRelocations,            WINSTDCALLCONV, , <:PCHAR>, 4

proto_PSYM_ENUMMODULES_CALLBACK    typedef proto WINSTDCALLCONV :LPSTR,:DWORD,:PVOID
PSYM_ENUMMODULES_CALLBACK          typedef ptr proto_PSYM_ENUMMODULES_CALLBACK
proto_PSYM_ENUMSYMBOLS_CALLBACK    typedef proto WINSTDCALLCONV :LPSTR,:DWORD,:DWORD,:PVOID
PSYM_ENUMSYMBOLS_CALLBACK          typedef ptr proto_PSYM_ENUMSYMBOLS_CALLBACK
proto_PENUMLOADED_MODULES_CALLBACK typedef proto WINSTDCALLCONV :LPSTR,:DWORD,:DWORD,:PVOID
PENUMLOADED_MODULES_CALLBACK       typedef ptr proto_PENUMLOADED_MODULES_CALLBACK
proto_PSYMBOL_REGISTERED_CALLBACK  typedef proto WINSTDCALLCONV :HANDLE,:DWORD,:PVOID,:PVOID
PSYMBOL_REGISTERED_CALLBACK        typedef ptr proto_PSYMBOL_REGISTERED_CALLBACK

SYMF_OMAP_GENERATED	EQU	00000001h
SYMF_OMAP_MODIFIED	EQU	00000002h
SYM_TYPE typedef DWORD
SymNone = 0
SymCoff = 1
SymCv = 2
SymPdb = 3
SymExport = 4
SymDeferred = 5
SymSym = 6

IMAGEHLP_SYMBOL	struct 
SizeOfStruct	DWORD	?
Address	DWORD	?
Size_	DWORD	?
Flags	DWORD	?
MaxNameLength	DWORD	?
Name_	CHAR 1 dup (?)
IMAGEHLP_SYMBOL	ends

PIMAGEHLP_SYMBOL typedef ptr IMAGEHLP_SYMBOL

IMAGEHLP_MODULE	struct 
SizeOfStruct	DWORD	?
BaseOfImage	DWORD	?
ImageSize	DWORD	?
TimeDateStamp	DWORD	?
CheckSum	DWORD	?
NumSyms	DWORD	?
SymType	SYM_TYPE	?
ModuleName	CHAR 32 dup (?)
ImageName	CHAR 256 dup (?)
LoadedImageName	CHAR 256 dup (?)
IMAGEHLP_MODULE	ends

PIMAGEHLP_MODULE typedef ptr IMAGEHLP_MODULE

IMAGEHLP_LINE	struct 
SizeOfStruct	DWORD	?
Key	DWORD	?
LineNumber	DWORD	?
FileName	PCHAR	?
Address	DWORD	?
IMAGEHLP_LINE	ends

PIMAGEHLP_LINE typedef ptr IMAGEHLP_LINE

CBA_DEFERRED_SYMBOL_LOAD_START	EQU	00000001h
CBA_DEFERRED_SYMBOL_LOAD_COMPLETE	EQU	00000002h
CBA_DEFERRED_SYMBOL_LOAD_FAILURE	EQU	00000003h
CBA_SYMBOLS_UNLOADED	EQU	00000004h
CBA_DUPLICATE_SYMBOL	EQU	00000005h
IMAGEHLP_DEFERRED_SYMBOL_LOAD	struct 
SizeOfStruct	DWORD	?
BaseOfImage	DWORD	?
CheckSum	DWORD	?
TimeDateStamp	DWORD	?
FileName	CHAR MAX_PATH dup (?)
Reparse	BOOLEAN	?
IMAGEHLP_DEFERRED_SYMBOL_LOAD	ends

PIMAGEHLP_DEFERRED_SYMBOL_LOAD typedef ptr IMAGEHLP_DEFERRED_SYMBOL_LOAD

IMAGEHLP_DUPLICATE_SYMBOL	struct 
SizeOfStruct	DWORD	?
NumberOfDups	DWORD	?
Symbol	PIMAGEHLP_SYMBOL	?
SelectedSymbol	DWORD	?
IMAGEHLP_DUPLICATE_SYMBOL	ends

PIMAGEHLP_DUPLICATE_SYMBOL typedef ptr IMAGEHLP_DUPLICATE_SYMBOL

SYMOPT_CASE_INSENSITIVE	EQU	00000001h
SYMOPT_UNDNAME	EQU	00000002h
SYMOPT_DEFERRED_LOADS	EQU	00000004h
SYMOPT_NO_CPP	EQU	00000008h
SYMOPT_LOAD_LINES	EQU	00000010h
SYMOPT_OMAP_FIND_NEAREST	EQU	00000020h

@DefProto IMAGEAPI, SymSetOptions,          WINSTDCALLCONV, , <:DWORD>, 4
@DefProto IMAGEAPI, SymGetOptions,          WINSTDCALLCONV, , <>, 0
@DefProto IMAGEAPI, SymCleanup,             WINSTDCALLCONV, , <:HANDLE>, 4
@DefProto IMAGEAPI, SymEnumerateModules,    WINSTDCALLCONV, , <:HANDLE, :PSYM_ENUMMODULES_CALLBACK, :PVOID>, 12
@DefProto IMAGEAPI, SymEnumerateSymbols,    WINSTDCALLCONV, , <:HANDLE, :DWORD, :PSYM_ENUMSYMBOLS_CALLBACK, :PVOID>, 16
@DefProto IMAGEAPI, EnumerateLoadedModules, WINSTDCALLCONV, , <:HANDLE, :PENUMLOADED_MODULES_CALLBACK, :PVOID>, 12
@DefProto IMAGEAPI, SymFunctionTableAccess, WINSTDCALLCONV, , <:HANDLE, :DWORD>, 8
@DefProto IMAGEAPI, SymGetModuleInfo,       WINSTDCALLCONV, , <:HANDLE, :DWORD, :PIMAGEHLP_MODULE>, 12
@DefProto IMAGEAPI, SymGetModuleBase,       WINSTDCALLCONV, , <:HANDLE, :DWORD>, 8
@DefProto IMAGEAPI, SymGetSymFromAddr,      WINSTDCALLCONV, , <:HANDLE, :DWORD, :PDWORD, :PIMAGEHLP_SYMBOL>, 16
@DefProto IMAGEAPI, SymGetSymFromName,      WINSTDCALLCONV, , <:HANDLE, :LPSTR, :PIMAGEHLP_SYMBOL>, 12
@DefProto IMAGEAPI, SymGetSymNext,          WINSTDCALLCONV, , <:HANDLE, :PIMAGEHLP_SYMBOL>, 8
@DefProto IMAGEAPI, SymGetSymPrev,          WINSTDCALLCONV, , <:HANDLE, :PIMAGEHLP_SYMBOL>, 8
@DefProto IMAGEAPI, SymGetLineFromAddr,     WINSTDCALLCONV, , <:HANDLE, :DWORD, :PDWORD, :PIMAGEHLP_LINE>, 16
@DefProto IMAGEAPI, SymGetLineFromName,     WINSTDCALLCONV, , <:HANDLE, :LPSTR, :LPSTR, :DWORD, :PLONG, :PIMAGEHLP_LINE>, 24
@DefProto IMAGEAPI, SymGetLineNext,         WINSTDCALLCONV, , <:HANDLE, :PIMAGEHLP_LINE>, 8
@DefProto IMAGEAPI, SymGetLinePrev,         WINSTDCALLCONV, , <:HANDLE, :PIMAGEHLP_LINE>, 8
@DefProto IMAGEAPI, SymMatchFileName,       WINSTDCALLCONV, , <:LPSTR, :LPSTR, :ptr LPSTR, :ptr LPSTR>, 16
@DefProto IMAGEAPI, SymInitialize,          WINSTDCALLCONV, , <:HANDLE, :LPSTR, :BOOL>, 12
@DefProto IMAGEAPI, SymGetSearchPath,       WINSTDCALLCONV, , <:HANDLE, :LPSTR, :DWORD>, 12
@DefProto IMAGEAPI, SymSetSearchPath,       WINSTDCALLCONV, , <:HANDLE, :LPSTR>, 8
@DefProto IMAGEAPI, SymLoadModule,          WINSTDCALLCONV, , <:HANDLE, :HANDLE, :PSTR, :PSTR, :DWORD, :DWORD>, 24
@DefProto IMAGEAPI, SymUnloadModule,        WINSTDCALLCONV, , <:HANDLE, :DWORD>, 8
@DefProto IMAGEAPI, SymUnDName,             WINSTDCALLCONV, , <:PIMAGEHLP_SYMBOL, :LPSTR, :DWORD>, 12
@DefProto IMAGEAPI, SymRegisterCallback,    WINSTDCALLCONV, , <:HANDLE, :PSYMBOL_REGISTERED_CALLBACK, :PVOID>, 12

CERT_PE_IMAGE_DIGEST_DEBUG_INFO	EQU	01h
CERT_PE_IMAGE_DIGEST_RESOURCES	EQU	02h
CERT_PE_IMAGE_DIGEST_ALL_IMPORT_INFO	EQU	04h
CERT_PE_IMAGE_DIGEST_NON_PE_INFO	EQU	08h
CERT_SECTION_TYPE_ANY	EQU	0FFh
DIGEST_HANDLE typedef PVOID

proto_DIGEST_FUNCTION typedef proto WINSTDCALLCONV :DIGEST_HANDLE,:PBYTE,:DWORD
DIGEST_FUNCTION typedef ptr proto_DIGEST_FUNCTION

@DefProto IMAGEAPI, ImageGetDigestStream,       WINSTDCALLCONV, , <:HANDLE, :DWORD, :DIGEST_FUNCTION, :DIGEST_HANDLE>, 16
@DefProto IMAGEAPI, ImageAddCertificate,        WINSTDCALLCONV, , <:HANDLE, :LPWIN_CERTIFICATE, :PDWORD>, 12
@DefProto IMAGEAPI, ImageRemoveCertificate,     WINSTDCALLCONV, , <:HANDLE, :DWORD>, 8
@DefProto IMAGEAPI, ImageEnumerateCertificates, WINSTDCALLCONV, , <:HANDLE, :WORD, :PDWORD, :PDWORD, :DWORD>, 20
@DefProto IMAGEAPI, ImageGetCertificateData,    WINSTDCALLCONV, , <:HANDLE, :DWORD, :LPWIN_CERTIFICATE, :PDWORD>, 16
@DefProto IMAGEAPI, ImageGetCertificateHeader,  WINSTDCALLCONV, , <:HANDLE, :DWORD, :LPWIN_CERTIFICATE>, 12
@DefProto IMAGEAPI, CopyPdb,                    WINSTDCALLCONV, , <:ptr CHAR, :ptr CHAR, :BOOL>, 12
@DefProto IMAGEAPI, RemovePrivateCvSymbolicEx,  WINSTDCALLCONV, , <:PCHAR, :DWORD, :ptr PCHAR, :ptr DWORD>, 16

ifdef __cplusplus
;}
endif 
endif 

;--- errors: 0
;--- end of file ---
