;--- include file created by h2incx v0.99.19 (copyright 2005-2006 japheth)
;--- source file: D:\MICROS~1\Include\winnls.h, last modified: 6/9/2001 1:27
;--- cmdline used for creation:  -d3 -i mshtml.h

ifndef _WINNLS_
_WINNLS_	EQU	<>
ifdef __cplusplus
;extern "C"
;{
endif 
ifndef NONLS
ifdef _MAC
	include macwin32.inc
endif 
MAX_LEADBYTES	EQU	12
MAX_DEFAULTCHAR	EQU	2
MB_PRECOMPOSED	EQU	00000001h
MB_COMPOSITE	EQU	00000002h
MB_USEGLYPHCHARS	EQU	00000004h
MB_ERR_INVALID_CHARS	EQU	00000008h
WC_COMPOSITECHECK	EQU	00000200h
WC_DISCARDNS	EQU	00000010h
WC_SEPCHARS	EQU	00000020h
WC_DEFAULTCHAR	EQU	00000040h
if (WINVER ge 0500h)
WC_NO_BEST_FIT_CHARS	EQU	00000400h
endif 
CT_CTYPE1	EQU	00000001h
CT_CTYPE2	EQU	00000002h
CT_CTYPE3	EQU	00000004h
C1_UPPER	EQU	0001h
C1_LOWER	EQU	0002h
C1_DIGIT	EQU	0004h
C1_SPACE	EQU	0008h
C1_PUNCT	EQU	0010h
C1_CNTRL	EQU	0020h
C1_BLANK	EQU	0040h
C1_XDIGIT	EQU	0080h
C1_ALPHA	EQU	0100h
C1_DEFINED	EQU	0200h
C2_LEFTTORIGHT	EQU	0001h
C2_RIGHTTOLEFT	EQU	0002h
C2_EUROPENUMBER	EQU	0003h
C2_EUROPESEPARATOR	EQU	0004h
C2_EUROPETERMINATOR	EQU	0005h
C2_ARABICNUMBER	EQU	0006h
C2_COMMONSEPARATOR	EQU	0007h
C2_BLOCKSEPARATOR	EQU	0008h
C2_SEGMENTSEPARATOR	EQU	0009h
C2_WHITESPACE	EQU	000Ah
C2_OTHERNEUTRAL	EQU	000Bh
C2_NOTAPPLICABLE	EQU	0000h
C3_NONSPACING	EQU	0001h
C3_DIACRITIC	EQU	0002h
C3_VOWELMARK	EQU	0004h
C3_SYMBOL	EQU	0008h
C3_KATAKANA	EQU	0010h
C3_HIRAGANA	EQU	0020h
C3_HALFWIDTH	EQU	0040h
C3_FULLWIDTH	EQU	0080h
C3_IDEOGRAPH	EQU	0100h
C3_KASHIDA	EQU	0200h
C3_LEXICAL	EQU	0400h
C3_ALPHA	EQU	8000h
C3_NOTAPPLICABLE	EQU	0000h
NORM_IGNORECASE	EQU	00000001h
NORM_IGNORENONSPACE	EQU	00000002h
NORM_IGNORESYMBOLS	EQU	00000004h
NORM_IGNOREKANATYPE	EQU	00010000h
NORM_IGNOREWIDTH	EQU	00020000h
MAP_FOLDCZONE	EQU	00000010h
MAP_PRECOMPOSED	EQU	00000020h
MAP_COMPOSITE	EQU	00000040h
MAP_FOLDDIGITS	EQU	00000080h
if (WINVER ge 0500h)
MAP_EXPAND_LIGATURES	EQU	00002000h
endif 
LCMAP_LOWERCASE	EQU	00000100h
LCMAP_UPPERCASE	EQU	00000200h
LCMAP_SORTKEY	EQU	00000400h
LCMAP_BYTEREV	EQU	00000800h
LCMAP_HIRAGANA	EQU	00100000h
LCMAP_KATAKANA	EQU	00200000h
LCMAP_HALFWIDTH	EQU	00400000h
LCMAP_FULLWIDTH	EQU	00800000h
LCMAP_LINGUISTIC_CASING	EQU	01000000h
LCMAP_SIMPLIFIED_CHINESE	EQU	02000000h
LCMAP_TRADITIONAL_CHINESE	EQU	04000000h
LGRPID_INSTALLED	EQU	00000001h
LGRPID_SUPPORTED	EQU	00000002h
LCID_INSTALLED	EQU	00000001h
LCID_SUPPORTED	EQU	00000002h
LCID_ALTERNATE_SORTS	EQU	00000004h
CP_INSTALLED	EQU	00000001h
CP_SUPPORTED	EQU	00000002h
SORT_STRINGSORT	EQU	00001000h
CSTR_LESS_THAN	EQU	1
CSTR_EQUAL	EQU	2
CSTR_GREATER_THAN	EQU	3
CP_ACP	EQU	0
CP_OEMCP	EQU	1
CP_MACCP	EQU	2
CP_THREAD_ACP	EQU	3
CP_SYMBOL	EQU	42
CP_UTF7	EQU	65000
CP_UTF8	EQU	65001
CTRY_DEFAULT	EQU	0
CTRY_ALBANIA	EQU	355
CTRY_ALGERIA	EQU	213
CTRY_ARGENTINA	EQU	54
CTRY_ARMENIA	EQU	374
CTRY_AUSTRALIA	EQU	61
CTRY_AUSTRIA	EQU	43
CTRY_AZERBAIJAN	EQU	994
CTRY_BAHRAIN	EQU	973
CTRY_BELARUS	EQU	375
CTRY_BELGIUM	EQU	32
CTRY_BELIZE	EQU	501
CTRY_BOLIVIA	EQU	591
CTRY_BRAZIL	EQU	55
CTRY_BRUNEI_DARUSSALAM	EQU	673
CTRY_BULGARIA	EQU	359
CTRY_CANADA	EQU	2
CTRY_CARIBBEAN	EQU	1
CTRY_CHILE	EQU	56
CTRY_COLOMBIA	EQU	57
CTRY_COSTA_RICA	EQU	506
CTRY_CROATIA	EQU	385
CTRY_CZECH	EQU	420
CTRY_DENMARK	EQU	45
CTRY_DOMINICAN_REPUBLIC	EQU	1
CTRY_ECUADOR	EQU	593
CTRY_EGYPT	EQU	20
CTRY_EL_SALVADOR	EQU	503
CTRY_ESTONIA	EQU	372
CTRY_FAEROE_ISLANDS	EQU	298
CTRY_FINLAND	EQU	358
CTRY_FRANCE	EQU	33
CTRY_GEORGIA	EQU	995
CTRY_GERMANY	EQU	49
CTRY_GREECE	EQU	30
CTRY_GUATEMALA	EQU	502
CTRY_HONDURAS	EQU	504
CTRY_HONG_KONG	EQU	852
CTRY_HUNGARY	EQU	36
CTRY_ICELAND	EQU	354
CTRY_INDIA	EQU	91
CTRY_INDONESIA	EQU	62
CTRY_IRAN	EQU	981
CTRY_IRAQ	EQU	964
CTRY_IRELAND	EQU	353
CTRY_ISRAEL	EQU	972
CTRY_ITALY	EQU	39
CTRY_JAMAICA	EQU	1
CTRY_JAPAN	EQU	81
CTRY_JORDAN	EQU	962
CTRY_KAZAKSTAN	EQU	7
CTRY_KENYA	EQU	254
CTRY_KUWAIT	EQU	965
CTRY_KYRGYZSTAN	EQU	996
CTRY_LATVIA	EQU	371
CTRY_LEBANON	EQU	961
CTRY_LIBYA	EQU	218
CTRY_LIECHTENSTEIN	EQU	41
CTRY_LITHUANIA	EQU	370
CTRY_LUXEMBOURG	EQU	352
CTRY_MACAU	EQU	853
CTRY_MACEDONIA	EQU	389
CTRY_MALAYSIA	EQU	60
CTRY_MALDIVES	EQU	960
CTRY_MEXICO	EQU	52
CTRY_MONACO	EQU	33
CTRY_MONGOLIA	EQU	976
CTRY_MOROCCO	EQU	212
CTRY_NETHERLANDS	EQU	31
CTRY_NEW_ZEALAND	EQU	64
CTRY_NICARAGUA	EQU	505
CTRY_NORWAY	EQU	47
CTRY_OMAN	EQU	968
CTRY_PAKISTAN	EQU	92
CTRY_PANAMA	EQU	507
CTRY_PARAGUAY	EQU	595
CTRY_PERU	EQU	51
CTRY_PHILIPPINES	EQU	63
CTRY_POLAND	EQU	48
CTRY_PORTUGAL	EQU	351
CTRY_PRCHINA	EQU	86
CTRY_PUERTO_RICO	EQU	1
CTRY_QATAR	EQU	974
CTRY_ROMANIA	EQU	40
CTRY_RUSSIA	EQU	7
CTRY_SAUDI_ARABIA	EQU	966
CTRY_SERBIA	EQU	381
CTRY_SINGAPORE	EQU	65
CTRY_SLOVAK	EQU	421
CTRY_SLOVENIA	EQU	386
CTRY_SOUTH_AFRICA	EQU	27
CTRY_SOUTH_KOREA	EQU	82
CTRY_SPAIN	EQU	34
CTRY_SWEDEN	EQU	46
CTRY_SWITZERLAND	EQU	41
CTRY_SYRIA	EQU	963
CTRY_TAIWAN	EQU	886
CTRY_TATARSTAN	EQU	7
CTRY_THAILAND	EQU	66
CTRY_TRINIDAD_Y_TOBAGO	EQU	1
CTRY_TUNISIA	EQU	216
CTRY_TURKEY	EQU	90
CTRY_UAE	EQU	971
CTRY_UKRAINE	EQU	380
CTRY_UNITED_KINGDOM	EQU	44
CTRY_UNITED_STATES	EQU	1
CTRY_URUGUAY	EQU	598
CTRY_UZBEKISTAN	EQU	7
CTRY_VENEZUELA	EQU	58
CTRY_VIET_NAM	EQU	84
CTRY_YEMEN	EQU	967
CTRY_ZIMBABWE	EQU	263
LOCALE_NOUSEROVERRIDE	EQU	80000000h
LOCALE_USE_CP_ACP	EQU	40000000h
if (WINVER ge 0400h)
LOCALE_RETURN_NUMBER	EQU	20000000h
endif 
LOCALE_ILANGUAGE	EQU	00000001h
LOCALE_SLANGUAGE	EQU	00000002h
LOCALE_SENGLANGUAGE	EQU	00001001h
LOCALE_SABBREVLANGNAME	EQU	00000003h
LOCALE_SNATIVELANGNAME	EQU	00000004h
LOCALE_ICOUNTRY	EQU	00000005h
LOCALE_SCOUNTRY	EQU	00000006h
LOCALE_SENGCOUNTRY	EQU	00001002h
LOCALE_SABBREVCTRYNAME	EQU	00000007h
LOCALE_SNATIVECTRYNAME	EQU	00000008h
LOCALE_IDEFAULTLANGUAGE	EQU	00000009h
LOCALE_IDEFAULTCOUNTRY	EQU	0000000Ah
LOCALE_IDEFAULTCODEPAGE	EQU	0000000Bh
LOCALE_IDEFAULTANSICODEPAGE	EQU	00001004h
LOCALE_IDEFAULTMACCODEPAGE	EQU	00001011h
LOCALE_SLIST	EQU	0000000Ch
LOCALE_IMEASURE	EQU	0000000Dh
LOCALE_SDECIMAL	EQU	0000000Eh
LOCALE_STHOUSAND	EQU	0000000Fh
LOCALE_SGROUPING	EQU	00000010h
LOCALE_IDIGITS	EQU	00000011h
LOCALE_ILZERO	EQU	00000012h
LOCALE_INEGNUMBER	EQU	00001010h
LOCALE_SNATIVEDIGITS	EQU	00000013h
LOCALE_SCURRENCY	EQU	00000014h
LOCALE_SINTLSYMBOL	EQU	00000015h
LOCALE_SMONDECIMALSEP	EQU	00000016h
LOCALE_SMONTHOUSANDSEP	EQU	00000017h
LOCALE_SMONGROUPING	EQU	00000018h
LOCALE_ICURRDIGITS	EQU	00000019h
LOCALE_IINTLCURRDIGITS	EQU	0000001Ah
LOCALE_ICURRENCY	EQU	0000001Bh
LOCALE_INEGCURR	EQU	0000001Ch
LOCALE_SDATE	EQU	0000001Dh
LOCALE_STIME	EQU	0000001Eh
LOCALE_SSHORTDATE	EQU	0000001Fh
LOCALE_SLONGDATE	EQU	00000020h
LOCALE_STIMEFORMAT	EQU	00001003h
LOCALE_IDATE	EQU	00000021h
LOCALE_ILDATE	EQU	00000022h
LOCALE_ITIME	EQU	00000023h
LOCALE_ITIMEMARKPOSN	EQU	00001005h
LOCALE_ICENTURY	EQU	00000024h
LOCALE_ITLZERO	EQU	00000025h
LOCALE_IDAYLZERO	EQU	00000026h
LOCALE_IMONLZERO	EQU	00000027h
LOCALE_S1159	EQU	00000028h
LOCALE_S2359	EQU	00000029h
LOCALE_ICALENDARTYPE	EQU	00001009h
LOCALE_IOPTIONALCALENDAR	EQU	0000100Bh
LOCALE_IFIRSTDAYOFWEEK	EQU	0000100Ch
LOCALE_IFIRSTWEEKOFYEAR	EQU	0000100Dh
LOCALE_SDAYNAME1	EQU	0000002Ah
LOCALE_SDAYNAME2	EQU	0000002Bh
LOCALE_SDAYNAME3	EQU	0000002Ch
LOCALE_SDAYNAME4	EQU	0000002Dh
LOCALE_SDAYNAME5	EQU	0000002Eh
LOCALE_SDAYNAME6	EQU	0000002Fh
LOCALE_SDAYNAME7	EQU	00000030h
LOCALE_SABBREVDAYNAME1	EQU	00000031h
LOCALE_SABBREVDAYNAME2	EQU	00000032h
LOCALE_SABBREVDAYNAME3	EQU	00000033h
LOCALE_SABBREVDAYNAME4	EQU	00000034h
LOCALE_SABBREVDAYNAME5	EQU	00000035h
LOCALE_SABBREVDAYNAME6	EQU	00000036h
LOCALE_SABBREVDAYNAME7	EQU	00000037h
LOCALE_SMONTHNAME1	EQU	00000038h
LOCALE_SMONTHNAME2	EQU	00000039h
LOCALE_SMONTHNAME3	EQU	0000003Ah
LOCALE_SMONTHNAME4	EQU	0000003Bh
LOCALE_SMONTHNAME5	EQU	0000003Ch
LOCALE_SMONTHNAME6	EQU	0000003Dh
LOCALE_SMONTHNAME7	EQU	0000003Eh
LOCALE_SMONTHNAME8	EQU	0000003Fh
LOCALE_SMONTHNAME9	EQU	00000040h
LOCALE_SMONTHNAME10	EQU	00000041h
LOCALE_SMONTHNAME11	EQU	00000042h
LOCALE_SMONTHNAME12	EQU	00000043h
LOCALE_SMONTHNAME13	EQU	0000100Eh
LOCALE_SABBREVMONTHNAME1	EQU	00000044h
LOCALE_SABBREVMONTHNAME2	EQU	00000045h
LOCALE_SABBREVMONTHNAME3	EQU	00000046h
LOCALE_SABBREVMONTHNAME4	EQU	00000047h
LOCALE_SABBREVMONTHNAME5	EQU	00000048h
LOCALE_SABBREVMONTHNAME6	EQU	00000049h
LOCALE_SABBREVMONTHNAME7	EQU	0000004Ah
LOCALE_SABBREVMONTHNAME8	EQU	0000004Bh
LOCALE_SABBREVMONTHNAME9	EQU	0000004Ch
LOCALE_SABBREVMONTHNAME10	EQU	0000004Dh
LOCALE_SABBREVMONTHNAME11	EQU	0000004Eh
LOCALE_SABBREVMONTHNAME12	EQU	0000004Fh
LOCALE_SABBREVMONTHNAME13	EQU	0000100Fh
LOCALE_SPOSITIVESIGN	EQU	00000050h
LOCALE_SNEGATIVESIGN	EQU	00000051h
LOCALE_IPOSSIGNPOSN	EQU	00000052h
LOCALE_INEGSIGNPOSN	EQU	00000053h
LOCALE_IPOSSYMPRECEDES	EQU	00000054h
LOCALE_IPOSSEPBYSPACE	EQU	00000055h
LOCALE_INEGSYMPRECEDES	EQU	00000056h
LOCALE_INEGSEPBYSPACE	EQU	00000057h
if (WINVER ge 0400h)
LOCALE_FONTSIGNATURE	EQU	00000058h
LOCALE_SISO639LANGNAME	EQU	00000059h
LOCALE_SISO3166CTRYNAME	EQU	0000005Ah
endif 
if (WINVER ge 0500h)
LOCALE_IDEFAULTEBCDICCODEPAGE	EQU	00001012h
LOCALE_IPAPERSIZE	EQU	0000100Ah
LOCALE_SENGCURRNAME	EQU	00001007h
LOCALE_SNATIVECURRNAME	EQU	00001008h
LOCALE_SYEARMONTH	EQU	00001006h
LOCALE_SSORTNAME	EQU	00001013h
LOCALE_IDIGITSUBSTITUTION	EQU	00001014h
endif 
TIME_NOMINUTESORSECONDS	EQU	00000001h
TIME_NOSECONDS	EQU	00000002h
TIME_NOTIMEMARKER	EQU	00000004h
TIME_FORCE24HOURFORMAT	EQU	00000008h
DATE_SHORTDATE	EQU	00000001h
DATE_LONGDATE	EQU	00000002h
DATE_USE_ALT_CALENDAR	EQU	00000004h
if (WINVER ge 0500h)
DATE_YEARMONTH	EQU	00000008h
DATE_LTRREADING	EQU	00000010h
DATE_RTLREADING	EQU	00000020h
endif 
if (WINVER ge 0500h)
CAL_NOUSEROVERRIDE	EQU	<LOCALE_NOUSEROVERRIDE>
CAL_USE_CP_ACP	EQU	<LOCALE_USE_CP_ACP>
CAL_RETURN_NUMBER	EQU	<LOCALE_RETURN_NUMBER>
endif 
CAL_ICALINTVALUE	EQU	00000001h
CAL_SCALNAME	EQU	00000002h
CAL_IYEAROFFSETRANGE	EQU	00000003h
CAL_SERASTRING	EQU	00000004h
CAL_SSHORTDATE	EQU	00000005h
CAL_SLONGDATE	EQU	00000006h
CAL_SDAYNAME1	EQU	00000007h
CAL_SDAYNAME2	EQU	00000008h
CAL_SDAYNAME3	EQU	00000009h
CAL_SDAYNAME4	EQU	0000000ah
CAL_SDAYNAME5	EQU	0000000bh
CAL_SDAYNAME6	EQU	0000000ch
CAL_SDAYNAME7	EQU	0000000dh
CAL_SABBREVDAYNAME1	EQU	0000000eh
CAL_SABBREVDAYNAME2	EQU	0000000fh
CAL_SABBREVDAYNAME3	EQU	00000010h
CAL_SABBREVDAYNAME4	EQU	00000011h
CAL_SABBREVDAYNAME5	EQU	00000012h
CAL_SABBREVDAYNAME6	EQU	00000013h
CAL_SABBREVDAYNAME7	EQU	00000014h
CAL_SMONTHNAME1	EQU	00000015h
CAL_SMONTHNAME2	EQU	00000016h
CAL_SMONTHNAME3	EQU	00000017h
CAL_SMONTHNAME4	EQU	00000018h
CAL_SMONTHNAME5	EQU	00000019h
CAL_SMONTHNAME6	EQU	0000001ah
CAL_SMONTHNAME7	EQU	0000001bh
CAL_SMONTHNAME8	EQU	0000001ch
CAL_SMONTHNAME9	EQU	0000001dh
CAL_SMONTHNAME10	EQU	0000001eh
CAL_SMONTHNAME11	EQU	0000001fh
CAL_SMONTHNAME12	EQU	00000020h
CAL_SMONTHNAME13	EQU	00000021h
CAL_SABBREVMONTHNAME1	EQU	00000022h
CAL_SABBREVMONTHNAME2	EQU	00000023h
CAL_SABBREVMONTHNAME3	EQU	00000024h
CAL_SABBREVMONTHNAME4	EQU	00000025h
CAL_SABBREVMONTHNAME5	EQU	00000026h
CAL_SABBREVMONTHNAME6	EQU	00000027h
CAL_SABBREVMONTHNAME7	EQU	00000028h
CAL_SABBREVMONTHNAME8	EQU	00000029h
CAL_SABBREVMONTHNAME9	EQU	0000002ah
CAL_SABBREVMONTHNAME10	EQU	0000002bh
CAL_SABBREVMONTHNAME11	EQU	0000002ch
CAL_SABBREVMONTHNAME12	EQU	0000002dh
CAL_SABBREVMONTHNAME13	EQU	0000002eh
if (WINVER ge 0500h)
CAL_SYEARMONTH	EQU	0000002fh
CAL_ITWODIGITYEARMAX	EQU	00000030h
endif 
ENUM_ALL_CALENDARS	EQU	0ffffffffh
CAL_GREGORIAN	EQU	1
CAL_GREGORIAN_US	EQU	2
CAL_JAPAN	EQU	3
CAL_TAIWAN	EQU	4
CAL_KOREA	EQU	5
CAL_HIJRI	EQU	6
CAL_THAI	EQU	7
CAL_HEBREW	EQU	8
CAL_GREGORIAN_ME_FRENCH	EQU	9
CAL_GREGORIAN_ARABIC	EQU	10
CAL_GREGORIAN_XLIT_ENGLISH	EQU	11
CAL_GREGORIAN_XLIT_FRENCH	EQU	12
LGRPID_WESTERN_EUROPE	EQU	0001h
LGRPID_CENTRAL_EUROPE	EQU	0002h
LGRPID_BALTIC	EQU	0003h
LGRPID_GREEK	EQU	0004h
LGRPID_CYRILLIC	EQU	0005h
LGRPID_TURKISH	EQU	0006h
LGRPID_JAPANESE	EQU	0007h
LGRPID_KOREAN	EQU	0008h
LGRPID_TRADITIONAL_CHINESE	EQU	0009h
LGRPID_SIMPLIFIED_CHINESE	EQU	000ah
LGRPID_THAI	EQU	000bh
LGRPID_HEBREW	EQU	000ch
LGRPID_ARABIC	EQU	000dh
LGRPID_VIETNAMESE	EQU	000eh
LGRPID_INDIC	EQU	000fh
LGRPID_GEORGIAN	EQU	0010h
LGRPID_ARMENIAN	EQU	0011h
LGRPID typedef DWORD
LCTYPE typedef DWORD
CALTYPE typedef DWORD
CALID typedef DWORD
CPINFO	struct 
MaxCharSize	DWORD	?
DefaultChar	BYTE MAX_DEFAULTCHAR dup (?)
LeadByte	BYTE MAX_LEADBYTES dup (?)
CPINFO	ends

LPCPINFO typedef ptr CPINFO

CPINFOEXA	struct 
MaxCharSize	DWORD	?
DefaultChar	BYTE MAX_DEFAULTCHAR dup (?)
LeadByte	BYTE MAX_LEADBYTES dup (?)
UnicodeDefaultChar	WCHAR	?
CodePage	DWORD	?
CodePageName	CHAR MAX_PATH dup (?)
CPINFOEXA	ends

LPCPINFOEXA typedef ptr CPINFOEXA

CPINFOEXW	struct 
MaxCharSize	DWORD	?
DefaultChar	BYTE MAX_DEFAULTCHAR dup (?)
LeadByte	BYTE MAX_LEADBYTES dup (?)
UnicodeDefaultChar	WCHAR	?
CodePage	DWORD	?
CodePageName	WCHAR MAX_PATH dup (?)
CPINFOEXW	ends

LPCPINFOEXW typedef ptr CPINFOEXW

ifdef UNICODE
CPINFOEX typedef CPINFOEXW
LPCPINFOEX typedef LPCPINFOEXW
else 
CPINFOEX typedef CPINFOEXA
LPCPINFOEX typedef LPCPINFOEXA
endif 
NUMBERFMTA	struct 
NumDigits	DWORD	?
LeadingZero	DWORD	?
Grouping	DWORD	?
lpDecimalSep	LPSTR	?
lpThousandSep	LPSTR	?
NegativeOrder	DWORD	?
NUMBERFMTA	ends

LPNUMBERFMTA typedef ptr NUMBERFMTA

NUMBERFMTW	struct 
NumDigits	DWORD	?
LeadingZero	DWORD	?
Grouping	DWORD	?
lpDecimalSep	LPWSTR	?
lpThousandSep	LPWSTR	?
NegativeOrder	DWORD	?
NUMBERFMTW	ends

LPNUMBERFMTW typedef ptr NUMBERFMTW

ifdef UNICODE
NUMBERFMT typedef NUMBERFMTW
LPNUMBERFMT typedef LPNUMBERFMTW
else 
NUMBERFMT typedef NUMBERFMTA
LPNUMBERFMT typedef LPNUMBERFMTA
endif 
CURRENCYFMTA	struct 
NumDigits	DWORD	?
LeadingZero	DWORD	?
Grouping	DWORD	?
lpDecimalSep	LPSTR	?
lpThousandSep	LPSTR	?
NegativeOrder	DWORD	?
PositiveOrder	DWORD	?
lpCurrencySymbol	LPSTR	?
CURRENCYFMTA	ends

LPCURRENCYFMTA typedef ptr CURRENCYFMTA

CURRENCYFMTW	struct 
NumDigits	DWORD	?
LeadingZero	DWORD	?
Grouping	DWORD	?
lpDecimalSep	LPWSTR	?
lpThousandSep	LPWSTR	?
NegativeOrder	DWORD	?
PositiveOrder	DWORD	?
lpCurrencySymbol	LPWSTR	?
CURRENCYFMTW	ends

LPCURRENCYFMTW typedef ptr CURRENCYFMTW

ifdef UNICODE
CURRENCYFMT typedef CURRENCYFMTW
LPCURRENCYFMT typedef LPCURRENCYFMTW
else 
CURRENCYFMT typedef CURRENCYFMTA
LPCURRENCYFMT typedef LPCURRENCYFMTA
endif 
GEOID typedef SDWORD
GEOTYPE typedef DWORD
GEOCLASS typedef DWORD
GEOID_NOT_AVAILABLE	EQU	- 1
SYSGEOTYPE typedef DWORD
GEO_NATION = 0001h 
GEO_LATITUDE = 0002h 
GEO_LONGITUDE = 0003h 
GEO_ISO2 = 0004h 
GEO_ISO3 = 0005h 
GEO_RFC1766 = 0006h 
GEO_LCID = 0007h 
GEO_FRIENDLYNAME = 0008h 
GEO_OFFICIALNAME = 0009h 
GEO_TIMEZONES = 000Ah 
GEO_OFFICIALLANGUAGES = 000Bh 

SYSGEOCLASS typedef DWORD
GEOCLASS_NATION = 16 
GEOCLASS_REGION = 14 

ifdef STRICT
proto_LANGUAGEGROUP_ENUMPROCA typedef proto WINSTDCALLCONV :LGRPID,:LPSTR,:LPSTR,:DWORD,:LONG_PTR
LANGUAGEGROUP_ENUMPROCA typedef ptr proto_LANGUAGEGROUP_ENUMPROCA
proto_LANGGROUPLOCALE_ENUMPROCA typedef proto WINSTDCALLCONV :LGRPID,:LCID,:LPSTR,:LONG_PTR
LANGGROUPLOCALE_ENUMPROCA typedef ptr proto_LANGGROUPLOCALE_ENUMPROCA
proto_UILANGUAGE_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR,:LONG_PTR
UILANGUAGE_ENUMPROCA typedef ptr proto_UILANGUAGE_ENUMPROCA
proto_LOCALE_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR
LOCALE_ENUMPROCA typedef ptr proto_LOCALE_ENUMPROCA
proto_CODEPAGE_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR
CODEPAGE_ENUMPROCA typedef ptr proto_CODEPAGE_ENUMPROCA
proto_DATEFMT_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR
DATEFMT_ENUMPROCA typedef ptr proto_DATEFMT_ENUMPROCA
proto_DATEFMT_ENUMPROCEXA typedef proto WINSTDCALLCONV :LPSTR,:CALID
DATEFMT_ENUMPROCEXA typedef ptr proto_DATEFMT_ENUMPROCEXA
proto_TIMEFMT_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR
TIMEFMT_ENUMPROCA typedef ptr proto_TIMEFMT_ENUMPROCA
proto_CALINFO_ENUMPROCA typedef proto WINSTDCALLCONV :LPSTR
CALINFO_ENUMPROCA typedef ptr proto_CALINFO_ENUMPROCA
proto_CALINFO_ENUMPROCEXA typedef proto WINSTDCALLCONV :LPSTR,:CALID
CALINFO_ENUMPROCEXA typedef ptr proto_CALINFO_ENUMPROCEXA

proto_LANGUAGEGROUP_ENUMPROCW typedef proto WINSTDCALLCONV :LGRPID,:LPWSTR,:LPWSTR,:DWORD,:LONG_PTR
LANGUAGEGROUP_ENUMPROCW typedef ptr proto_LANGUAGEGROUP_ENUMPROCW
proto_LANGGROUPLOCALE_ENUMPROCW typedef proto WINSTDCALLCONV :LGRPID,:LCID,:LPWSTR,:LONG_PTR
LANGGROUPLOCALE_ENUMPROCW typedef ptr proto_LANGGROUPLOCALE_ENUMPROCW
proto_UILANGUAGE_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR,:LONG_PTR
UILANGUAGE_ENUMPROCW typedef ptr proto_UILANGUAGE_ENUMPROCW
proto_LOCALE_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR
LOCALE_ENUMPROCW typedef ptr proto_LOCALE_ENUMPROCW
proto_CODEPAGE_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR
CODEPAGE_ENUMPROCW typedef ptr proto_CODEPAGE_ENUMPROCW
proto_DATEFMT_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR
DATEFMT_ENUMPROCW typedef ptr proto_DATEFMT_ENUMPROCW
proto_DATEFMT_ENUMPROCEXW typedef proto WINSTDCALLCONV :LPWSTR,:CALID
DATEFMT_ENUMPROCEXW typedef ptr proto_DATEFMT_ENUMPROCEXW
proto_TIMEFMT_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR
TIMEFMT_ENUMPROCW typedef ptr proto_TIMEFMT_ENUMPROCW
proto_CALINFO_ENUMPROCW typedef proto WINSTDCALLCONV :LPWSTR
CALINFO_ENUMPROCW typedef ptr proto_CALINFO_ENUMPROCW
proto_CALINFO_ENUMPROCEXW typedef proto WINSTDCALLCONV :LPWSTR,:CALID
CALINFO_ENUMPROCEXW typedef ptr proto_CALINFO_ENUMPROCEXW

proto_GEO_ENUMPROC typedef proto WINSTDCALLCONV :GEOID
GEO_ENUMPROC typedef ptr proto_GEO_ENUMPROC

else

LANGUAGEGROUP_ENUMPROCA typedef FARPROC
LANGGROUPLOCALE_ENUMPROCA typedef FARPROC
UILANGUAGE_ENUMPROCA typedef FARPROC
LOCALE_ENUMPROCA typedef FARPROC
CODEPAGE_ENUMPROCA typedef FARPROC
DATEFMT_ENUMPROCA typedef FARPROC
DATEFMT_ENUMPROCEXA typedef FARPROC
TIMEFMT_ENUMPROCA typedef FARPROC
CALINFO_ENUMPROCA typedef FARPROC
CALINFO_ENUMPROCEXA typedef FARPROC
GEO_ENUMPROC typedef FARPROC
LANGUAGEGROUP_ENUMPROCW typedef FARPROC
LANGGROUPLOCALE_ENUMPROCW typedef FARPROC
UILANGUAGE_ENUMPROCW typedef FARPROC
LOCALE_ENUMPROCW typedef FARPROC
CODEPAGE_ENUMPROCW typedef FARPROC
DATEFMT_ENUMPROCW typedef FARPROC
DATEFMT_ENUMPROCEXW typedef FARPROC
TIMEFMT_ENUMPROCW typedef FARPROC
CALINFO_ENUMPROCW typedef FARPROC
CALINFO_ENUMPROCEXW typedef FARPROC
endif 
ifdef UNICODE
LANGUAGEGROUP_ENUMPROC	EQU	<LANGUAGEGROUP_ENUMPROCW>
LANGGROUPLOCALE_ENUMPROC	EQU	<LANGGROUPLOCALE_ENUMPROCW>
UILANGUAGE_ENUMPROC	EQU	<UILANGUAGE_ENUMPROCW>
LOCALE_ENUMPROC	EQU	<LOCALE_ENUMPROCW>
CODEPAGE_ENUMPROC	EQU	<CODEPAGE_ENUMPROCW>
DATEFMT_ENUMPROC	EQU	<DATEFMT_ENUMPROCW>
DATEFMT_ENUMPROCEX	EQU	<DATEFMT_ENUMPROCEXW>
TIMEFMT_ENUMPROC	EQU	<TIMEFMT_ENUMPROCW>
CALINFO_ENUMPROC	EQU	<CALINFO_ENUMPROCW>
CALINFO_ENUMPROCEX	EQU	<CALINFO_ENUMPROCEXW>
else 
LANGUAGEGROUP_ENUMPROC	EQU	<LANGUAGEGROUP_ENUMPROCA>
LANGGROUPLOCALE_ENUMPROC	EQU	<LANGGROUPLOCALE_ENUMPROCA>
UILANGUAGE_ENUMPROC	EQU	<UILANGUAGE_ENUMPROCA>
LOCALE_ENUMPROC	EQU	<LOCALE_ENUMPROCA>
CODEPAGE_ENUMPROC	EQU	<CODEPAGE_ENUMPROCA>
DATEFMT_ENUMPROC	EQU	<DATEFMT_ENUMPROCA>
DATEFMT_ENUMPROCEX	EQU	<DATEFMT_ENUMPROCEXA>
TIMEFMT_ENUMPROC	EQU	<TIMEFMT_ENUMPROCA>
CALINFO_ENUMPROC	EQU	<CALINFO_ENUMPROCA>
CALINFO_ENUMPROCEX	EQU	<CALINFO_ENUMPROCEXA>
endif 
@DefProto WINBASEAPI, IsValidCodePage, stdcall, , <:DWORD>, 4
@DefProto WINBASEAPI, GetACP, stdcall, , <>, 0
@DefProto WINBASEAPI, GetOEMCP, stdcall, , <>, 0
@DefProto WINBASEAPI, GetCPInfo, stdcall, , <:DWORD, :LPCPINFO>, 8
@DefProto WINBASEAPI, GetCPInfoExA, stdcall, , <:DWORD, :DWORD, :LPCPINFOEXA>, 12
@DefProto WINBASEAPI, GetCPInfoExW, stdcall, , <:DWORD, :DWORD, :LPCPINFOEXW>, 12
ifdef UNICODE
GetCPInfoEx	EQU	<GetCPInfoExW>
else 
GetCPInfoEx	EQU	<GetCPInfoExA>
endif 
@DefProto WINBASEAPI, IsDBCSLeadByte, stdcall, , <:BYTE>, 4
@DefProto WINBASEAPI, IsDBCSLeadByteEx, stdcall, , <:DWORD, :BYTE>, 8
@DefProto WINBASEAPI, MultiByteToWideChar, stdcall, , <:DWORD, :DWORD, :LPSTR, :DWORD, :LPWSTR, :DWORD>, 24
@DefProto WINBASEAPI, WideCharToMultiByte, stdcall, , <:DWORD, :DWORD, :LPWSTR, :DWORD, :LPSTR, :DWORD, :LPSTR, :LPBOOL>, 32
@DefProto WINBASEAPI, CompareStringA, stdcall, , <:LCID, :DWORD, :LPSTR, :DWORD, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, CompareStringW, stdcall, , <:LCID, :DWORD, :LPWSTR, :DWORD, :LPWSTR, :DWORD>, 24
ifdef UNICODE
CompareString	EQU	<CompareStringW>
else 
CompareString	EQU	<CompareStringA>
endif 
@DefProto WINBASEAPI, LCMapStringA, stdcall, , <:LCID, :DWORD, :LPSTR, :DWORD, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, LCMapStringW, stdcall, , <:LCID, :DWORD, :LPWSTR, :DWORD, :LPWSTR, :DWORD>, 24
ifdef UNICODE
LCMapString	EQU	<LCMapStringW>
else 
LCMapString	EQU	<LCMapStringA>
endif 
@DefProto WINBASEAPI, GetLocaleInfoA, stdcall, , <:LCID, :LCTYPE, :LPSTR, :DWORD>, 16
@DefProto WINBASEAPI, GetLocaleInfoW, stdcall, , <:LCID, :LCTYPE, :LPWSTR, :DWORD>, 16
ifdef UNICODE
GetLocaleInfo	EQU	<GetLocaleInfoW>
else 
GetLocaleInfo	EQU	<GetLocaleInfoA>
endif 
@DefProto WINBASEAPI, SetLocaleInfoA, stdcall, , <:LCID, :LCTYPE, :LPSTR>, 12
@DefProto WINBASEAPI, SetLocaleInfoW, stdcall, , <:LCID, :LCTYPE, :LPWSTR>, 12
ifdef UNICODE
SetLocaleInfo	EQU	<SetLocaleInfoW>
else 
SetLocaleInfo	EQU	<SetLocaleInfoA>
endif 
if (WINVER ge 040Ah)
@DefProto WINBASEAPI, GetCalendarInfoA, stdcall, , <:LCID, :CALID, :CALTYPE, :LPSTR, :DWORD, :LPDWORD>, 24
@DefProto WINBASEAPI, GetCalendarInfoW, stdcall, , <:LCID, :CALID, :CALTYPE, :LPWSTR, :DWORD, :LPDWORD>, 24
ifdef UNICODE
GetCalendarInfo	EQU	<GetCalendarInfoW>
else 
GetCalendarInfo	EQU	<GetCalendarInfoA>
endif 
@DefProto WINBASEAPI, SetCalendarInfoA, stdcall, , <:LCID, :CALID, :CALTYPE, :LPSTR>, 16
@DefProto WINBASEAPI, SetCalendarInfoW, stdcall, , <:LCID, :CALID, :CALTYPE, :LPWSTR>, 16
ifdef UNICODE
SetCalendarInfo	EQU	<SetCalendarInfoW>
else 
SetCalendarInfo	EQU	<SetCalendarInfoA>
endif 
endif 
@DefProto WINBASEAPI, GetTimeFormatA, stdcall, , <:LCID, :DWORD, :ptr SYSTEMTIME, :LPSTR, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, GetTimeFormatW, stdcall, , <:LCID, :DWORD, :ptr SYSTEMTIME, :LPWSTR, :LPWSTR, :DWORD>, 24
ifdef UNICODE
GetTimeFormat	EQU	<GetTimeFormatW>
else 
GetTimeFormat	EQU	<GetTimeFormatA>
endif 
@DefProto WINBASEAPI, GetDateFormatA, stdcall, , <:LCID, :DWORD, :ptr SYSTEMTIME, :LPSTR, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, GetDateFormatW, stdcall, , <:LCID, :DWORD, :ptr SYSTEMTIME, :LPWSTR, :LPWSTR, :DWORD>, 24
ifdef UNICODE
GetDateFormat	EQU	<GetDateFormatW>
else 
GetDateFormat	EQU	<GetDateFormatA>
endif 
@DefProto WINBASEAPI, GetNumberFormatA, stdcall, , <:LCID, :DWORD, :LPSTR, :ptr NUMBERFMTA, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, GetNumberFormatW, stdcall, , <:LCID, :DWORD, :LPWSTR, :ptr NUMBERFMTW, :LPWSTR, :DWORD>, 24
ifdef UNICODE
GetNumberFormat	EQU	<GetNumberFormatW>
else 
GetNumberFormat	EQU	<GetNumberFormatA>
endif 
@DefProto WINBASEAPI, GetCurrencyFormatA, stdcall, , <:LCID, :DWORD, :LPSTR, :ptr CURRENCYFMTA, :LPSTR, :DWORD>, 24
@DefProto WINBASEAPI, GetCurrencyFormatW, stdcall, , <:LCID, :DWORD, :LPWSTR, :ptr CURRENCYFMTW, :LPWSTR, :DWORD>, 24
ifdef UNICODE
GetCurrencyFormat	EQU	<GetCurrencyFormatW>
else 
GetCurrencyFormat	EQU	<GetCurrencyFormatA>
endif 
@DefProto WINBASEAPI, EnumCalendarInfoA, stdcall, , <:CALINFO_ENUMPROCA, :LCID, :CALID, :CALTYPE>, 16
@DefProto WINBASEAPI, EnumCalendarInfoW, stdcall, , <:CALINFO_ENUMPROCW, :LCID, :CALID, :CALTYPE>, 16
ifdef UNICODE
EnumCalendarInfo	EQU	<EnumCalendarInfoW>
else 
EnumCalendarInfo	EQU	<EnumCalendarInfoA>
endif 
if (WINVER ge 0500h)
@DefProto WINBASEAPI, EnumCalendarInfoExA, stdcall, , <:CALINFO_ENUMPROCEXA, :LCID, :CALID, :CALTYPE>, 16
@DefProto WINBASEAPI, EnumCalendarInfoExW, stdcall, , <:CALINFO_ENUMPROCEXW, :LCID, :CALID, :CALTYPE>, 16
ifdef UNICODE
EnumCalendarInfoEx	EQU	<EnumCalendarInfoExW>
else 
EnumCalendarInfoEx	EQU	<EnumCalendarInfoExA>
endif 
endif 
@DefProto WINBASEAPI, EnumTimeFormatsA, stdcall, , <:TIMEFMT_ENUMPROCA, :LCID, :DWORD>, 12
@DefProto WINBASEAPI, EnumTimeFormatsW, stdcall, , <:TIMEFMT_ENUMPROCW, :LCID, :DWORD>, 12
ifdef UNICODE
EnumTimeFormats	EQU	<EnumTimeFormatsW>
else 
EnumTimeFormats	EQU	<EnumTimeFormatsA>
endif 
@DefProto WINBASEAPI, EnumDateFormatsA, stdcall, , <:DATEFMT_ENUMPROCA, :LCID, :DWORD>, 12
@DefProto WINBASEAPI, EnumDateFormatsW, stdcall, , <:DATEFMT_ENUMPROCW, :LCID, :DWORD>, 12
ifdef UNICODE
EnumDateFormats	EQU	<EnumDateFormatsW>
else 
EnumDateFormats	EQU	<EnumDateFormatsA>
endif 
if (WINVER ge 0500h)
@DefProto WINBASEAPI, EnumDateFormatsExA, stdcall, , <:DATEFMT_ENUMPROCEXA, :LCID, :DWORD>, 12
@DefProto WINBASEAPI, EnumDateFormatsExW, stdcall, , <:DATEFMT_ENUMPROCEXW, :LCID, :DWORD>, 12
ifdef UNICODE
EnumDateFormatsEx	EQU	<EnumDateFormatsExW>
else 
EnumDateFormatsEx	EQU	<EnumDateFormatsExA>
endif 
endif 
if (WINVER ge 0500h)
@DefProto WINBASEAPI, IsValidLanguageGroup, stdcall, , <:LGRPID, :DWORD>, 8
endif 
@DefProto WINBASEAPI, IsValidLocale, stdcall, , <:LCID, :DWORD>, 8
@DefProto WINBASEAPI, GetGeoInfoA, stdcall, , <:GEOID, :GEOTYPE, :LPSTR, :DWORD, :LANGID>, 20
@DefProto WINBASEAPI, GetGeoInfoW, stdcall, , <:GEOID, :GEOTYPE, :LPWSTR, :DWORD, :LANGID>, 20
ifdef UNICODE
GetGeoInfo	EQU	<GetGeoInfoW>
else 
GetGeoInfo	EQU	<GetGeoInfoA>
endif 
@DefProto WINBASEAPI, EnumSystemGeoID, stdcall, , <:GEOCLASS, :GEOID, :GEO_ENUMPROC>, 12
@DefProto WINBASEAPI, GetUserGeoID, stdcall, , <:GEOCLASS>, 4
@DefProto WINBASEAPI, SetUserGeoID, stdcall, , <:GEOID>, 4
@DefProto WINBASEAPI, ConvertDefaultLocale, stdcall, , <:LCID>, 4
@DefProto WINBASEAPI, GetThreadLocale, stdcall, , <>, 0
@DefProto WINBASEAPI, SetThreadLocale, stdcall, , <:LCID>, 4
if (WINVER ge 0500h)
@DefProto WINBASEAPI, GetSystemDefaultUILanguage, stdcall, , <>, 0
@DefProto WINBASEAPI, GetUserDefaultUILanguage, stdcall, , <>, 0
endif 
@DefProto WINBASEAPI, GetSystemDefaultLangID, stdcall, , <>, 0
@DefProto WINBASEAPI, GetUserDefaultLangID, stdcall, , <>, 0
@DefProto WINBASEAPI, GetSystemDefaultLCID, stdcall, , <>, 0
@DefProto WINBASEAPI, GetUserDefaultLCID, stdcall, , <>, 0
@DefProto WINBASEAPI, GetStringTypeExA, stdcall, , <:LCID, :DWORD, :LPSTR, :DWORD, :LPWORD>, 20
@DefProto WINBASEAPI, GetStringTypeExW, stdcall, , <:LCID, :DWORD, :LPWSTR, :DWORD, :LPWORD>, 20
ifdef UNICODE
GetStringTypeEx	EQU	<GetStringTypeExW>
else 
GetStringTypeEx	EQU	<GetStringTypeExA>
endif 
@DefProto WINBASEAPI, GetStringTypeA, stdcall, , <:LCID, :DWORD, :LPSTR, :DWORD, :LPWORD>, 20
@DefProto WINBASEAPI, GetStringTypeW, stdcall, , <:DWORD, :LPWSTR, :DWORD, :LPWORD>, 16
@DefProto WINBASEAPI, FoldStringA, stdcall, , <:DWORD, :LPSTR, :DWORD, :LPSTR, :DWORD>, 20
@DefProto WINBASEAPI, FoldStringW, stdcall, , <:DWORD, :LPWSTR, :DWORD, :LPWSTR, :DWORD>, 20
ifdef UNICODE
FoldString	EQU	<FoldStringW>
else 
FoldString	EQU	<FoldStringA>
endif 
if (WINVER ge 0500h)
@DefProto WINBASEAPI, EnumSystemLanguageGroupsA, stdcall, , <:LANGUAGEGROUP_ENUMPROCA, :DWORD, :LONG_PTR>, 12
@DefProto WINBASEAPI, EnumSystemLanguageGroupsW, stdcall, , <:LANGUAGEGROUP_ENUMPROCW, :DWORD, :LONG_PTR>, 12
ifdef UNICODE
EnumSystemLanguageGroups	EQU	<EnumSystemLanguageGroupsW>
else 
EnumSystemLanguageGroups	EQU	<EnumSystemLanguageGroupsA>
endif 
@DefProto WINBASEAPI, EnumLanguageGroupLocalesA, stdcall, , <:LANGGROUPLOCALE_ENUMPROCA, :LGRPID, :DWORD, :LONG_PTR>, 16
@DefProto WINBASEAPI, EnumLanguageGroupLocalesW, stdcall, , <:LANGGROUPLOCALE_ENUMPROCW, :LGRPID, :DWORD, :LONG_PTR>, 16
ifdef UNICODE
EnumLanguageGroupLocales	EQU	<EnumLanguageGroupLocalesW>
else 
EnumLanguageGroupLocales	EQU	<EnumLanguageGroupLocalesA>
endif 
@DefProto WINBASEAPI, EnumUILanguagesA, stdcall, , <:UILANGUAGE_ENUMPROCA, :DWORD, :LONG_PTR>, 12
@DefProto WINBASEAPI, EnumUILanguagesW, stdcall, , <:UILANGUAGE_ENUMPROCW, :DWORD, :LONG_PTR>, 12
ifdef UNICODE
EnumUILanguages	EQU	<EnumUILanguagesW>
else 
EnumUILanguages	EQU	<EnumUILanguagesA>
endif 
endif 
@DefProto WINBASEAPI, EnumSystemLocalesA, stdcall, , <:LOCALE_ENUMPROCA, :DWORD>, 8
@DefProto WINBASEAPI, EnumSystemLocalesW, stdcall, , <:LOCALE_ENUMPROCW, :DWORD>, 8
ifdef UNICODE
EnumSystemLocales	EQU	<EnumSystemLocalesW>
else 
EnumSystemLocales	EQU	<EnumSystemLocalesA>
endif 
@DefProto WINBASEAPI, EnumSystemCodePagesA, stdcall, , <:CODEPAGE_ENUMPROCA, :DWORD>, 8
@DefProto WINBASEAPI, EnumSystemCodePagesW, stdcall, , <:CODEPAGE_ENUMPROCW, :DWORD>, 8
ifdef UNICODE
EnumSystemCodePages	EQU	<EnumSystemCodePagesW>
else 
EnumSystemCodePages	EQU	<EnumSystemCodePagesA>
endif 
endif 
ifdef __cplusplus
;}
endif 
endif 

;--- errors: 0
;--- end of file ---
