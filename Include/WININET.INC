;--- include file created by h2incx v0.99.11, copyright 2005 japheth
;--- source file: c:\programme\devstudio\vc6\include\WININET.H, last modified: 4/24/1998 0:0

if  0 eq defined(_WININET_)
_WININET_	EQU	<>
;#pragma pack ( push , wininet , 4 ) 
ifndef defined
defined macro x
ifdef x
  exitm <-1>
else
  exitm <0>
endif
endm
endif
if defined(__cplusplus)
;extern "C"
;{
endif 
if  0 eq defined(_WINX32_)
INTERNETAPI	EQU	<DECLSPEC_IMPORT>
URLCACHEAPI	EQU	<DECLSPEC_IMPORT>
else 
INTERNETAPI	EQU	<>
URLCACHEAPI	EQU	<>
endif 
BOOLAPI	EQU	<INTERNETAPI BOOL WINAPI>
HINTERNET typedef LPVOID
LPHINTERNET typedef ptr HINTERNET
INTERNET_PORT typedef WORD
LPINTERNET_PORT typedef ptr INTERNET_PORT
INTERNET_INVALID_PORT_NUMBER	EQU	0
INTERNET_DEFAULT_FTP_PORT	EQU	21
INTERNET_DEFAULT_GOPHER_PORT	EQU	70
INTERNET_DEFAULT_HTTP_PORT	EQU	80
INTERNET_DEFAULT_HTTPS_PORT	EQU	443
INTERNET_DEFAULT_SOCKS_PORT	EQU	1080
INTERNET_MAX_HOST_NAME_LENGTH	EQU	256
INTERNET_MAX_USER_NAME_LENGTH	EQU	128
INTERNET_MAX_PASSWORD_LENGTH	EQU	128
INTERNET_MAX_PORT_NUMBER_LENGTH	EQU	5
INTERNET_MAX_PORT_NUMBER_VALUE	EQU	65535
INTERNET_MAX_PATH_LENGTH	EQU	2048
INTERNET_MAX_SCHEME_LENGTH	EQU	32
INTERNET_MAX_URL_LENGTH	EQU	<( INTERNET_MAX_SCHEME_LENGTH + sizeof ( "://" ) + INTERNET_MAX_PATH_LENGTH )>
INTERNET_KEEP_ALIVE_UNKNOWN	EQU	- 1
INTERNET_KEEP_ALIVE_ENABLED	EQU	1
INTERNET_KEEP_ALIVE_DISABLED	EQU	0
INTERNET_REQFLAG_FROM_CACHE	EQU	00000001h
INTERNET_REQFLAG_ASYNC	EQU	00000002h
INTERNET_REQFLAG_VIA_PROXY	EQU	00000004h
INTERNET_REQFLAG_NO_HEADERS	EQU	00000008h
INTERNET_REQFLAG_PASSIVE	EQU	00000010h
INTERNET_REQFLAG_CACHE_WRITE_DISABLED	EQU	00000040h
INTERNET_FLAG_RELOAD	EQU	80000000h
INTERNET_FLAG_RAW_DATA	EQU	40000000h
INTERNET_FLAG_EXISTING_CONNECT	EQU	20000000h
INTERNET_FLAG_ASYNC	EQU	10000000h
INTERNET_FLAG_PASSIVE	EQU	08000000h
INTERNET_FLAG_NO_CACHE_WRITE	EQU	04000000h
INTERNET_FLAG_DONT_CACHE	EQU	<INTERNET_FLAG_NO_CACHE_WRITE>
INTERNET_FLAG_MAKE_PERSISTENT	EQU	02000000h
INTERNET_FLAG_FROM_CACHE	EQU	01000000h
INTERNET_FLAG_OFFLINE	EQU	<INTERNET_FLAG_FROM_CACHE>
INTERNET_FLAG_SECURE	EQU	00800000h
INTERNET_FLAG_KEEP_CONNECTION	EQU	00400000h
INTERNET_FLAG_NO_AUTO_REDIRECT	EQU	00200000h
INTERNET_FLAG_READ_PREFETCH	EQU	00100000h
INTERNET_FLAG_NO_COOKIES	EQU	00080000h
INTERNET_FLAG_NO_AUTH	EQU	00040000h
INTERNET_FLAG_CACHE_IF_NET_FAIL	EQU	00010000h
INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP	EQU	00008000h
INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS	EQU	00004000h
INTERNET_FLAG_IGNORE_CERT_DATE_INVALID	EQU	00002000h
INTERNET_FLAG_IGNORE_CERT_CN_INVALID	EQU	00001000h
INTERNET_FLAG_RESYNCHRONIZE	EQU	00000800h
INTERNET_FLAG_HYPERLINK	EQU	00000400h
INTERNET_FLAG_NO_UI	EQU	00000200h
INTERNET_FLAG_PRAGMA_NOCACHE	EQU	00000100h
INTERNET_FLAG_CACHE_ASYNC	EQU	00000080h
INTERNET_FLAG_FORMS_SUBMIT	EQU	00000040h
INTERNET_FLAG_NEED_FILE	EQU	00000010h
INTERNET_FLAG_MUST_CACHE_REQUEST	EQU	<INTERNET_FLAG_NEED_FILE>
INTERNET_FLAG_TRANSFER_ASCII	EQU	<FTP_TRANSFER_TYPE_ASCII>
INTERNET_FLAG_TRANSFER_BINARY	EQU	<FTP_TRANSFER_TYPE_BINARY>
SECURITY_INTERNET_MASK	EQU	( INTERNET_FLAG_IGNORE_CERT_CN_INVALID  or  INTERNET_FLAG_IGNORE_CERT_DATE_INVALID  or  INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS  or  INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP )

INTERNET_FLAGS_MASK	EQU	0FFFC0000h or \
	INTERNET_FLAG_CACHE_IF_NET_FAIL or SECURITY_INTERNET_MASK or \
	0F00h or 80h or 40h or 10h or INTERNET_FLAG_TRANSFER_BINARY or \
	INTERNET_FLAG_TRANSFER_ASCII


INTERNET_ERROR_MASK_INSERT_CDROM	EQU	1h
INTERNET_OPTIONS_MASK	EQU	<(  not  INTERNET_FLAGS_MASK )>
WININET_API_FLAG_ASYNC	EQU	00000001h
WININET_API_FLAG_SYNC	EQU	00000004h
WININET_API_FLAG_USE_CONTEXT	EQU	00000008h
INTERNET_NO_CALLBACK	EQU	0
INTERNET_SCHEME typedef DWORD
INTERNET_SCHEME_PARTIAL = - 2 
INTERNET_SCHEME_UNKNOWN = - 1 
INTERNET_SCHEME_DEFAULT = 0 
INTERNET_SCHEME_FTP = 1
INTERNET_SCHEME_GOPHER = 2
INTERNET_SCHEME_HTTP = 3
INTERNET_SCHEME_HTTPS = 4
INTERNET_SCHEME_FILE = 5
INTERNET_SCHEME_NEWS = 6
INTERNET_SCHEME_MAILTO = 7
INTERNET_SCHEME_SOCKS = 8
INTERNET_SCHEME_FIRST = INTERNET_SCHEME_FTP 
INTERNET_SCHEME_LAST = INTERNET_SCHEME_SOCKS 

LPINTERNET_SCHEME typedef ptr INTERNET_SCHEME

INTERNET_ASYNC_RESULT	struct 
dwResult	DWORD_PTR	?
dwError	DWORD	?
INTERNET_ASYNC_RESULT	ends

LPINTERNET_ASYNC_RESULT typedef ptr INTERNET_ASYNC_RESULT

INTERNET_PROXY_INFO	struct 
dwAccessType	DWORD	?
lpszProxy	LPCTSTR	?
lpszProxyBypass	LPCTSTR	?
INTERNET_PROXY_INFO	ends

LPINTERNET_PROXY_INFO typedef ptr INTERNET_PROXY_INFO

INTERNET_VERSION_INFO	struct 
dwMajorVersion	DWORD	?
dwMinorVersion	DWORD	?
INTERNET_VERSION_INFO	ends

LPINTERNET_VERSION_INFO typedef ptr INTERNET_VERSION_INFO

HTTP_VERSION_INFO	struct 
dwMajorVersion	DWORD	?
dwMinorVersion	DWORD	?
HTTP_VERSION_INFO	ends

LPHTTP_VERSION_INFO typedef ptr HTTP_VERSION_INFO

INTERNET_CONNECTED_INFO	struct 
dwConnectedState	DWORD	?
dwFlags	DWORD	?
INTERNET_CONNECTED_INFO	ends

LPINTERNET_CONNECTED_INFO typedef ptr INTERNET_CONNECTED_INFO

ISO_FORCE_DISCONNECTED	EQU	00000001h
URL_COMPONENTSA	struct 8	;v2.02: alignment changed from 4 to 8
dwStructSize	DWORD	?
lpszScheme	LPSTR	?
dwSchemeLength	DWORD	?
nScheme	INTERNET_SCHEME	?
lpszHostName	LPSTR	?
dwHostNameLength	DWORD	?
nPort	INTERNET_PORT	?
lpszUserName	LPSTR	?
dwUserNameLength	DWORD	?
lpszPassword	LPSTR	?
dwPasswordLength	DWORD	?
lpszUrlPath	LPSTR	?
dwUrlPathLength	DWORD	?
lpszExtraInfo	LPSTR	?
dwExtraInfoLength	DWORD	?
URL_COMPONENTSA	ends

LPURL_COMPONENTSA typedef ptr URL_COMPONENTSA

URL_COMPONENTSW	struct 8	;v2.02: alignment changed from 4 to 8
dwStructSize	DWORD	?
lpszScheme	LPWSTR	?
dwSchemeLength	DWORD	?
nScheme	INTERNET_SCHEME	?
lpszHostName	LPWSTR	?
dwHostNameLength	DWORD	?
nPort	INTERNET_PORT	?
lpszUserName	LPWSTR	?
dwUserNameLength	DWORD	?
lpszPassword	LPWSTR	?
dwPasswordLength	DWORD	?
lpszUrlPath	LPWSTR	?
dwUrlPathLength	DWORD	?
lpszExtraInfo	LPWSTR	?
dwExtraInfoLength	DWORD	?
URL_COMPONENTSW	ends

LPURL_COMPONENTSW typedef ptr URL_COMPONENTSW

ifdef UNICODE
URL_COMPONENTS typedef URL_COMPONENTSW
LPURL_COMPONENTS typedef LPURL_COMPONENTSW
else 
URL_COMPONENTS typedef URL_COMPONENTSA
LPURL_COMPONENTS typedef LPURL_COMPONENTSA
endif 
INTERNET_CERTIFICATE_INFO	struct 
ftExpiry	FILETIME	<>
ftStart	FILETIME	<>
lpszSubjectInfo	LPTSTR	?
lpszIssuerInfo	LPTSTR	?
lpszProtocolName	LPTSTR	?
lpszSignatureAlgName	LPTSTR	?
lpszEncryptionAlgName	LPTSTR	?
dwKeySize	DWORD	?
INTERNET_CERTIFICATE_INFO	ends

LPINTERNET_CERTIFICATE_INFO typedef ptr INTERNET_CERTIFICATE_INFO

INTERNET_BUFFERSA	struct 
dwStructSize	DWORD	?
Next	DWORD	?
lpcszHeader	LPSTR	?
dwHeadersLength	DWORD	?
dwHeadersTotal	DWORD	?
lpvBuffer	LPVOID	?
dwBufferLength	DWORD	?
dwBufferTotal	DWORD	?
dwOffsetLow	DWORD	?
dwOffsetHigh	DWORD	?
INTERNET_BUFFERSA	ends

LPINTERNET_BUFFERSA typedef ptr INTERNET_BUFFERSA

INTERNET_BUFFERSW	struct 
dwStructSize	DWORD	?
Next	DWORD	?
lpcszHeader	LPWSTR	?
dwHeadersLength	DWORD	?
dwHeadersTotal	DWORD	?
lpvBuffer	LPVOID	?
dwBufferLength	DWORD	?
dwBufferTotal	DWORD	?
dwOffsetLow	DWORD	?
dwOffsetHigh	DWORD	?
INTERNET_BUFFERSW	ends

LPINTERNET_BUFFERSW typedef ptr INTERNET_BUFFERSW

ifdef UNICODE
INTERNET_BUFFERS typedef INTERNET_BUFFERSW
LPINTERNET_BUFFERS typedef LPINTERNET_BUFFERSW
else 
INTERNET_BUFFERS typedef INTERNET_BUFFERSA
LPINTERNET_BUFFERS typedef LPINTERNET_BUFFERSA
endif 
proto_InternetTimeFromSystemTime typedef proto stdcall :ptr SYSTEMTIME, :DWORD, :LPSTR, :DWORD
externdef stdcall _imp__InternetTimeFromSystemTime@16: ptr proto_InternetTimeFromSystemTime
InternetTimeFromSystemTime equ <_imp__InternetTimeFromSystemTime@16>
INTERNET_RFC1123_FORMAT	EQU	0
INTERNET_RFC1123_BUFSIZE	EQU	30
proto_InternetTimeToSystemTime typedef proto stdcall :LPSTR, :ptr SYSTEMTIME, :DWORD
externdef stdcall _imp__InternetTimeToSystemTime@12: ptr proto_InternetTimeToSystemTime
InternetTimeToSystemTime equ <_imp__InternetTimeToSystemTime@12>
proto_InternetCrackUrlA typedef proto stdcall :LPSTR, :DWORD, :DWORD, :LPURL_COMPONENTSA
externdef stdcall _imp__InternetCrackUrlA@16: ptr proto_InternetCrackUrlA
InternetCrackUrlA equ <_imp__InternetCrackUrlA@16>
proto_InternetCrackUrlW typedef proto stdcall :LPWSTR, :DWORD, :DWORD, :LPURL_COMPONENTSW
externdef stdcall _imp__InternetCrackUrlW@16: ptr proto_InternetCrackUrlW
InternetCrackUrlW equ <_imp__InternetCrackUrlW@16>
ifdef UNICODE
InternetCrackUrl	EQU	<InternetCrackUrlW>
else 
InternetCrackUrl	EQU	<InternetCrackUrlA>
endif 
proto_InternetCreateUrlA typedef proto stdcall :LPURL_COMPONENTSA, :DWORD, :LPSTR, :LPDWORD
externdef stdcall _imp__InternetCreateUrlA@16: ptr proto_InternetCreateUrlA
InternetCreateUrlA equ <_imp__InternetCreateUrlA@16>
proto_InternetCreateUrlW typedef proto stdcall :LPURL_COMPONENTSW, :DWORD, :LPWSTR, :LPDWORD
externdef stdcall _imp__InternetCreateUrlW@16: ptr proto_InternetCreateUrlW
InternetCreateUrlW equ <_imp__InternetCreateUrlW@16>
ifdef UNICODE
InternetCreateUrl	EQU	<InternetCreateUrlW>
else 
InternetCreateUrl	EQU	<InternetCreateUrlA>
endif 
proto_InternetCanonicalizeUrlA typedef proto stdcall :LPSTR, :LPSTR, :LPDWORD, :DWORD
externdef stdcall _imp__InternetCanonicalizeUrlA@16: ptr proto_InternetCanonicalizeUrlA
InternetCanonicalizeUrlA equ <_imp__InternetCanonicalizeUrlA@16>
proto_InternetCanonicalizeUrlW typedef proto stdcall :LPWSTR, :LPWSTR, :LPDWORD, :DWORD
externdef stdcall _imp__InternetCanonicalizeUrlW@16: ptr proto_InternetCanonicalizeUrlW
InternetCanonicalizeUrlW equ <_imp__InternetCanonicalizeUrlW@16>
ifdef UNICODE
InternetCanonicalizeUrl	EQU	<InternetCanonicalizeUrlW>
else 
InternetCanonicalizeUrl	EQU	<InternetCanonicalizeUrlA>
endif 
proto_InternetCombineUrlA typedef proto stdcall :LPSTR, :LPSTR, :LPSTR, :LPDWORD, :DWORD
externdef stdcall _imp__InternetCombineUrlA@20: ptr proto_InternetCombineUrlA
InternetCombineUrlA equ <_imp__InternetCombineUrlA@20>
proto_InternetCombineUrlW typedef proto stdcall :LPWSTR, :LPWSTR, :LPWSTR, :LPDWORD, :DWORD
externdef stdcall _imp__InternetCombineUrlW@20: ptr proto_InternetCombineUrlW
InternetCombineUrlW equ <_imp__InternetCombineUrlW@20>
ifdef UNICODE
InternetCombineUrl	EQU	<InternetCombineUrlW>
else 
InternetCombineUrl	EQU	<InternetCombineUrlA>
endif 
ICU_ESCAPE	EQU	80000000h
ICU_USERNAME	EQU	40000000h
ICU_NO_ENCODE	EQU	20000000h
ICU_DECODE	EQU	10000000h
ICU_NO_META	EQU	08000000h
ICU_ENCODE_SPACES_ONLY	EQU	04000000h
ICU_BROWSER_MODE	EQU	02000000h
@DefProto INTERNETAPI, InternetOpenA, stdcall, , <:LPSTR, :DWORD, :LPSTR, :LPSTR, :DWORD>, 20
@DefProto INTERNETAPI, InternetOpenW, stdcall, , <:LPWSTR, :DWORD, :LPWSTR, :LPWSTR, :DWORD>, 20
ifdef UNICODE
InternetOpen	EQU	<InternetOpenW>
else 
InternetOpen	EQU	<InternetOpenA>
endif 
INTERNET_OPEN_TYPE_PRECONFIG	EQU	0
INTERNET_OPEN_TYPE_DIRECT	EQU	1
INTERNET_OPEN_TYPE_PROXY	EQU	3
INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY	EQU	4
PRE_CONFIG_INTERNET_ACCESS	EQU	<INTERNET_OPEN_TYPE_PRECONFIG>
LOCAL_INTERNET_ACCESS	EQU	<INTERNET_OPEN_TYPE_DIRECT>
CERN_PROXY_INTERNET_ACCESS	EQU	<INTERNET_OPEN_TYPE_PROXY>
proto_InternetCloseHandle typedef proto stdcall :HINTERNET
externdef stdcall _imp__InternetCloseHandle@4: ptr proto_InternetCloseHandle
InternetCloseHandle equ <_imp__InternetCloseHandle@4>
@DefProto INTERNETAPI, InternetConnectA, stdcall, , <:HINTERNET, :LPSTR, :INTERNET_PORT, :LPSTR, :LPSTR, :DWORD, :DWORD, :DWORD_PTR>, 32
@DefProto INTERNETAPI, InternetConnectW, stdcall, , <:HINTERNET, :LPWSTR, :INTERNET_PORT, :LPWSTR, :LPWSTR, :DWORD, :DWORD, :DWORD_PTR>, 32
ifdef UNICODE
InternetConnect	EQU	<InternetConnectW>
else 
InternetConnect	EQU	<InternetConnectA>
endif 
INTERNET_SERVICE_URL	EQU	0
INTERNET_SERVICE_FTP	EQU	1
INTERNET_SERVICE_GOPHER	EQU	2
INTERNET_SERVICE_HTTP	EQU	3
InternetConnectUrl macro hInternet,lpszUrl,dwFlags,dwContext
	exitm <InternetConnect ( hInternet , lpszUrl , INTERNET_INVALID_PORT_NUMBER , NULL , NULL , INTERNET_SERVICE_URL , dwFlags , dwContext ) >
	endm
@DefProto INTERNETAPI, InternetOpenUrlA, stdcall, , <:HINTERNET, :LPSTR, :LPSTR, :DWORD, :DWORD, :DWORD_PTR>, 24
@DefProto INTERNETAPI, InternetOpenUrlW, stdcall, , <:HINTERNET, :LPWSTR, :LPWSTR, :DWORD, :DWORD, :DWORD_PTR>, 24
ifdef UNICODE
InternetOpenUrl	EQU	<InternetOpenUrlW>
else 
InternetOpenUrl	EQU	<InternetOpenUrlA>
endif 
proto_InternetReadFile typedef proto stdcall :HINTERNET, :LPVOID, :DWORD, :LPDWORD
externdef stdcall _imp__InternetReadFile@16: ptr proto_InternetReadFile
InternetReadFile equ <_imp__InternetReadFile@16>
@DefProto INTERNETAPI, InternetReadFileExA, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR>, 16
@DefProto INTERNETAPI, InternetReadFileExW, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR>, 16
ifdef UNICODE
InternetReadFileEx	EQU	<InternetReadFileExW>
else 
InternetReadFileEx	EQU	<InternetReadFileExA>
endif 
IRF_ASYNC	EQU	<WININET_API_FLAG_ASYNC>
IRF_SYNC	EQU	<WININET_API_FLAG_SYNC>
IRF_USE_CONTEXT	EQU	<WININET_API_FLAG_USE_CONTEXT>
IRF_NO_WAIT	EQU	00000008h
@DefProto INTERNETAPI, InternetSetFilePointer, stdcall, , <:HINTERNET, :SDWORD, :PVOID, :DWORD, :DWORD_PTR>, 20

proto_InternetWriteFile typedef proto stdcall :HINTERNET, :LPCVOID, :DWORD, :LPDWORD
externdef stdcall _imp__InternetWriteFile@16: ptr proto_InternetWriteFile
InternetWriteFile equ <_imp__InternetWriteFile@16>
proto_InternetQueryDataAvailable typedef proto stdcall :HINTERNET, :LPDWORD, :DWORD, :DWORD_PTR
externdef stdcall _imp__InternetQueryDataAvailable@16: ptr proto_InternetQueryDataAvailable
InternetQueryDataAvailable equ <_imp__InternetQueryDataAvailable@16>
proto_InternetFindNextFileA typedef proto stdcall :HINTERNET, :LPVOID
externdef stdcall _imp__InternetFindNextFileA@8: ptr proto_InternetFindNextFileA
InternetFindNextFileA equ <_imp__InternetFindNextFileA@8>
proto_InternetFindNextFileW typedef proto stdcall :HINTERNET, :LPVOID
externdef stdcall _imp__InternetFindNextFileW@8: ptr proto_InternetFindNextFileW
InternetFindNextFileW equ <_imp__InternetFindNextFileW@8>
ifdef UNICODE
InternetFindNextFile	EQU	<InternetFindNextFileW>
else 
InternetFindNextFile	EQU	<InternetFindNextFileA>
endif 
proto_InternetQueryOptionA typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :LPDWORD
externdef stdcall _imp__InternetQueryOptionA@16: ptr proto_InternetQueryOptionA
InternetQueryOptionA equ <_imp__InternetQueryOptionA@16>
proto_InternetQueryOptionW typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :LPDWORD
externdef stdcall _imp__InternetQueryOptionW@16: ptr proto_InternetQueryOptionW
InternetQueryOptionW equ <_imp__InternetQueryOptionW@16>
ifdef UNICODE
InternetQueryOption	EQU	<InternetQueryOptionW>
else 
InternetQueryOption	EQU	<InternetQueryOptionA>
endif 
proto_InternetSetOptionA typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :DWORD
externdef stdcall _imp__InternetSetOptionA@16: ptr proto_InternetSetOptionA
InternetSetOptionA equ <_imp__InternetSetOptionA@16>
proto_InternetSetOptionW typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :DWORD
externdef stdcall _imp__InternetSetOptionW@16: ptr proto_InternetSetOptionW
InternetSetOptionW equ <_imp__InternetSetOptionW@16>
ifdef UNICODE
InternetSetOption	EQU	<InternetSetOptionW>
else 
InternetSetOption	EQU	<InternetSetOptionA>
endif 
proto_InternetSetOptionExA typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :DWORD, :DWORD
externdef stdcall _imp__InternetSetOptionExA@20: ptr proto_InternetSetOptionExA
InternetSetOptionExA equ <_imp__InternetSetOptionExA@20>
proto_InternetSetOptionExW typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :DWORD, :DWORD
externdef stdcall _imp__InternetSetOptionExW@20: ptr proto_InternetSetOptionExW
InternetSetOptionExW equ <_imp__InternetSetOptionExW@20>
ifdef UNICODE
InternetSetOptionEx	EQU	<InternetSetOptionExW>
else 
InternetSetOptionEx	EQU	<InternetSetOptionExA>
endif 
proto_InternetLockRequestFile typedef proto stdcall :HINTERNET, :ptr HANDLE
externdef stdcall _imp__InternetLockRequestFile@8: ptr proto_InternetLockRequestFile
InternetLockRequestFile equ <_imp__InternetLockRequestFile@8>
proto_InternetUnlockRequestFile typedef proto stdcall :HANDLE
externdef stdcall _imp__InternetUnlockRequestFile@4: ptr proto_InternetUnlockRequestFile
InternetUnlockRequestFile equ <_imp__InternetUnlockRequestFile@4>
ISO_GLOBAL	EQU	00000001h
ISO_REGISTRY	EQU	00000002h
ISO_VALID_FLAGS	EQU	( ISO_GLOBAL  or  ISO_REGISTRY )
INTERNET_OPTION_CALLBACK	EQU	1
INTERNET_OPTION_CONNECT_TIMEOUT	EQU	2
INTERNET_OPTION_CONNECT_RETRIES	EQU	3
INTERNET_OPTION_CONNECT_BACKOFF	EQU	4
INTERNET_OPTION_SEND_TIMEOUT	EQU	5
INTERNET_OPTION_CONTROL_SEND_TIMEOUT	EQU	<INTERNET_OPTION_SEND_TIMEOUT>
INTERNET_OPTION_RECEIVE_TIMEOUT	EQU	6
INTERNET_OPTION_CONTROL_RECEIVE_TIMEOUT	EQU	<INTERNET_OPTION_RECEIVE_TIMEOUT>
INTERNET_OPTION_DATA_SEND_TIMEOUT	EQU	7
INTERNET_OPTION_DATA_RECEIVE_TIMEOUT	EQU	8
INTERNET_OPTION_HANDLE_TYPE	EQU	9
INTERNET_OPTION_LISTEN_TIMEOUT	EQU	11
INTERNET_OPTION_READ_BUFFER_SIZE	EQU	12
INTERNET_OPTION_WRITE_BUFFER_SIZE	EQU	13
INTERNET_OPTION_ASYNC_ID	EQU	15
INTERNET_OPTION_ASYNC_PRIORITY	EQU	16
INTERNET_OPTION_PARENT_HANDLE	EQU	21
INTERNET_OPTION_KEEP_CONNECTION	EQU	22
INTERNET_OPTION_REQUEST_FLAGS	EQU	23
INTERNET_OPTION_EXTENDED_ERROR	EQU	24
INTERNET_OPTION_OFFLINE_MODE	EQU	26
INTERNET_OPTION_CACHE_STREAM_HANDLE	EQU	27
INTERNET_OPTION_USERNAME	EQU	28
INTERNET_OPTION_PASSWORD	EQU	29
INTERNET_OPTION_ASYNC	EQU	30
INTERNET_OPTION_SECURITY_FLAGS	EQU	31
INTERNET_OPTION_SECURITY_CERTIFICATE_STRUCT	EQU	32
INTERNET_OPTION_DATAFILE_NAME	EQU	33
INTERNET_OPTION_URL	EQU	34
INTERNET_OPTION_SECURITY_CERTIFICATE	EQU	35
INTERNET_OPTION_SECURITY_KEY_BITNESS	EQU	36
INTERNET_OPTION_REFRESH	EQU	37
INTERNET_OPTION_PROXY	EQU	38
INTERNET_OPTION_SETTINGS_CHANGED	EQU	39
INTERNET_OPTION_VERSION	EQU	40
INTERNET_OPTION_USER_AGENT	EQU	41
INTERNET_OPTION_END_BROWSER_SESSION	EQU	42
INTERNET_OPTION_PROXY_USERNAME	EQU	43
INTERNET_OPTION_PROXY_PASSWORD	EQU	44
INTERNET_OPTION_CONTEXT_VALUE	EQU	45
INTERNET_OPTION_CONNECT_LIMIT	EQU	46
INTERNET_OPTION_SECURITY_SELECT_CLIENT_CERT	EQU	47
INTERNET_OPTION_POLICY	EQU	48
INTERNET_OPTION_DISCONNECTED_TIMEOUT	EQU	49
INTERNET_OPTION_CONNECTED_STATE	EQU	50
INTERNET_OPTION_IDLE_STATE	EQU	51
INTERNET_OPTION_OFFLINE_SEMANTICS	EQU	52
INTERNET_OPTION_SECONDARY_CACHE_KEY	EQU	53
INTERNET_OPTION_CALLBACK_FILTER	EQU	54
INTERNET_OPTION_CONNECT_TIME	EQU	55
INTERNET_OPTION_SEND_THROUGHPUT	EQU	56
INTERNET_OPTION_RECEIVE_THROUGHPUT	EQU	57
INTERNET_OPTION_REQUEST_PRIORITY	EQU	58
INTERNET_OPTION_HTTP_VERSION	EQU	59
INTERNET_OPTION_RESET_URLCACHE_SESSION	EQU	60
INTERNET_OPTION_ERROR_MASK	EQU	62
INTERNET_FIRST_OPTION	EQU	<INTERNET_OPTION_CALLBACK>
INTERNET_LAST_OPTION	EQU	<INTERNET_OPTION_ERROR_MASK>
INTERNET_PRIORITY_FOREGROUND	EQU	1000
INTERNET_HANDLE_TYPE_INTERNET	EQU	1
INTERNET_HANDLE_TYPE_CONNECT_FTP	EQU	2
INTERNET_HANDLE_TYPE_CONNECT_GOPHER	EQU	3
INTERNET_HANDLE_TYPE_CONNECT_HTTP	EQU	4
INTERNET_HANDLE_TYPE_FTP_FIND	EQU	5
INTERNET_HANDLE_TYPE_FTP_FIND_HTML	EQU	6
INTERNET_HANDLE_TYPE_FTP_FILE	EQU	7
INTERNET_HANDLE_TYPE_FTP_FILE_HTML	EQU	8
INTERNET_HANDLE_TYPE_GOPHER_FIND	EQU	9
INTERNET_HANDLE_TYPE_GOPHER_FIND_HTML	EQU	10
INTERNET_HANDLE_TYPE_GOPHER_FILE	EQU	11
INTERNET_HANDLE_TYPE_GOPHER_FILE_HTML	EQU	12
INTERNET_HANDLE_TYPE_HTTP_REQUEST	EQU	13
SECURITY_FLAG_SECURE	EQU	00000001h
SECURITY_FLAG_STRENGTH_WEAK	EQU	10000000h
SECURITY_FLAG_STRENGTH_MEDIUM	EQU	40000000h
SECURITY_FLAG_STRENGTH_STRONG	EQU	20000000h
SECURITY_FLAG_UNKNOWNBIT	EQU	80000000h
SECURITY_FLAG_NORMALBITNESS	EQU	<SECURITY_FLAG_STRENGTH_WEAK>
SECURITY_FLAG_SSL	EQU	00000002h
SECURITY_FLAG_SSL3	EQU	00000004h
SECURITY_FLAG_PCT	EQU	00000008h
SECURITY_FLAG_PCT4	EQU	00000010h
SECURITY_FLAG_IETFSSL4	EQU	00000020h
SECURITY_FLAG_40BIT	EQU	<SECURITY_FLAG_STRENGTH_WEAK>
SECURITY_FLAG_128BIT	EQU	<SECURITY_FLAG_STRENGTH_STRONG>
SECURITY_FLAG_56BIT	EQU	<SECURITY_FLAG_STRENGTH_MEDIUM>
SECURITY_FLAG_IGNORE_REVOCATION	EQU	00000080h
SECURITY_FLAG_IGNORE_UNKNOWN_CA	EQU	00000100h
SECURITY_FLAG_IGNORE_WRONG_USAGE	EQU	00000200h
SECURITY_FLAG_IGNORE_CERT_CN_INVALID	EQU	<INTERNET_FLAG_IGNORE_CERT_CN_INVALID>
SECURITY_FLAG_IGNORE_CERT_DATE_INVALID	EQU	<INTERNET_FLAG_IGNORE_CERT_DATE_INVALID>
SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTPS	EQU	<INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS>
SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTP	EQU	<INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP>
SECURITY_SET_MASK	EQU	( SECURITY_FLAG_IGNORE_REVOCATION  or  SECURITY_FLAG_IGNORE_UNKNOWN_CA  or  SECURITY_FLAG_IGNORE_CERT_CN_INVALID  or  SECURITY_FLAG_IGNORE_CERT_DATE_INVALID  or  SECURITY_FLAG_IGNORE_WRONG_USAGE )
proto_InternetGetLastResponseInfoA typedef proto stdcall :LPDWORD, :LPSTR, :LPDWORD
externdef stdcall _imp__InternetGetLastResponseInfoA@12: ptr proto_InternetGetLastResponseInfoA
InternetGetLastResponseInfoA equ <_imp__InternetGetLastResponseInfoA@12>
proto_InternetGetLastResponseInfoW typedef proto stdcall :LPDWORD, :LPWSTR, :LPDWORD
externdef stdcall _imp__InternetGetLastResponseInfoW@12: ptr proto_InternetGetLastResponseInfoW
InternetGetLastResponseInfoW equ <_imp__InternetGetLastResponseInfoW@12>
ifdef UNICODE
InternetGetLastResponseInfo	EQU	<InternetGetLastResponseInfoW>
else 
InternetGetLastResponseInfo	EQU	<InternetGetLastResponseInfoA>
endif 
proto_INTERNET_STATUS_CALLBACK typedef proto stdcall :HINTERNET,:DWORD_PTR,:DWORD,:LPVOID,:DWORD
INTERNET_STATUS_CALLBACK typedef ptr proto_INTERNET_STATUS_CALLBACK
LPINTERNET_STATUS_CALLBACK typedef ptr INTERNET_STATUS_CALLBACK
@DefProto INTERNETAPI, InternetSetStatusCallback, stdcall, , <:HINTERNET, :INTERNET_STATUS_CALLBACK>, 8
INTERNET_STATUS_RESOLVING_NAME	EQU	10
INTERNET_STATUS_NAME_RESOLVED	EQU	11
INTERNET_STATUS_CONNECTING_TO_SERVER	EQU	20
INTERNET_STATUS_CONNECTED_TO_SERVER	EQU	21
INTERNET_STATUS_SENDING_REQUEST	EQU	30
INTERNET_STATUS_REQUEST_SENT	EQU	31
INTERNET_STATUS_RECEIVING_RESPONSE	EQU	40
INTERNET_STATUS_RESPONSE_RECEIVED	EQU	41
INTERNET_STATUS_CTL_RESPONSE_RECEIVED	EQU	42
INTERNET_STATUS_PREFETCH	EQU	43
INTERNET_STATUS_CLOSING_CONNECTION	EQU	50
INTERNET_STATUS_CONNECTION_CLOSED	EQU	51
INTERNET_STATUS_HANDLE_CREATED	EQU	60
INTERNET_STATUS_HANDLE_CLOSING	EQU	70
INTERNET_STATUS_REQUEST_COMPLETE	EQU	100
INTERNET_STATUS_REDIRECT	EQU	110
INTERNET_STATUS_INTERMEDIATE_RESPONSE	EQU	120
INTERNET_STATUS_STATE_CHANGE	EQU	200
INTERNET_STATE_CONNECTED	EQU	00000001h
INTERNET_STATE_DISCONNECTED	EQU	00000002h
INTERNET_STATE_DISCONNECTED_BY_USER	EQU	00000010h
INTERNET_STATE_IDLE	EQU	00000100h
INTERNET_STATE_BUSY	EQU	00000200h
INTERNET_INVALID_STATUS_CALLBACK	EQU	( ( INTERNET_STATUS_CALLBACK ) - 1 )
FTP_TRANSFER_TYPE_UNKNOWN	EQU	00000000h
FTP_TRANSFER_TYPE_ASCII	EQU	00000001h
FTP_TRANSFER_TYPE_BINARY	EQU	00000002h
FTP_TRANSFER_TYPE_MASK	EQU	( FTP_TRANSFER_TYPE_ASCII  or  FTP_TRANSFER_TYPE_BINARY )
@DefProto INTERNETAPI, FtpFindFirstFileA, stdcall, , <:HINTERNET, :LPSTR, :LPWIN32_FIND_DATA, :DWORD, :DWORD_PTR>, 20
@DefProto INTERNETAPI, FtpFindFirstFileW, stdcall, , <:HINTERNET, :LPWSTR, :LPWIN32_FIND_DATA, :DWORD, :DWORD_PTR>, 20
ifdef UNICODE
FtpFindFirstFile	EQU	<FtpFindFirstFileW>
else 
FtpFindFirstFile	EQU	<FtpFindFirstFileA>
endif 
proto_FtpGetFileA typedef proto stdcall :HINTERNET, :LPSTR, :LPSTR, :BOOL, :DWORD, :DWORD, :DWORD_PTR
externdef stdcall _imp__FtpGetFileA@28: ptr proto_FtpGetFileA
FtpGetFileA equ <_imp__FtpGetFileA@28>
proto_FtpGetFileW typedef proto stdcall :HINTERNET, :LPWSTR, :LPWSTR, :BOOL, :DWORD, :DWORD, :DWORD_PTR
externdef stdcall _imp__FtpGetFileW@28: ptr proto_FtpGetFileW
FtpGetFileW equ <_imp__FtpGetFileW@28>
ifdef UNICODE
FtpGetFile	EQU	<FtpGetFileW>
else 
FtpGetFile	EQU	<FtpGetFileA>
endif 
proto_FtpPutFileA typedef proto stdcall :HINTERNET, :LPSTR, :LPSTR, :DWORD, :DWORD_PTR
externdef stdcall _imp__FtpPutFileA@20: ptr proto_FtpPutFileA
FtpPutFileA equ <_imp__FtpPutFileA@20>
proto_FtpPutFileW typedef proto stdcall :HINTERNET, :LPWSTR, :LPWSTR, :DWORD, :DWORD_PTR
externdef stdcall _imp__FtpPutFileW@20: ptr proto_FtpPutFileW
FtpPutFileW equ <_imp__FtpPutFileW@20>
ifdef UNICODE
FtpPutFile	EQU	<FtpPutFileW>
else 
FtpPutFile	EQU	<FtpPutFileA>
endif 
proto_FtpDeleteFileA typedef proto stdcall :HINTERNET, :LPSTR
externdef stdcall _imp__FtpDeleteFileA@8: ptr proto_FtpDeleteFileA
FtpDeleteFileA equ <_imp__FtpDeleteFileA@8>
proto_FtpDeleteFileW typedef proto stdcall :HINTERNET, :LPWSTR
externdef stdcall _imp__FtpDeleteFileW@8: ptr proto_FtpDeleteFileW
FtpDeleteFileW equ <_imp__FtpDeleteFileW@8>
ifdef UNICODE
FtpDeleteFile	EQU	<FtpDeleteFileW>
else 
FtpDeleteFile	EQU	<FtpDeleteFileA>
endif 
proto_FtpRenameFileA typedef proto stdcall :HINTERNET, :LPSTR, :LPSTR
externdef stdcall _imp__FtpRenameFileA@12: ptr proto_FtpRenameFileA
FtpRenameFileA equ <_imp__FtpRenameFileA@12>
proto_FtpRenameFileW typedef proto stdcall :HINTERNET, :LPWSTR, :LPWSTR
externdef stdcall _imp__FtpRenameFileW@12: ptr proto_FtpRenameFileW
FtpRenameFileW equ <_imp__FtpRenameFileW@12>
ifdef UNICODE
FtpRenameFile	EQU	<FtpRenameFileW>
else 
FtpRenameFile	EQU	<FtpRenameFileA>
endif 
@DefProto INTERNETAPI, FtpOpenFileA, stdcall, , <:HINTERNET, :LPSTR, :DWORD, :DWORD, :DWORD_PTR>, 20
@DefProto INTERNETAPI, FtpOpenFileW, stdcall, , <:HINTERNET, :LPWSTR, :DWORD, :DWORD, :DWORD_PTR>, 20
ifdef UNICODE
FtpOpenFile	EQU	<FtpOpenFileW>
else 
FtpOpenFile	EQU	<FtpOpenFileA>
endif 
proto_FtpCreateDirectoryA typedef proto stdcall :HINTERNET, :LPSTR
externdef stdcall _imp__FtpCreateDirectoryA@8: ptr proto_FtpCreateDirectoryA
FtpCreateDirectoryA equ <_imp__FtpCreateDirectoryA@8>
proto_FtpCreateDirectoryW typedef proto stdcall :HINTERNET, :LPWSTR
externdef stdcall _imp__FtpCreateDirectoryW@8: ptr proto_FtpCreateDirectoryW
FtpCreateDirectoryW equ <_imp__FtpCreateDirectoryW@8>
ifdef UNICODE
FtpCreateDirectory	EQU	<FtpCreateDirectoryW>
else 
FtpCreateDirectory	EQU	<FtpCreateDirectoryA>
endif 
proto_FtpRemoveDirectoryA typedef proto stdcall :HINTERNET, :LPSTR
externdef stdcall _imp__FtpRemoveDirectoryA@8: ptr proto_FtpRemoveDirectoryA
FtpRemoveDirectoryA equ <_imp__FtpRemoveDirectoryA@8>
proto_FtpRemoveDirectoryW typedef proto stdcall :HINTERNET, :LPWSTR
externdef stdcall _imp__FtpRemoveDirectoryW@8: ptr proto_FtpRemoveDirectoryW
FtpRemoveDirectoryW equ <_imp__FtpRemoveDirectoryW@8>
ifdef UNICODE
FtpRemoveDirectory	EQU	<FtpRemoveDirectoryW>
else 
FtpRemoveDirectory	EQU	<FtpRemoveDirectoryA>
endif 
proto_FtpSetCurrentDirectoryA typedef proto stdcall :HINTERNET, :LPSTR
externdef stdcall _imp__FtpSetCurrentDirectoryA@8: ptr proto_FtpSetCurrentDirectoryA
FtpSetCurrentDirectoryA equ <_imp__FtpSetCurrentDirectoryA@8>
proto_FtpSetCurrentDirectoryW typedef proto stdcall :HINTERNET, :LPWSTR
externdef stdcall _imp__FtpSetCurrentDirectoryW@8: ptr proto_FtpSetCurrentDirectoryW
FtpSetCurrentDirectoryW equ <_imp__FtpSetCurrentDirectoryW@8>
ifdef UNICODE
FtpSetCurrentDirectory	EQU	<FtpSetCurrentDirectoryW>
else 
FtpSetCurrentDirectory	EQU	<FtpSetCurrentDirectoryA>
endif 
proto_FtpGetCurrentDirectoryA typedef proto stdcall :HINTERNET, :LPSTR, :LPDWORD
externdef stdcall _imp__FtpGetCurrentDirectoryA@12: ptr proto_FtpGetCurrentDirectoryA
FtpGetCurrentDirectoryA equ <_imp__FtpGetCurrentDirectoryA@12>
proto_FtpGetCurrentDirectoryW typedef proto stdcall :HINTERNET, :LPWSTR, :LPDWORD
externdef stdcall _imp__FtpGetCurrentDirectoryW@12: ptr proto_FtpGetCurrentDirectoryW
FtpGetCurrentDirectoryW equ <_imp__FtpGetCurrentDirectoryW@12>
ifdef UNICODE
FtpGetCurrentDirectory	EQU	<FtpGetCurrentDirectoryW>
else 
FtpGetCurrentDirectory	EQU	<FtpGetCurrentDirectoryA>
endif 
MAX_GOPHER_DISPLAY_TEXT	EQU	128
MAX_GOPHER_SELECTOR_TEXT	EQU	256
MAX_GOPHER_HOST_NAME	EQU	<INTERNET_MAX_HOST_NAME_LENGTH>
MAX_GOPHER_LOCATOR_LENGTH	EQU	( 1 + MAX_GOPHER_DISPLAY_TEXT + 1 + MAX_GOPHER_SELECTOR_TEXT + 1 + MAX_GOPHER_HOST_NAME + 1 + INTERNET_MAX_PORT_NUMBER_LENGTH + 1 + 1 + 2 )
GOPHER_FIND_DATAA	struct 
DisplayString	CHAR MAX_GOPHER_DISPLAY_TEXT+1 dup (?)
GopherType	DWORD	?
SizeLow	DWORD	?
SizeHigh	DWORD	?
LastModificationTime	FILETIME	<>
Locator	CHAR MAX_GOPHER_LOCATOR_LENGTH+1 dup (?)
GOPHER_FIND_DATAA	ends

LPGOPHER_FIND_DATAA typedef ptr GOPHER_FIND_DATAA

GOPHER_FIND_DATAW	struct 
DisplayString	WCHAR MAX_GOPHER_DISPLAY_TEXT+1 dup (?)
GopherType	DWORD	?
SizeLow	DWORD	?
SizeHigh	DWORD	?
LastModificationTime	FILETIME	<>
Locator	WCHAR MAX_GOPHER_LOCATOR_LENGTH+1 dup (?)
GOPHER_FIND_DATAW	ends

LPGOPHER_FIND_DATAW typedef ptr GOPHER_FIND_DATAW

ifdef UNICODE
GOPHER_FIND_DATA typedef GOPHER_FIND_DATAW
LPGOPHER_FIND_DATA typedef LPGOPHER_FIND_DATAW
else 
GOPHER_FIND_DATA typedef GOPHER_FIND_DATAA
LPGOPHER_FIND_DATA typedef LPGOPHER_FIND_DATAA
endif 
GOPHER_TYPE_TEXT_FILE	EQU	00000001h
GOPHER_TYPE_DIRECTORY	EQU	00000002h
GOPHER_TYPE_CSO	EQU	00000004h
GOPHER_TYPE_ERROR	EQU	00000008h
GOPHER_TYPE_MAC_BINHEX	EQU	00000010h
GOPHER_TYPE_DOS_ARCHIVE	EQU	00000020h
GOPHER_TYPE_UNIX_UUENCODED	EQU	00000040h
GOPHER_TYPE_INDEX_SERVER	EQU	00000080h
GOPHER_TYPE_TELNET	EQU	00000100h
GOPHER_TYPE_BINARY	EQU	00000200h
GOPHER_TYPE_REDUNDANT	EQU	00000400h
GOPHER_TYPE_TN3270	EQU	00000800h
GOPHER_TYPE_GIF	EQU	00001000h
GOPHER_TYPE_IMAGE	EQU	00002000h
GOPHER_TYPE_BITMAP	EQU	00004000h
GOPHER_TYPE_MOVIE	EQU	00008000h
GOPHER_TYPE_SOUND	EQU	00010000h
GOPHER_TYPE_HTML	EQU	00020000h
GOPHER_TYPE_PDF	EQU	00040000h
GOPHER_TYPE_CALENDAR	EQU	00080000h
GOPHER_TYPE_INLINE	EQU	00100000h
GOPHER_TYPE_UNKNOWN	EQU	20000000h
GOPHER_TYPE_ASK	EQU	40000000h
GOPHER_TYPE_GOPHER_PLUS	EQU	80000000h
IS_GOPHER_FILE macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_FILE_MASK ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_DIRECTORY macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_DIRECTORY ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_PHONE_SERVER macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_CSO ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_ERROR macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_ERROR ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_INDEX_SERVER macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_INDEX_SERVER ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_TELNET_SESSION macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_TELNET ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_BACKUP_SERVER macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_REDUNDANT ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_TN3270_SESSION macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_TN3270 ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_ASK macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_ASK ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_PLUS macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_GOPHER_PLUS ) ? TRUE : FALSE ) >
	endm
IS_GOPHER_TYPE_KNOWN macro type
	exitm <( ( ( type )  and  GOPHER_TYPE_UNKNOWN ) ? FALSE : TRUE ) >
	endm

GOPHER_TYPE_FILE_MASK	EQU	(1  or  10h  or  20h  or  40h  or  200h  or  1000h \
    or 2000h or 4000h or 8000h or 10000h \
	or 20000h or 40000h or 80000h or 100000h)

GOPHER_ADMIN_ATTRIBUTE_TYPE	struct 
Comment_	LPCTSTR	?
EmailAddress	LPCTSTR	?
GOPHER_ADMIN_ATTRIBUTE_TYPE	ends

LPGOPHER_ADMIN_ATTRIBUTE_TYPE typedef ptr GOPHER_ADMIN_ATTRIBUTE_TYPE

GOPHER_MOD_DATE_ATTRIBUTE_TYPE	struct 
DateAndTime	FILETIME	<>
GOPHER_MOD_DATE_ATTRIBUTE_TYPE	ends

LPGOPHER_MOD_DATE_ATTRIBUTE_TYPE typedef ptr GOPHER_MOD_DATE_ATTRIBUTE_TYPE

GOPHER_TTL_ATTRIBUTE_TYPE	struct 
Ttl	DWORD	?
GOPHER_TTL_ATTRIBUTE_TYPE	ends

LPGOPHER_TTL_ATTRIBUTE_TYPE typedef ptr GOPHER_TTL_ATTRIBUTE_TYPE

GOPHER_SCORE_ATTRIBUTE_TYPE	struct 
Score	DWORD	?
GOPHER_SCORE_ATTRIBUTE_TYPE	ends

LPGOPHER_SCORE_ATTRIBUTE_TYPE typedef ptr GOPHER_SCORE_ATTRIBUTE_TYPE

GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE	struct 
LowerBound	DWORD	?
UpperBound	DWORD	?
GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE	ends

LPGOPHER_SCORE_RANGE_ATTRIBUTE_TYPE typedef ptr GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE

GOPHER_SITE_ATTRIBUTE_TYPE	struct 
Site	LPCTSTR	?
GOPHER_SITE_ATTRIBUTE_TYPE	ends

LPGOPHER_SITE_ATTRIBUTE_TYPE typedef ptr GOPHER_SITE_ATTRIBUTE_TYPE

GOPHER_ORGANIZATION_ATTRIBUTE_TYPE	struct 
Organization	LPCTSTR	?
GOPHER_ORGANIZATION_ATTRIBUTE_TYPE	ends

LPGOPHER_ORGANIZATION_ATTRIBUTE_TYPE typedef ptr GOPHER_ORGANIZATION_ATTRIBUTE_TYPE

GOPHER_LOCATION_ATTRIBUTE_TYPE	struct 
Location	LPCTSTR	?
GOPHER_LOCATION_ATTRIBUTE_TYPE	ends

LPGOPHER_LOCATION_ATTRIBUTE_TYPE typedef ptr GOPHER_LOCATION_ATTRIBUTE_TYPE

GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE	struct 
DegreesNorth	DWORD	?
MinutesNorth	DWORD	?
SecondsNorth	DWORD	?
DegreesEast	DWORD	?
MinutesEast	DWORD	?
SecondsEast	DWORD	?
GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE	ends

LPGOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE typedef ptr GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE

GOPHER_TIMEZONE_ATTRIBUTE_TYPE	struct 
Zone	DWORD	?
GOPHER_TIMEZONE_ATTRIBUTE_TYPE	ends

LPGOPHER_TIMEZONE_ATTRIBUTE_TYPE typedef ptr GOPHER_TIMEZONE_ATTRIBUTE_TYPE

GOPHER_PROVIDER_ATTRIBUTE_TYPE	struct 
Provider	LPCTSTR	?
GOPHER_PROVIDER_ATTRIBUTE_TYPE	ends

LPGOPHER_PROVIDER_ATTRIBUTE_TYPE typedef ptr GOPHER_PROVIDER_ATTRIBUTE_TYPE

GOPHER_VERSION_ATTRIBUTE_TYPE	struct 
Version	LPCTSTR	?
GOPHER_VERSION_ATTRIBUTE_TYPE	ends

LPGOPHER_VERSION_ATTRIBUTE_TYPE typedef ptr GOPHER_VERSION_ATTRIBUTE_TYPE

GOPHER_ABSTRACT_ATTRIBUTE_TYPE	struct 
ShortAbstract	LPCTSTR	?
AbstractFile	LPCTSTR	?
GOPHER_ABSTRACT_ATTRIBUTE_TYPE	ends

LPGOPHER_ABSTRACT_ATTRIBUTE_TYPE typedef ptr GOPHER_ABSTRACT_ATTRIBUTE_TYPE

GOPHER_VIEW_ATTRIBUTE_TYPE	struct 
ContentType	LPCTSTR	?
Language	LPCTSTR	?
Size_	DWORD	?
GOPHER_VIEW_ATTRIBUTE_TYPE	ends

LPGOPHER_VIEW_ATTRIBUTE_TYPE typedef ptr GOPHER_VIEW_ATTRIBUTE_TYPE

GOPHER_VERONICA_ATTRIBUTE_TYPE	struct 
TreeWalk	BOOL	?
GOPHER_VERONICA_ATTRIBUTE_TYPE	ends

LPGOPHER_VERONICA_ATTRIBUTE_TYPE typedef ptr GOPHER_VERONICA_ATTRIBUTE_TYPE

GOPHER_ASK_ATTRIBUTE_TYPE	struct 
QuestionType	LPCTSTR	?
QuestionText	LPCTSTR	?
GOPHER_ASK_ATTRIBUTE_TYPE	ends

LPGOPHER_ASK_ATTRIBUTE_TYPE typedef ptr GOPHER_ASK_ATTRIBUTE_TYPE

GOPHER_UNKNOWN_ATTRIBUTE_TYPE	struct 
Text	LPCTSTR	?
GOPHER_UNKNOWN_ATTRIBUTE_TYPE	ends

LPGOPHER_UNKNOWN_ATTRIBUTE_TYPE typedef ptr GOPHER_UNKNOWN_ATTRIBUTE_TYPE

GOPHER_ATTRIBUTE_TYPE	struct 
CategoryId	DWORD	?
AttributeId	DWORD	?
union AttributeType
Admin	GOPHER_ADMIN_ATTRIBUTE_TYPE	<>
ModDate	GOPHER_MOD_DATE_ATTRIBUTE_TYPE	<>
Ttl	GOPHER_TTL_ATTRIBUTE_TYPE	<>
Score	GOPHER_SCORE_ATTRIBUTE_TYPE	<>
ScoreRange	GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE	<>
Site	GOPHER_SITE_ATTRIBUTE_TYPE	<>
Organization	GOPHER_ORGANIZATION_ATTRIBUTE_TYPE	<>
Location	GOPHER_LOCATION_ATTRIBUTE_TYPE	<>
GeographicalLocation	GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE	<>
TimeZone	GOPHER_TIMEZONE_ATTRIBUTE_TYPE	<>
Provider	GOPHER_PROVIDER_ATTRIBUTE_TYPE	<>
Version	GOPHER_VERSION_ATTRIBUTE_TYPE	<>
Abstract	GOPHER_ABSTRACT_ATTRIBUTE_TYPE	<>
View	GOPHER_VIEW_ATTRIBUTE_TYPE	<>
Veronica	GOPHER_VERONICA_ATTRIBUTE_TYPE	<>
Ask	GOPHER_ASK_ATTRIBUTE_TYPE	<>
Unknown	GOPHER_UNKNOWN_ATTRIBUTE_TYPE	<>
ends
GOPHER_ATTRIBUTE_TYPE	ends

LPGOPHER_ATTRIBUTE_TYPE typedef ptr GOPHER_ATTRIBUTE_TYPE

MAX_GOPHER_CATEGORY_NAME	EQU	128
MAX_GOPHER_ATTRIBUTE_NAME	EQU	128
MIN_GOPHER_ATTRIBUTE_LENGTH	EQU	256
GOPHER_INFO_CATEGORY	EQU	<TEXT ( "+INFO" )>
GOPHER_ADMIN_CATEGORY	EQU	<TEXT ( "+ADMIN" )>
GOPHER_VIEWS_CATEGORY	EQU	<TEXT ( "+VIEWS" )>
GOPHER_ABSTRACT_CATEGORY	EQU	<TEXT ( "+ABSTRACT" )>
GOPHER_VERONICA_CATEGORY	EQU	<TEXT ( "+VERONICA" )>
GOPHER_ADMIN_ATTRIBUTE	EQU	<TEXT ( "Admin" )>
GOPHER_MOD_DATE_ATTRIBUTE	EQU	<TEXT ( "Mod-Date" )>
GOPHER_TTL_ATTRIBUTE	EQU	<TEXT ( "TTL" )>
GOPHER_SCORE_ATTRIBUTE	EQU	<TEXT ( "Score" )>
GOPHER_RANGE_ATTRIBUTE	EQU	<TEXT ( "Score-range" )>
GOPHER_SITE_ATTRIBUTE	EQU	<TEXT ( "Site" )>
GOPHER_ORG_ATTRIBUTE	EQU	<TEXT ( "Org" )>
GOPHER_LOCATION_ATTRIBUTE	EQU	<TEXT ( "Loc" )>
GOPHER_GEOG_ATTRIBUTE	EQU	<TEXT ( "Geog" )>
GOPHER_TIMEZONE_ATTRIBUTE	EQU	<TEXT ( "TZ" )>
GOPHER_PROVIDER_ATTRIBUTE	EQU	<TEXT ( "Provider" )>
GOPHER_VERSION_ATTRIBUTE	EQU	<TEXT ( "Version" )>
GOPHER_ABSTRACT_ATTRIBUTE	EQU	<TEXT ( "Abstract" )>
GOPHER_VIEW_ATTRIBUTE	EQU	<TEXT ( "View" )>
GOPHER_TREEWALK_ATTRIBUTE	EQU	<TEXT ( "treewalk" )>
GOPHER_ATTRIBUTE_ID_BASE	EQU	0abcccc00h
GOPHER_CATEGORY_ID_ALL	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 1 )
GOPHER_CATEGORY_ID_INFO	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 2 )
GOPHER_CATEGORY_ID_ADMIN	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 3 )
GOPHER_CATEGORY_ID_VIEWS	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 4 )
GOPHER_CATEGORY_ID_ABSTRACT	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 5 )
GOPHER_CATEGORY_ID_VERONICA	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 6 )
GOPHER_CATEGORY_ID_ASK	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 7 )
GOPHER_CATEGORY_ID_UNKNOWN	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 8 )
GOPHER_ATTRIBUTE_ID_ALL	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 9 )
GOPHER_ATTRIBUTE_ID_ADMIN	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 10 )
GOPHER_ATTRIBUTE_ID_MOD_DATE	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 11 )
GOPHER_ATTRIBUTE_ID_TTL	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 12 )
GOPHER_ATTRIBUTE_ID_SCORE	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 13 )
GOPHER_ATTRIBUTE_ID_RANGE	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 14 )
GOPHER_ATTRIBUTE_ID_SITE	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 15 )
GOPHER_ATTRIBUTE_ID_ORG	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 16 )
GOPHER_ATTRIBUTE_ID_LOCATION	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 17 )
GOPHER_ATTRIBUTE_ID_GEOG	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 18 )
GOPHER_ATTRIBUTE_ID_TIMEZONE	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 19 )
GOPHER_ATTRIBUTE_ID_PROVIDER	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 20 )
GOPHER_ATTRIBUTE_ID_VERSION	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 21 )
GOPHER_ATTRIBUTE_ID_ABSTRACT	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 22 )
GOPHER_ATTRIBUTE_ID_VIEW	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 23 )
GOPHER_ATTRIBUTE_ID_TREEWALK	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 24 )
GOPHER_ATTRIBUTE_ID_UNKNOWN	EQU	( GOPHER_ATTRIBUTE_ID_BASE + 25 )
proto_GopherCreateLocatorA typedef proto stdcall :LPSTR, :INTERNET_PORT, :LPSTR, :LPSTR, :DWORD, :LPSTR, :LPDWORD
externdef stdcall _imp__GopherCreateLocatorA@28: ptr proto_GopherCreateLocatorA
GopherCreateLocatorA equ <_imp__GopherCreateLocatorA@28>
proto_GopherCreateLocatorW typedef proto stdcall :LPWSTR, :INTERNET_PORT, :LPWSTR, :LPWSTR, :DWORD, :LPWSTR, :LPDWORD
externdef stdcall _imp__GopherCreateLocatorW@28: ptr proto_GopherCreateLocatorW
GopherCreateLocatorW equ <_imp__GopherCreateLocatorW@28>
ifdef UNICODE
GopherCreateLocator	EQU	<GopherCreateLocatorW>
else 
GopherCreateLocator	EQU	<GopherCreateLocatorA>
endif 
proto_GopherGetLocatorTypeA typedef proto stdcall :LPSTR, :LPDWORD
externdef stdcall _imp__GopherGetLocatorTypeA@8: ptr proto_GopherGetLocatorTypeA
GopherGetLocatorTypeA equ <_imp__GopherGetLocatorTypeA@8>
proto_GopherGetLocatorTypeW typedef proto stdcall :LPWSTR, :LPDWORD
externdef stdcall _imp__GopherGetLocatorTypeW@8: ptr proto_GopherGetLocatorTypeW
GopherGetLocatorTypeW equ <_imp__GopherGetLocatorTypeW@8>
ifdef UNICODE
GopherGetLocatorType	EQU	<GopherGetLocatorTypeW>
else 
GopherGetLocatorType	EQU	<GopherGetLocatorTypeA>
endif 
@DefProto INTERNETAPI, GopherFindFirstFileA, stdcall, , <:HINTERNET, :LPSTR, :LPSTR, :LPGOPHER_FIND_DATAA, :DWORD, :DWORD_PTR>, 24
@DefProto INTERNETAPI, GopherFindFirstFileW, stdcall, , <:HINTERNET, :LPWSTR, :LPWSTR, :LPGOPHER_FIND_DATAW, :DWORD, :DWORD_PTR>, 24
ifdef UNICODE
GopherFindFirstFile	EQU	<GopherFindFirstFileW>
else 
GopherFindFirstFile	EQU	<GopherFindFirstFileA>
endif 
@DefProto INTERNETAPI, GopherOpenFileA, stdcall, , <:HINTERNET, :LPSTR, :LPSTR, :DWORD, :DWORD_PTR>, 20
@DefProto INTERNETAPI, GopherOpenFileW, stdcall, , <:HINTERNET, :LPWSTR, :LPWSTR, :DWORD, :DWORD_PTR>, 20
ifdef UNICODE
GopherOpenFile	EQU	<GopherOpenFileW>
else 
GopherOpenFile	EQU	<GopherOpenFileA>
endif 
proto_GOPHER_ATTRIBUTE_ENUMERATOR typedef proto stdcall :LPGOPHER_ATTRIBUTE_TYPE,:DWORD
GOPHER_ATTRIBUTE_ENUMERATOR typedef ptr proto_GOPHER_ATTRIBUTE_ENUMERATOR
proto_GopherGetAttributeA typedef proto stdcall :HINTERNET, :LPSTR, :LPSTR, :LPBYTE, :DWORD, :LPDWORD, :GOPHER_ATTRIBUTE_ENUMERATOR, :DWORD_PTR
externdef stdcall _imp__GopherGetAttributeA@32: ptr proto_GopherGetAttributeA
GopherGetAttributeA equ <_imp__GopherGetAttributeA@32>
proto_GopherGetAttributeW typedef proto stdcall :HINTERNET, :LPWSTR, :LPWSTR, :LPBYTE, :DWORD, :LPDWORD, :GOPHER_ATTRIBUTE_ENUMERATOR, :DWORD_PTR
externdef stdcall _imp__GopherGetAttributeW@32: ptr proto_GopherGetAttributeW
GopherGetAttributeW equ <_imp__GopherGetAttributeW@32>
ifdef UNICODE
GopherGetAttribute	EQU	<GopherGetAttributeW>
else 
GopherGetAttribute	EQU	<GopherGetAttributeA>
endif 
HTTP_MAJOR_VERSION	EQU	1
HTTP_MINOR_VERSION	EQU	0
HTTP_VERSION	EQU	<TEXT ( "HTTP/1.0" )>
HTTP_QUERY_MIME_VERSION	EQU	0
HTTP_QUERY_CONTENT_TYPE	EQU	1
HTTP_QUERY_CONTENT_TRANSFER_ENCODING	EQU	2
HTTP_QUERY_CONTENT_ID	EQU	3
HTTP_QUERY_CONTENT_DESCRIPTION	EQU	4
HTTP_QUERY_CONTENT_LENGTH	EQU	5
HTTP_QUERY_CONTENT_LANGUAGE	EQU	6
HTTP_QUERY_ALLOW	EQU	7
HTTP_QUERY_PUBLIC	EQU	8
HTTP_QUERY_DATE	EQU	9
HTTP_QUERY_EXPIRES	EQU	10
HTTP_QUERY_LAST_MODIFIED	EQU	11
HTTP_QUERY_MESSAGE_ID	EQU	12
HTTP_QUERY_URI	EQU	13
HTTP_QUERY_DERIVED_FROM	EQU	14
HTTP_QUERY_COST	EQU	15
HTTP_QUERY_LINK	EQU	16
HTTP_QUERY_PRAGMA	EQU	17
HTTP_QUERY_VERSION	EQU	18
HTTP_QUERY_STATUS_CODE	EQU	19
HTTP_QUERY_STATUS_TEXT	EQU	20
HTTP_QUERY_RAW_HEADERS	EQU	21
HTTP_QUERY_RAW_HEADERS_CRLF	EQU	22
HTTP_QUERY_CONNECTION	EQU	23
HTTP_QUERY_ACCEPT	EQU	24
HTTP_QUERY_ACCEPT_CHARSET	EQU	25
HTTP_QUERY_ACCEPT_ENCODING	EQU	26
HTTP_QUERY_ACCEPT_LANGUAGE	EQU	27
HTTP_QUERY_AUTHORIZATION	EQU	28
HTTP_QUERY_CONTENT_ENCODING	EQU	29
HTTP_QUERY_FORWARDED	EQU	30
HTTP_QUERY_FROM	EQU	31
HTTP_QUERY_IF_MODIFIED_SINCE	EQU	32
HTTP_QUERY_LOCATION	EQU	33
HTTP_QUERY_ORIG_URI	EQU	34
HTTP_QUERY_REFERER	EQU	35
HTTP_QUERY_RETRY_AFTER	EQU	36
HTTP_QUERY_SERVER	EQU	37
HTTP_QUERY_TITLE	EQU	38
HTTP_QUERY_USER_AGENT	EQU	39
HTTP_QUERY_WWW_AUTHENTICATE	EQU	40
HTTP_QUERY_PROXY_AUTHENTICATE	EQU	41
HTTP_QUERY_ACCEPT_RANGES	EQU	42
HTTP_QUERY_SET_COOKIE	EQU	43
HTTP_QUERY_COOKIE	EQU	44
HTTP_QUERY_REQUEST_METHOD	EQU	45
HTTP_QUERY_REFRESH	EQU	46
HTTP_QUERY_CONTENT_DISPOSITION	EQU	47
HTTP_QUERY_AGE	EQU	48
HTTP_QUERY_CACHE_CONTROL	EQU	49
HTTP_QUERY_CONTENT_BASE	EQU	50
HTTP_QUERY_CONTENT_LOCATION	EQU	51
HTTP_QUERY_CONTENT_MD5	EQU	52
HTTP_QUERY_CONTENT_RANGE	EQU	53
HTTP_QUERY_ETAG	EQU	54
HTTP_QUERY_HOST	EQU	55
HTTP_QUERY_IF_MATCH	EQU	56
HTTP_QUERY_IF_NONE_MATCH	EQU	57
HTTP_QUERY_IF_RANGE	EQU	58
HTTP_QUERY_IF_UNMODIFIED_SINCE	EQU	59
HTTP_QUERY_MAX_FORWARDS	EQU	60
HTTP_QUERY_PROXY_AUTHORIZATION	EQU	61
HTTP_QUERY_RANGE	EQU	62
HTTP_QUERY_TRANSFER_ENCODING	EQU	63
HTTP_QUERY_UPGRADE	EQU	64
HTTP_QUERY_VARY	EQU	65
HTTP_QUERY_VIA	EQU	66
HTTP_QUERY_WARNING	EQU	67
HTTP_QUERY_MAX	EQU	67
HTTP_QUERY_CUSTOM	EQU	65535
HTTP_QUERY_FLAG_REQUEST_HEADERS	EQU	80000000h
HTTP_QUERY_FLAG_SYSTEMTIME	EQU	40000000h
HTTP_QUERY_FLAG_NUMBER	EQU	20000000h
HTTP_QUERY_FLAG_COALESCE	EQU	10000000h
HTTP_QUERY_MODIFIER_FLAGS_MASK	EQU	( HTTP_QUERY_FLAG_REQUEST_HEADERS  or  HTTP_QUERY_FLAG_SYSTEMTIME  or  HTTP_QUERY_FLAG_NUMBER  or  HTTP_QUERY_FLAG_COALESCE )
HTTP_QUERY_HEADER_MASK	EQU	<(  not  HTTP_QUERY_MODIFIER_FLAGS_MASK )>
HTTP_STATUS_CONTINUE	EQU	100
HTTP_STATUS_SWITCH_PROTOCOLS	EQU	101
HTTP_STATUS_OK	EQU	200
HTTP_STATUS_CREATED	EQU	201
HTTP_STATUS_ACCEPTED	EQU	202
HTTP_STATUS_PARTIAL	EQU	203
HTTP_STATUS_NO_CONTENT	EQU	204
HTTP_STATUS_RESET_CONTENT	EQU	205
HTTP_STATUS_PARTIAL_CONTENT	EQU	206
HTTP_STATUS_AMBIGUOUS	EQU	300
HTTP_STATUS_MOVED	EQU	301
HTTP_STATUS_REDIRECT	EQU	302
HTTP_STATUS_REDIRECT_METHOD	EQU	303
HTTP_STATUS_NOT_MODIFIED	EQU	304
HTTP_STATUS_USE_PROXY	EQU	305
HTTP_STATUS_REDIRECT_KEEP_VERB	EQU	307
HTTP_STATUS_BAD_REQUEST	EQU	400
HTTP_STATUS_DENIED	EQU	401
HTTP_STATUS_PAYMENT_REQ	EQU	402
HTTP_STATUS_FORBIDDEN	EQU	403
HTTP_STATUS_NOT_FOUND	EQU	404
HTTP_STATUS_BAD_METHOD	EQU	405
HTTP_STATUS_NONE_ACCEPTABLE	EQU	406
HTTP_STATUS_PROXY_AUTH_REQ	EQU	407
HTTP_STATUS_REQUEST_TIMEOUT	EQU	408
HTTP_STATUS_CONFLICT	EQU	409
HTTP_STATUS_GONE	EQU	410
HTTP_STATUS_LENGTH_REQUIRED	EQU	411
HTTP_STATUS_PRECOND_FAILED	EQU	412
HTTP_STATUS_REQUEST_TOO_LARGE	EQU	413
HTTP_STATUS_URI_TOO_LONG	EQU	414
HTTP_STATUS_UNSUPPORTED_MEDIA	EQU	415
HTTP_STATUS_SERVER_ERROR	EQU	500
HTTP_STATUS_NOT_SUPPORTED	EQU	501
HTTP_STATUS_BAD_GATEWAY	EQU	502
HTTP_STATUS_SERVICE_UNAVAIL	EQU	503
HTTP_STATUS_GATEWAY_TIMEOUT	EQU	504
HTTP_STATUS_VERSION_NOT_SUP	EQU	505
HTTP_STATUS_FIRST	EQU	<HTTP_STATUS_CONTINUE>
HTTP_STATUS_LAST	EQU	<HTTP_STATUS_VERSION_NOT_SUP>
@DefProto INTERNETAPI, HttpOpenRequestA, stdcall, , <:HINTERNET, :LPSTR, :LPSTR, :LPSTR, :LPSTR, :ptr LPSTR, :DWORD, :DWORD_PTR>, 32
@DefProto INTERNETAPI, HttpOpenRequestW, stdcall, , <:HINTERNET, :LPWSTR, :LPWSTR, :LPWSTR, :LPWSTR, :ptr LPWSTR, :DWORD, :DWORD_PTR>, 32
ifdef UNICODE
HttpOpenRequest	EQU	<HttpOpenRequestW>
else 
HttpOpenRequest	EQU	<HttpOpenRequestA>
endif 
proto_HttpAddRequestHeadersA typedef proto stdcall :HINTERNET, :LPSTR, :DWORD, :DWORD
externdef stdcall _imp__HttpAddRequestHeadersA@16: ptr proto_HttpAddRequestHeadersA
HttpAddRequestHeadersA equ <_imp__HttpAddRequestHeadersA@16>
proto_HttpAddRequestHeadersW typedef proto stdcall :HINTERNET, :LPWSTR, :DWORD, :DWORD
externdef stdcall _imp__HttpAddRequestHeadersW@16: ptr proto_HttpAddRequestHeadersW
HttpAddRequestHeadersW equ <_imp__HttpAddRequestHeadersW@16>
ifdef UNICODE
HttpAddRequestHeaders	EQU	<HttpAddRequestHeadersW>
else 
HttpAddRequestHeaders	EQU	<HttpAddRequestHeadersA>
endif 
HTTP_ADDREQ_INDEX_MASK	EQU	0000FFFFh
HTTP_ADDREQ_FLAGS_MASK	EQU	0FFFF0000h
HTTP_ADDREQ_FLAG_ADD_IF_NEW	EQU	10000000h
HTTP_ADDREQ_FLAG_ADD	EQU	20000000h
HTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA	EQU	40000000h
HTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON	EQU	01000000h
HTTP_ADDREQ_FLAG_COALESCE	EQU	<HTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA>
HTTP_ADDREQ_FLAG_REPLACE	EQU	80000000h
proto_HttpSendRequestA typedef proto stdcall :HINTERNET, :LPSTR, :DWORD, :LPVOID, :DWORD
externdef stdcall _imp__HttpSendRequestA@20: ptr proto_HttpSendRequestA
HttpSendRequestA equ <_imp__HttpSendRequestA@20>
proto_HttpSendRequestW typedef proto stdcall :HINTERNET, :LPWSTR, :DWORD, :LPVOID, :DWORD
externdef stdcall _imp__HttpSendRequestW@20: ptr proto_HttpSendRequestW
HttpSendRequestW equ <_imp__HttpSendRequestW@20>
ifdef UNICODE
HttpSendRequest	EQU	<HttpSendRequestW>
else 
HttpSendRequest	EQU	<HttpSendRequestA>
endif 
@DefProto INTERNETAPI, HttpSendRequestExA, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSA, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR>, 20
@DefProto INTERNETAPI, HttpSendRequestExW, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSW, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR>, 20
ifdef UNICODE
HttpSendRequestEx	EQU	<HttpSendRequestExW>
else 
HttpSendRequestEx	EQU	<HttpSendRequestExA>
endif 
HSR_ASYNC	EQU	<WININET_API_FLAG_ASYNC>
HSR_SYNC	EQU	<WININET_API_FLAG_SYNC>
HSR_USE_CONTEXT	EQU	<WININET_API_FLAG_USE_CONTEXT>
HSR_INITIATE	EQU	00000008h
HSR_DOWNLOAD	EQU	00000010h
HSR_CHUNKED	EQU	00000020h
@DefProto INTERNETAPI, HttpEndRequestA, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSA, :DWORD, :DWORD_PTR>, 16
@DefProto INTERNETAPI, HttpEndRequestW, stdcall, , <:HINTERNET, :LPINTERNET_BUFFERSW, :DWORD, :DWORD_PTR>, 16
ifdef UNICODE
HttpEndRequest	EQU	<HttpEndRequestW>
else 
HttpEndRequest	EQU	<HttpEndRequestA>
endif 
proto_HttpQueryInfoA typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :LPDWORD, :LPDWORD
externdef stdcall _imp__HttpQueryInfoA@20: ptr proto_HttpQueryInfoA
HttpQueryInfoA equ <_imp__HttpQueryInfoA@20>
proto_HttpQueryInfoW typedef proto stdcall :HINTERNET, :DWORD, :LPVOID, :LPDWORD, :LPDWORD
externdef stdcall _imp__HttpQueryInfoW@20: ptr proto_HttpQueryInfoW
HttpQueryInfoW equ <_imp__HttpQueryInfoW@20>
ifdef UNICODE
HttpQueryInfo	EQU	<HttpQueryInfoW>
else 
HttpQueryInfo	EQU	<HttpQueryInfoA>
endif 
proto_InternetSetCookieA typedef proto stdcall :LPSTR, :LPSTR, :LPSTR
externdef stdcall _imp__InternetSetCookieA@12: ptr proto_InternetSetCookieA
InternetSetCookieA equ <_imp__InternetSetCookieA@12>
proto_InternetSetCookieW typedef proto stdcall :LPSTR, :LPWSTR, :LPWSTR
externdef stdcall _imp__InternetSetCookieW@12: ptr proto_InternetSetCookieW
InternetSetCookieW equ <_imp__InternetSetCookieW@12>
ifdef UNICODE
InternetSetCookie	EQU	<InternetSetCookieW>
else 
InternetSetCookie	EQU	<InternetSetCookieA>
endif 
proto_InternetGetCookieA typedef proto stdcall :LPSTR, :LPSTR, :LPSTR, :LPDWORD
externdef stdcall _imp__InternetGetCookieA@16: ptr proto_InternetGetCookieA
InternetGetCookieA equ <_imp__InternetGetCookieA@16>
proto_InternetGetCookieW typedef proto stdcall :LPSTR, :LPWSTR, :LPWSTR, :LPDWORD
externdef stdcall _imp__InternetGetCookieW@16: ptr proto_InternetGetCookieW
InternetGetCookieW equ <_imp__InternetGetCookieW@16>
ifdef UNICODE
InternetGetCookie	EQU	<InternetGetCookieW>
else 
InternetGetCookie	EQU	<InternetGetCookieA>
endif 
@DefProto INTERNETAPI, InternetAttemptConnect, stdcall, , <:DWORD>, 4
proto_InternetCheckConnectionA typedef proto stdcall :LPSTR, :DWORD, :DWORD
externdef stdcall _imp__InternetCheckConnectionA@12: ptr proto_InternetCheckConnectionA
InternetCheckConnectionA equ <_imp__InternetCheckConnectionA@12>
proto_InternetCheckConnectionW typedef proto stdcall :LPWSTR, :DWORD, :DWORD
externdef stdcall _imp__InternetCheckConnectionW@12: ptr proto_InternetCheckConnectionW
InternetCheckConnectionW equ <_imp__InternetCheckConnectionW@12>
ifdef UNICODE
InternetCheckConnection	EQU	<InternetCheckConnectionW>
else 
InternetCheckConnection	EQU	<InternetCheckConnectionA>
endif 
FLAG_ICC_FORCE_CONNECTION	EQU	00000001h
FLAGS_ERROR_UI_FILTER_FOR_ERRORS	EQU	01h
FLAGS_ERROR_UI_FLAGS_CHANGE_OPTIONS	EQU	02h
FLAGS_ERROR_UI_FLAGS_GENERATE_DATA	EQU	04h
FLAGS_ERROR_UI_FLAGS_NO_UI	EQU	08h
FLAGS_ERROR_UI_SERIALIZE_DIALOGS	EQU	10h
InternetAuthNotifyCallback proto  :DWORD_PTR, :DWORD, :LPVOID
proto_PFN_AUTH_NOTIFY typedef proto stdcall :DWORD_PTR,:DWORD,:LPVOID
PFN_AUTH_NOTIFY typedef ptr proto_PFN_AUTH_NOTIFY
INTERNET_AUTH_NOTIFY_DATA	struct 
cbStruct	DWORD	?
dwOptions	DWORD	?
pfnNotify	PFN_AUTH_NOTIFY	?
dwContext	DWORD_PTR	?
INTERNET_AUTH_NOTIFY_DATA	ends

@DefProto INTERNETAPI, InternetErrorDlg, stdcall, , <:HWND, :HINTERNET, :DWORD, :DWORD, :ptr LPVOID>, 20
@DefProto INTERNETAPI, InternetConfirmZoneCrossing, stdcall, , <:HWND, :LPSTR, :LPSTR, :BOOL>, 16
INTERNET_ERROR_BASE	EQU	12000
ERROR_INTERNET_OUT_OF_HANDLES	EQU	( INTERNET_ERROR_BASE + 1 )
ERROR_INTERNET_TIMEOUT	EQU	( INTERNET_ERROR_BASE + 2 )
ERROR_INTERNET_EXTENDED_ERROR	EQU	( INTERNET_ERROR_BASE + 3 )
ERROR_INTERNET_INTERNAL_ERROR	EQU	( INTERNET_ERROR_BASE + 4 )
ERROR_INTERNET_INVALID_URL	EQU	( INTERNET_ERROR_BASE + 5 )
ERROR_INTERNET_UNRECOGNIZED_SCHEME	EQU	( INTERNET_ERROR_BASE + 6 )
ERROR_INTERNET_NAME_NOT_RESOLVED	EQU	( INTERNET_ERROR_BASE + 7 )
ERROR_INTERNET_PROTOCOL_NOT_FOUND	EQU	( INTERNET_ERROR_BASE + 8 )
ERROR_INTERNET_INVALID_OPTION	EQU	( INTERNET_ERROR_BASE + 9 )
ERROR_INTERNET_BAD_OPTION_LENGTH	EQU	( INTERNET_ERROR_BASE + 10 )
ERROR_INTERNET_OPTION_NOT_SETTABLE	EQU	( INTERNET_ERROR_BASE + 11 )
ERROR_INTERNET_SHUTDOWN	EQU	( INTERNET_ERROR_BASE + 12 )
ERROR_INTERNET_INCORRECT_USER_NAME	EQU	( INTERNET_ERROR_BASE + 13 )
ERROR_INTERNET_INCORRECT_PASSWORD	EQU	( INTERNET_ERROR_BASE + 14 )
ERROR_INTERNET_LOGIN_FAILURE	EQU	( INTERNET_ERROR_BASE + 15 )
ERROR_INTERNET_INVALID_OPERATION	EQU	( INTERNET_ERROR_BASE + 16 )
ERROR_INTERNET_OPERATION_CANCELLED	EQU	( INTERNET_ERROR_BASE + 17 )
ERROR_INTERNET_INCORRECT_HANDLE_TYPE	EQU	( INTERNET_ERROR_BASE + 18 )
ERROR_INTERNET_INCORRECT_HANDLE_STATE	EQU	( INTERNET_ERROR_BASE + 19 )
ERROR_INTERNET_NOT_PROXY_REQUEST	EQU	( INTERNET_ERROR_BASE + 20 )
ERROR_INTERNET_REGISTRY_VALUE_NOT_FOUND	EQU	( INTERNET_ERROR_BASE + 21 )
ERROR_INTERNET_BAD_REGISTRY_PARAMETER	EQU	( INTERNET_ERROR_BASE + 22 )
ERROR_INTERNET_NO_DIRECT_ACCESS	EQU	( INTERNET_ERROR_BASE + 23 )
ERROR_INTERNET_NO_CONTEXT	EQU	( INTERNET_ERROR_BASE + 24 )
ERROR_INTERNET_NO_CALLBACK	EQU	( INTERNET_ERROR_BASE + 25 )
ERROR_INTERNET_REQUEST_PENDING	EQU	( INTERNET_ERROR_BASE + 26 )
ERROR_INTERNET_INCORRECT_FORMAT	EQU	( INTERNET_ERROR_BASE + 27 )
ERROR_INTERNET_ITEM_NOT_FOUND	EQU	( INTERNET_ERROR_BASE + 28 )
ERROR_INTERNET_CANNOT_CONNECT	EQU	( INTERNET_ERROR_BASE + 29 )
ERROR_INTERNET_CONNECTION_ABORTED	EQU	( INTERNET_ERROR_BASE + 30 )
ERROR_INTERNET_CONNECTION_RESET	EQU	( INTERNET_ERROR_BASE + 31 )
ERROR_INTERNET_FORCE_RETRY	EQU	( INTERNET_ERROR_BASE + 32 )
ERROR_INTERNET_INVALID_PROXY_REQUEST	EQU	( INTERNET_ERROR_BASE + 33 )
ERROR_INTERNET_NEED_UI	EQU	( INTERNET_ERROR_BASE + 34 )
ERROR_INTERNET_HANDLE_EXISTS	EQU	( INTERNET_ERROR_BASE + 36 )
ERROR_INTERNET_SEC_CERT_DATE_INVALID	EQU	( INTERNET_ERROR_BASE + 37 )
ERROR_INTERNET_SEC_CERT_CN_INVALID	EQU	( INTERNET_ERROR_BASE + 38 )
ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR	EQU	( INTERNET_ERROR_BASE + 39 )
ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR	EQU	( INTERNET_ERROR_BASE + 40 )
ERROR_INTERNET_MIXED_SECURITY	EQU	( INTERNET_ERROR_BASE + 41 )
ERROR_INTERNET_CHG_POST_IS_NON_SECURE	EQU	( INTERNET_ERROR_BASE + 42 )
ERROR_INTERNET_POST_IS_NON_SECURE	EQU	( INTERNET_ERROR_BASE + 43 )
ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED	EQU	( INTERNET_ERROR_BASE + 44 )
ERROR_INTERNET_INVALID_CA	EQU	( INTERNET_ERROR_BASE + 45 )
ERROR_INTERNET_CLIENT_AUTH_NOT_SETUP	EQU	( INTERNET_ERROR_BASE + 46 )
ERROR_INTERNET_ASYNC_THREAD_FAILED	EQU	( INTERNET_ERROR_BASE + 47 )
ERROR_INTERNET_REDIRECT_SCHEME_CHANGE	EQU	( INTERNET_ERROR_BASE + 48 )
ERROR_INTERNET_DIALOG_PENDING	EQU	( INTERNET_ERROR_BASE + 49 )
ERROR_INTERNET_RETRY_DIALOG	EQU	( INTERNET_ERROR_BASE + 50 )
ERROR_INTERNET_HTTPS_HTTP_SUBMIT_REDIR	EQU	( INTERNET_ERROR_BASE + 52 )
ERROR_INTERNET_INSERT_CDROM	EQU	( INTERNET_ERROR_BASE + 53 )
ERROR_FTP_TRANSFER_IN_PROGRESS	EQU	( INTERNET_ERROR_BASE + 110 )
ERROR_FTP_DROPPED	EQU	( INTERNET_ERROR_BASE + 111 )
ERROR_FTP_NO_PASSIVE_MODE	EQU	( INTERNET_ERROR_BASE + 112 )
ERROR_GOPHER_PROTOCOL_ERROR	EQU	( INTERNET_ERROR_BASE + 130 )
ERROR_GOPHER_NOT_FILE	EQU	( INTERNET_ERROR_BASE + 131 )
ERROR_GOPHER_DATA_ERROR	EQU	( INTERNET_ERROR_BASE + 132 )
ERROR_GOPHER_END_OF_DATA	EQU	( INTERNET_ERROR_BASE + 133 )
ERROR_GOPHER_INVALID_LOCATOR	EQU	( INTERNET_ERROR_BASE + 134 )
ERROR_GOPHER_INCORRECT_LOCATOR_TYPE	EQU	( INTERNET_ERROR_BASE + 135 )
ERROR_GOPHER_NOT_GOPHER_PLUS	EQU	( INTERNET_ERROR_BASE + 136 )
ERROR_GOPHER_ATTRIBUTE_NOT_FOUND	EQU	( INTERNET_ERROR_BASE + 137 )
ERROR_GOPHER_UNKNOWN_LOCATOR	EQU	( INTERNET_ERROR_BASE + 138 )
ERROR_HTTP_HEADER_NOT_FOUND	EQU	( INTERNET_ERROR_BASE + 150 )
ERROR_HTTP_DOWNLEVEL_SERVER	EQU	( INTERNET_ERROR_BASE + 151 )
ERROR_HTTP_INVALID_SERVER_RESPONSE	EQU	( INTERNET_ERROR_BASE + 152 )
ERROR_HTTP_INVALID_HEADER	EQU	( INTERNET_ERROR_BASE + 153 )
ERROR_HTTP_INVALID_QUERY_REQUEST	EQU	( INTERNET_ERROR_BASE + 154 )
ERROR_HTTP_HEADER_ALREADY_EXISTS	EQU	( INTERNET_ERROR_BASE + 155 )
ERROR_HTTP_REDIRECT_FAILED	EQU	( INTERNET_ERROR_BASE + 156 )
ERROR_HTTP_NOT_REDIRECTED	EQU	( INTERNET_ERROR_BASE + 160 )
ERROR_HTTP_COOKIE_NEEDS_CONFIRMATION	EQU	( INTERNET_ERROR_BASE + 161 )
ERROR_HTTP_COOKIE_DECLINED	EQU	( INTERNET_ERROR_BASE + 162 )
ERROR_HTTP_REDIRECT_NEEDS_CONFIRMATION	EQU	( INTERNET_ERROR_BASE + 168 )
ERROR_INTERNET_SECURITY_CHANNEL_ERROR	EQU	( INTERNET_ERROR_BASE + 157 )
ERROR_INTERNET_UNABLE_TO_CACHE_FILE	EQU	( INTERNET_ERROR_BASE + 158 )
ERROR_INTERNET_TCPIP_NOT_INSTALLED	EQU	( INTERNET_ERROR_BASE + 159 )
ERROR_INTERNET_DISCONNECTED	EQU	( INTERNET_ERROR_BASE + 163 )
ERROR_INTERNET_SERVER_UNREACHABLE	EQU	( INTERNET_ERROR_BASE + 164 )
ERROR_INTERNET_PROXY_SERVER_UNREACHABLE	EQU	( INTERNET_ERROR_BASE + 165 )
ERROR_INTERNET_BAD_AUTO_PROXY_SCRIPT	EQU	( INTERNET_ERROR_BASE + 166 )
ERROR_INTERNET_UNABLE_TO_DOWNLOAD_SCRIPT	EQU	( INTERNET_ERROR_BASE + 167 )
ERROR_INTERNET_SEC_INVALID_CERT	EQU	( INTERNET_ERROR_BASE + 169 )
ERROR_INTERNET_SEC_CERT_REVOKED	EQU	( INTERNET_ERROR_BASE + 170 )
ERROR_INTERNET_FAILED_DUETOSECURITYCHECK	EQU	( INTERNET_ERROR_BASE + 171 )
INTERNET_ERROR_LAST	EQU	<ERROR_INTERNET_FAILED_DUETOSECURITYCHECK>
NORMAL_CACHE_ENTRY	EQU	00000001h
COOKIE_CACHE_ENTRY	EQU	00100000h
URLHISTORY_CACHE_ENTRY	EQU	00200000h
TRACK_OFFLINE_CACHE_ENTRY	EQU	00000010h
TRACK_ONLINE_CACHE_ENTRY	EQU	00000020h
STICKY_CACHE_ENTRY	EQU	00000004h
SPARSE_CACHE_ENTRY	EQU	00010000h
URLCACHE_FIND_DEFAULT_FILTER	EQU	NORMAL_CACHE_ENTRY  or  COOKIE_CACHE_ENTRY  or  URLHISTORY_CACHE_ENTRY  or  TRACK_OFFLINE_CACHE_ENTRY  or  TRACK_ONLINE_CACHE_ENTRY  or  STICKY_CACHE_ENTRY
INTERNET_CACHE_ENTRY_INFOA	struct 
dwStructSize	DWORD	?
lpszSourceUrlName	LPSTR	?
lpszLocalFileName	LPSTR	?
CacheEntryType	DWORD	?
dwUseCount	DWORD	?
dwHitRate	DWORD	?
dwSizeLow	DWORD	?
dwSizeHigh	DWORD	?
LastModifiedTime	FILETIME	<>
ExpireTime	FILETIME	<>
LastAccessTime	FILETIME	<>
LastSyncTime	FILETIME	<>
lpHeaderInfo	LPBYTE	?
dwHeaderInfoSize	DWORD	?
lpszFileExtension	LPSTR	?
union
dwReserved	DWORD	?
dwExemptDelta	DWORD	?
ends
INTERNET_CACHE_ENTRY_INFOA	ends

LPINTERNET_CACHE_ENTRY_INFOA typedef ptr INTERNET_CACHE_ENTRY_INFOA

INTERNET_CACHE_ENTRY_INFOW	struct 
dwStructSize	DWORD	?
lpszSourceUrlName	LPSTR	?
lpszLocalFileName	LPWSTR	?
CacheEntryType	DWORD	?
dwUseCount	DWORD	?
dwHitRate	DWORD	?
dwSizeLow	DWORD	?
dwSizeHigh	DWORD	?
LastModifiedTime	FILETIME	<>
ExpireTime	FILETIME	<>
LastAccessTime	FILETIME	<>
LastSyncTime	FILETIME	<>
lpHeaderInfo	LPBYTE	?
dwHeaderInfoSize	DWORD	?
lpszFileExtension	LPWSTR	?
union
dwReserved	DWORD	?
dwExemptDelta	DWORD	?
ends
INTERNET_CACHE_ENTRY_INFOW	ends

LPINTERNET_CACHE_ENTRY_INFOW typedef ptr INTERNET_CACHE_ENTRY_INFOW

ifdef UNICODE
INTERNET_CACHE_ENTRY_INFO typedef INTERNET_CACHE_ENTRY_INFOW
LPINTERNET_CACHE_ENTRY_INFO typedef LPINTERNET_CACHE_ENTRY_INFOW
else 
INTERNET_CACHE_ENTRY_INFO typedef INTERNET_CACHE_ENTRY_INFOA
LPINTERNET_CACHE_ENTRY_INFO typedef LPINTERNET_CACHE_ENTRY_INFOA
endif 
proto_CreateUrlCacheEntryA typedef proto stdcall :LPSTR, :DWORD, :LPSTR, :LPSTR, :DWORD
externdef stdcall _imp__CreateUrlCacheEntryA@20: ptr proto_CreateUrlCacheEntryA
CreateUrlCacheEntryA equ <_imp__CreateUrlCacheEntryA@20>
proto_CreateUrlCacheEntryW typedef proto stdcall :LPSTR, :DWORD, :LPSTR, :LPWSTR, :DWORD
externdef stdcall _imp__CreateUrlCacheEntryW@20: ptr proto_CreateUrlCacheEntryW
CreateUrlCacheEntryW equ <_imp__CreateUrlCacheEntryW@20>
ifdef UNICODE
CreateUrlCacheEntry	EQU	<CreateUrlCacheEntryW>
else 
CreateUrlCacheEntry	EQU	<CreateUrlCacheEntryA>
endif 
proto_CommitUrlCacheEntryA typedef proto stdcall :LPSTR, :LPSTR, :FILETIME, :FILETIME, :DWORD, :LPBYTE, :DWORD, :LPSTR, :DWORD
externdef stdcall _imp__CommitUrlCacheEntryA@36: ptr proto_CommitUrlCacheEntryA
CommitUrlCacheEntryA equ <_imp__CommitUrlCacheEntryA@36>
proto_CommitUrlCacheEntryW typedef proto stdcall :LPSTR, :LPWSTR, :FILETIME, :FILETIME, :DWORD, :LPBYTE, :DWORD, :LPWSTR, :DWORD
externdef stdcall _imp__CommitUrlCacheEntryW@36: ptr proto_CommitUrlCacheEntryW
CommitUrlCacheEntryW equ <_imp__CommitUrlCacheEntryW@36>
ifdef UNICODE
CommitUrlCacheEntry	EQU	<CommitUrlCacheEntryW>
else 
CommitUrlCacheEntry	EQU	<CommitUrlCacheEntryA>
endif 
proto_RetrieveUrlCacheEntryFileA typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :DWORD
externdef stdcall _imp__RetrieveUrlCacheEntryFileA@16: ptr proto_RetrieveUrlCacheEntryFileA
RetrieveUrlCacheEntryFileA equ <_imp__RetrieveUrlCacheEntryFileA@16>
proto_RetrieveUrlCacheEntryFileW typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :DWORD
externdef stdcall _imp__RetrieveUrlCacheEntryFileW@16: ptr proto_RetrieveUrlCacheEntryFileW
RetrieveUrlCacheEntryFileW equ <_imp__RetrieveUrlCacheEntryFileW@16>
ifdef UNICODE
RetrieveUrlCacheEntryFile	EQU	<RetrieveUrlCacheEntryFileW>
else 
RetrieveUrlCacheEntryFile	EQU	<RetrieveUrlCacheEntryFileA>
endif 
proto_UnlockUrlCacheEntryFile typedef proto stdcall :LPSTR, :DWORD
externdef stdcall _imp__UnlockUrlCacheEntryFile@8: ptr proto_UnlockUrlCacheEntryFile
UnlockUrlCacheEntryFile equ <_imp__UnlockUrlCacheEntryFile@8>
@DefProto INTERNETAPI, RetrieveUrlCacheEntryStreamA, stdcall, , <:LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :BOOL, :DWORD>, 20
@DefProto INTERNETAPI, RetrieveUrlCacheEntryStreamW, stdcall, , <:LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :BOOL, :DWORD>, 20
ifdef UNICODE
RetrieveUrlCacheEntryStream	EQU	<RetrieveUrlCacheEntryStreamW>
else 
RetrieveUrlCacheEntryStream	EQU	<RetrieveUrlCacheEntryStreamA>
endif 
proto_ReadUrlCacheEntryStream typedef proto stdcall :HANDLE, :DWORD, :LPVOID, :LPDWORD, :DWORD
externdef stdcall _imp__ReadUrlCacheEntryStream@20: ptr proto_ReadUrlCacheEntryStream
ReadUrlCacheEntryStream equ <_imp__ReadUrlCacheEntryStream@20>
proto_UnlockUrlCacheEntryStream typedef proto stdcall :HANDLE, :DWORD
externdef stdcall _imp__UnlockUrlCacheEntryStream@8: ptr proto_UnlockUrlCacheEntryStream
UnlockUrlCacheEntryStream equ <_imp__UnlockUrlCacheEntryStream@8>
proto_GetUrlCacheEntryInfoA typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD
externdef stdcall _imp__GetUrlCacheEntryInfoA@12: ptr proto_GetUrlCacheEntryInfoA
GetUrlCacheEntryInfoA equ <_imp__GetUrlCacheEntryInfoA@12>
proto_GetUrlCacheEntryInfoW typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD
externdef stdcall _imp__GetUrlCacheEntryInfoW@12: ptr proto_GetUrlCacheEntryInfoW
GetUrlCacheEntryInfoW equ <_imp__GetUrlCacheEntryInfoW@12>
ifdef UNICODE
GetUrlCacheEntryInfo	EQU	<GetUrlCacheEntryInfoW>
else 
GetUrlCacheEntryInfo	EQU	<GetUrlCacheEntryInfoA>
endif 
proto_GetUrlCacheEntryInfoExA typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPSTR, :LPDWORD, :LPVOID, :DWORD
externdef stdcall _imp__GetUrlCacheEntryInfoExA@28: ptr proto_GetUrlCacheEntryInfoExA
GetUrlCacheEntryInfoExA equ <_imp__GetUrlCacheEntryInfoExA@28>
proto_GetUrlCacheEntryInfoExW typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPSTR, :LPDWORD, :LPVOID, :DWORD
externdef stdcall _imp__GetUrlCacheEntryInfoExW@28: ptr proto_GetUrlCacheEntryInfoExW
GetUrlCacheEntryInfoExW equ <_imp__GetUrlCacheEntryInfoExW@28>
ifdef UNICODE
GetUrlCacheEntryInfoEx	EQU	<GetUrlCacheEntryInfoExW>
else 
GetUrlCacheEntryInfoEx	EQU	<GetUrlCacheEntryInfoExA>
endif 
CACHE_ENTRY_ATTRIBUTE_FC	EQU	00000004h
CACHE_ENTRY_HITRATE_FC	EQU	00000010h
CACHE_ENTRY_MODTIME_FC	EQU	00000040h
CACHE_ENTRY_EXPTIME_FC	EQU	00000080h
CACHE_ENTRY_ACCTIME_FC	EQU	00000100h
CACHE_ENTRY_SYNCTIME_FC	EQU	00000200h
CACHE_ENTRY_HEADERINFO_FC	EQU	00000400h
CACHE_ENTRY_EXEMPT_DELTA_FC	EQU	00000800h
proto_SetUrlCacheEntryInfoA typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :DWORD
externdef stdcall _imp__SetUrlCacheEntryInfoA@12: ptr proto_SetUrlCacheEntryInfoA
SetUrlCacheEntryInfoA equ <_imp__SetUrlCacheEntryInfoA@12>
proto_SetUrlCacheEntryInfoW typedef proto stdcall :LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :DWORD
externdef stdcall _imp__SetUrlCacheEntryInfoW@12: ptr proto_SetUrlCacheEntryInfoW
SetUrlCacheEntryInfoW equ <_imp__SetUrlCacheEntryInfoW@12>
ifdef UNICODE
SetUrlCacheEntryInfo	EQU	<SetUrlCacheEntryInfoW>
else 
SetUrlCacheEntryInfo	EQU	<SetUrlCacheEntryInfoA>
endif 
GROUPID typedef QWORD
@DefProto INTERNETAPI, CreateUrlCacheGroup, stdcall, , <:DWORD, :LPVOID>, 8
proto_DeleteUrlCacheGroup typedef proto stdcall :GROUPID, :DWORD, :LPVOID
externdef stdcall _imp__DeleteUrlCacheGroup@12: ptr proto_DeleteUrlCacheGroup
DeleteUrlCacheGroup equ <_imp__DeleteUrlCacheGroup@12>
INTERNET_CACHE_GROUP_ADD	EQU	0
INTERNET_CACHE_GROUP_REMOVE	EQU	1
proto_SetUrlCacheEntryGroup typedef proto stdcall :LPSTR, :DWORD, :GROUPID, :LPBYTE, :DWORD, :LPVOID
externdef stdcall _imp__SetUrlCacheEntryGroup@24: ptr proto_SetUrlCacheEntryGroup
SetUrlCacheEntryGroup equ <_imp__SetUrlCacheEntryGroup@24>
@DefProto INTERNETAPI, FindFirstUrlCacheEntryExA, stdcall, , <:LPSTR, :DWORD, :DWORD, :GROUPID, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID>, 36
@DefProto INTERNETAPI, FindFirstUrlCacheEntryExW, stdcall, , <:LPSTR, :DWORD, :DWORD, :GROUPID, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID>, 36
ifdef UNICODE
FindFirstUrlCacheEntryEx	EQU	<FindFirstUrlCacheEntryExW>
else 
FindFirstUrlCacheEntryEx	EQU	<FindFirstUrlCacheEntryExA>
endif 
proto_FindNextUrlCacheEntryExA typedef proto stdcall :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
externdef stdcall _imp__FindNextUrlCacheEntryExA@24: ptr proto_FindNextUrlCacheEntryExA
FindNextUrlCacheEntryExA equ <_imp__FindNextUrlCacheEntryExA@24>
proto_FindNextUrlCacheEntryExW typedef proto stdcall :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD, :LPVOID, :LPDWORD, :LPVOID
externdef stdcall _imp__FindNextUrlCacheEntryExW@24: ptr proto_FindNextUrlCacheEntryExW
FindNextUrlCacheEntryExW equ <_imp__FindNextUrlCacheEntryExW@24>
ifdef UNICODE
FindNextUrlCacheEntryEx	EQU	<FindNextUrlCacheEntryExW>
else 
FindNextUrlCacheEntryEx	EQU	<FindNextUrlCacheEntryExA>
endif 
@DefProto INTERNETAPI, FindFirstUrlCacheEntryA, stdcall, , <:LPSTR, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD>, 12
@DefProto INTERNETAPI, FindFirstUrlCacheEntryW, stdcall, , <:LPSTR, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD>, 12
ifdef UNICODE
FindFirstUrlCacheEntry	EQU	<FindFirstUrlCacheEntryW>
else 
FindFirstUrlCacheEntry	EQU	<FindFirstUrlCacheEntryA>
endif 
proto_FindNextUrlCacheEntryA typedef proto stdcall :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOA, :LPDWORD
externdef stdcall _imp__FindNextUrlCacheEntryA@12: ptr proto_FindNextUrlCacheEntryA
FindNextUrlCacheEntryA equ <_imp__FindNextUrlCacheEntryA@12>
proto_FindNextUrlCacheEntryW typedef proto stdcall :HANDLE, :LPINTERNET_CACHE_ENTRY_INFOW, :LPDWORD
externdef stdcall _imp__FindNextUrlCacheEntryW@12: ptr proto_FindNextUrlCacheEntryW
FindNextUrlCacheEntryW equ <_imp__FindNextUrlCacheEntryW@12>
ifdef UNICODE
FindNextUrlCacheEntry	EQU	<FindNextUrlCacheEntryW>
else 
FindNextUrlCacheEntry	EQU	<FindNextUrlCacheEntryA>
endif 
proto_FindCloseUrlCache typedef proto stdcall :HANDLE
externdef stdcall _imp__FindCloseUrlCache@4: ptr proto_FindCloseUrlCache
FindCloseUrlCache equ <_imp__FindCloseUrlCache@4>
proto_DeleteUrlCacheEntry typedef proto stdcall :LPSTR
externdef stdcall _imp__DeleteUrlCacheEntry@4: ptr proto_DeleteUrlCacheEntry
DeleteUrlCacheEntry equ <_imp__DeleteUrlCacheEntry@4>
@DefProto INTERNETAPI, InternetDial, stdcall, , <:HWND, :LPTSTR, :DWORD, :LPDWORD, :DWORD>, 20
INTERNET_DIAL_UNATTENDED	EQU	8000h
@DefProto INTERNETAPI, InternetHangUp, stdcall, , <:DWORD_PTR, :DWORD>, 8
INTERENT_GOONLINE_REFRESH	EQU	00000001h
INTERENT_GOONLINE_MASK	EQU	00000001h
@DefProto INTERNETAPI, InternetGoOnline, stdcall, , <:LPTSTR, :HWND, :DWORD>, 12
@DefProto INTERNETAPI, InternetAutodial, stdcall, , <:DWORD, :DWORD>, 8
INTERNET_AUTODIAL_FORCE_ONLINE	EQU	1
INTERNET_AUTODIAL_FORCE_UNATTENDED	EQU	2
INTERNET_AUTODIAL_FAILIFSECURITYCHECK	EQU	4
INTERNET_AUTODIAL_FLAGS_MASK	EQU	( INTERNET_AUTODIAL_FORCE_ONLINE  or  INTERNET_AUTODIAL_FORCE_UNATTENDED  or  INTERNET_AUTODIAL_FAILIFSECURITYCHECK )
@DefProto INTERNETAPI, InternetAutodialHangup, stdcall, , <:DWORD>, 4
@DefProto INTERNETAPI, InternetGetConnectedState, stdcall, , <:LPDWORD, :DWORD>, 8
INTERNET_CONNECTION_MODEM	EQU	1
INTERNET_CONNECTION_LAN	EQU	2
INTERNET_CONNECTION_PROXY	EQU	4
INTERNET_CONNECTION_MODEM_BUSY	EQU	8
proto_PFN_DIAL_HANDLER typedef proto stdcall :HWND,:LPSTR,:DWORD,:LPDWORD
PFN_DIAL_HANDLER typedef ptr proto_PFN_DIAL_HANDLER
INTERNET_CUSTOMDIAL_CONNECT	EQU	0
INTERNET_CUSTOMDIAL_UNATTENDED	EQU	1
INTERNET_CUSTOMDIAL_DISCONNECT	EQU	2
INTERNET_CUSTOMDIAL_SHOWOFFLINE	EQU	4
INTERNET_CUSTOMDIAL_SAFE_FOR_UNATTENDED	EQU	1
INTERNET_CUSTOMDIAL_WILL_SUPPLY_STATE	EQU	2
INTERNET_CUSTOMDIAL_CAN_HANGUP	EQU	4
@DefProto INTERNETAPI, InternetSetDialState, stdcall, , <:LPCTSTR, :DWORD, :DWORD>, 12
INTERNET_DIALSTATE_DISCONNECTED	EQU	1
if defined(__cplusplus)
;}
endif 
;#pragma pack ( pop , wininet ) 
endif 

;--- errors: 0
;--- end of file ---
