;--- include file created by h2incx v0.99.19 (copyright 2005-2006 japheth)
;--- source file: D:\MICROS~1\Include\winnetwk.h, last modified: 5/23/2001 19:38
;--- cmdline used for creation:  -d3 -i mshtml.h

ifndef _WINNETWK_
_WINNETWK_	EQU	<>
ifdef __cplusplus
;extern "C"
;{
endif 
WNNC_NET_MSNET	EQU	00010000h
WNNC_NET_LANMAN	EQU	00020000h
WNNC_NET_NETWARE	EQU	00030000h
WNNC_NET_VINES	EQU	00040000h
WNNC_NET_10NET	EQU	00050000h
WNNC_NET_LOCUS	EQU	00060000h
WNNC_NET_SUN_PC_NFS	EQU	00070000h
WNNC_NET_LANSTEP	EQU	00080000h
WNNC_NET_9TILES	EQU	00090000h
WNNC_NET_LANTASTIC	EQU	000A0000h
WNNC_NET_AS400	EQU	000B0000h
WNNC_NET_FTP_NFS	EQU	000C0000h
WNNC_NET_PATHWORKS	EQU	000D0000h
WNNC_NET_LIFENET	EQU	000E0000h
WNNC_NET_POWERLAN	EQU	000F0000h
WNNC_NET_BWNFS	EQU	00100000h
WNNC_NET_COGENT	EQU	00110000h
WNNC_NET_FARALLON	EQU	00120000h
WNNC_NET_APPLETALK	EQU	00130000h
WNNC_NET_INTERGRAPH	EQU	00140000h
WNNC_NET_SYMFONET	EQU	00150000h
WNNC_NET_CLEARCASE	EQU	00160000h
WNNC_NET_FRONTIER	EQU	00170000h
WNNC_NET_BMC	EQU	00180000h
WNNC_NET_DCE	EQU	00190000h
WNNC_NET_AVID	EQU	001A0000h
WNNC_NET_DOCUSPACE	EQU	001B0000h
WNNC_NET_MANGOSOFT	EQU	001C0000h
WNNC_NET_SERNET	EQU	001D0000h
WNNC_NET_RIVERFRONT1	EQU	001E0000h
WNNC_NET_RIVERFRONT2	EQU	001F0000h
WNNC_NET_DECORB	EQU	00200000h
WNNC_NET_PROTSTOR	EQU	00210000h
WNNC_NET_FJ_REDIR	EQU	00220000h
WNNC_NET_DISTINCT	EQU	00230000h
WNNC_NET_TWINS	EQU	00240000h
WNNC_NET_RDR2SAMPLE	EQU	00250000h
WNNC_NET_CSC	EQU	00260000h
WNNC_NET_3IN1	EQU	00270000h
WNNC_NET_EXTENDNET	EQU	00290000h
WNNC_NET_STAC	EQU	002A0000h
WNNC_NET_FOXBAT	EQU	002B0000h
WNNC_NET_YAHOO	EQU	002C0000h
WNNC_NET_EXIFS	EQU	002D0000h
WNNC_NET_DAV	EQU	002E0000h
WNNC_NET_KNOWARE	EQU	002F0000h
WNNC_NET_OBJECT_DIRE	EQU	00300000h
WNNC_NET_MASFAX	EQU	00310000h
WNNC_NET_HOB_NFS	EQU	00320000h
WNNC_NET_SHIVA	EQU	00330000h
WNNC_NET_IBMAL	EQU	00340000h
WNNC_NET_LOCK	EQU	00350000h
WNNC_NET_TERMSRV	EQU	00360000h
WNNC_CRED_MANAGER	EQU	0FFFF0000h
RESOURCE_CONNECTED	EQU	00000001h
RESOURCE_GLOBALNET	EQU	00000002h
RESOURCE_REMEMBERED	EQU	00000003h
if (WINVER ge 0400h)
RESOURCE_RECENT	EQU	00000004h
RESOURCE_CONTEXT	EQU	00000005h
endif 
RESOURCETYPE_ANY	EQU	00000000h
RESOURCETYPE_DISK	EQU	00000001h
RESOURCETYPE_PRINT	EQU	00000002h
if (WINVER ge 0400h)
RESOURCETYPE_RESERVED	EQU	00000008h
endif 
RESOURCETYPE_UNKNOWN	EQU	0FFFFFFFFh
RESOURCEUSAGE_CONNECTABLE	EQU	00000001h
RESOURCEUSAGE_CONTAINER	EQU	00000002h
if (WINVER ge 0400h)
RESOURCEUSAGE_NOLOCALDEVICE	EQU	00000004h
RESOURCEUSAGE_SIBLING	EQU	00000008h
RESOURCEUSAGE_ATTACHED	EQU	00000010h
RESOURCEUSAGE_ALL	EQU	( RESOURCEUSAGE_CONNECTABLE  or  RESOURCEUSAGE_CONTAINER  or  RESOURCEUSAGE_ATTACHED )
endif 
RESOURCEUSAGE_RESERVED	EQU	80000000h
RESOURCEDISPLAYTYPE_GENERIC	EQU	00000000h
RESOURCEDISPLAYTYPE_DOMAIN	EQU	00000001h
RESOURCEDISPLAYTYPE_SERVER	EQU	00000002h
RESOURCEDISPLAYTYPE_SHARE	EQU	00000003h
RESOURCEDISPLAYTYPE_FILE	EQU	00000004h
RESOURCEDISPLAYTYPE_GROUP	EQU	00000005h
if (WINVER ge 0400h)
RESOURCEDISPLAYTYPE_NETWORK	EQU	00000006h
RESOURCEDISPLAYTYPE_ROOT	EQU	00000007h
RESOURCEDISPLAYTYPE_SHAREADMIN	EQU	00000008h
RESOURCEDISPLAYTYPE_DIRECTORY	EQU	00000009h
endif 
RESOURCEDISPLAYTYPE_TREE	EQU	0000000Ah
if (WINVER ge 0400h)
RESOURCEDISPLAYTYPE_NDSCONTAINER	EQU	0000000Bh
endif 
NETRESOURCEA	struct 
dwScope	DWORD	?
dwType	DWORD	?
dwDisplayType	DWORD	?
dwUsage	DWORD	?
lpLocalName	LPSTR	?
lpRemoteName	LPSTR	?
lpComment	LPSTR	?
lpProvider	LPSTR	?
NETRESOURCEA	ends

LPNETRESOURCEA typedef ptr NETRESOURCEA

NETRESOURCEW	struct 
dwScope	DWORD	?
dwType	DWORD	?
dwDisplayType	DWORD	?
dwUsage	DWORD	?
lpLocalName	LPWSTR	?
lpRemoteName	LPWSTR	?
lpComment	LPWSTR	?
lpProvider	LPWSTR	?
NETRESOURCEW	ends

LPNETRESOURCEW typedef ptr NETRESOURCEW

ifdef UNICODE
NETRESOURCE typedef NETRESOURCEW
LPNETRESOURCE typedef LPNETRESOURCEW
else 
NETRESOURCE typedef NETRESOURCEA
LPNETRESOURCE typedef LPNETRESOURCEA
endif 
NETPROPERTY_PERSISTENT	EQU	1
CONNECT_UPDATE_PROFILE	EQU	00000001h
CONNECT_UPDATE_RECENT	EQU	00000002h
CONNECT_TEMPORARY	EQU	00000004h
CONNECT_INTERACTIVE	EQU	00000008h
CONNECT_PROMPT	EQU	00000010h
CONNECT_NEED_DRIVE	EQU	00000020h
if (WINVER ge 0400h)
CONNECT_REFCOUNT	EQU	00000040h
CONNECT_REDIRECT	EQU	00000080h
CONNECT_LOCALDRIVE	EQU	00000100h
CONNECT_CURRENT_MEDIA	EQU	00000200h
CONNECT_DEFERRED	EQU	00000400h
CONNECT_RESERVED	EQU	0FF000000h
endif 
if (WINVER ge 0500h)
CONNECT_COMMANDLINE	EQU	00000800h
CONNECT_CMD_SAVECRED	EQU	00001000h
endif 
@DefProto DECLSPEC_IMPORT, WNetAddConnectionA , stdcall, ,< :LPSTR, :LPSTR, :LPSTR>,12
@DefProto DECLSPEC_IMPORT, WNetAddConnectionW , stdcall, ,< :LPWSTR, :LPWSTR, :LPWSTR>,12
ifdef UNICODE
WNetAddConnection	EQU	<WNetAddConnectionW>
else 
WNetAddConnection	EQU	<WNetAddConnectionA>
endif 
@DefProto DECLSPEC_IMPORT, WNetAddConnection2A , stdcall, ,< :LPNETRESOURCEA, :LPSTR, :LPSTR, :DWORD>,16
@DefProto DECLSPEC_IMPORT, WNetAddConnection2W , stdcall, ,< :LPNETRESOURCEW, :LPWSTR, :LPWSTR, :DWORD>,16
ifdef UNICODE
WNetAddConnection2	EQU	<WNetAddConnection2W>
else 
WNetAddConnection2	EQU	<WNetAddConnection2A>
endif 
@DefProto DECLSPEC_IMPORT, WNetAddConnection3A , stdcall, ,< :HWND, :LPNETRESOURCEA, :LPSTR, :LPSTR, :DWORD>,20
@DefProto DECLSPEC_IMPORT, WNetAddConnection3W , stdcall, ,< :HWND, :LPNETRESOURCEW, :LPWSTR, :LPWSTR, :DWORD>,20
ifdef UNICODE
WNetAddConnection3	EQU	<WNetAddConnection3W>
else 
WNetAddConnection3	EQU	<WNetAddConnection3A>
endif 
@DefProto DECLSPEC_IMPORT, WNetCancelConnectionA , stdcall, ,< :LPSTR, :BOOL>,8
@DefProto DECLSPEC_IMPORT, WNetCancelConnectionW , stdcall, ,< :LPWSTR, :BOOL>,8
ifdef UNICODE
WNetCancelConnection	EQU	<WNetCancelConnectionW>
else 
WNetCancelConnection	EQU	<WNetCancelConnectionA>
endif 
@DefProto DECLSPEC_IMPORT, WNetCancelConnection2A , stdcall, ,< :LPSTR, :DWORD, :BOOL>,12
@DefProto DECLSPEC_IMPORT, WNetCancelConnection2W , stdcall, ,< :LPWSTR, :DWORD, :BOOL>,12
ifdef UNICODE
WNetCancelConnection2	EQU	<WNetCancelConnection2W>
else 
WNetCancelConnection2	EQU	<WNetCancelConnection2A>
endif 
@DefProto DECLSPEC_IMPORT, WNetGetConnectionA , stdcall, ,< :LPSTR, :LPSTR, :LPDWORD>,12
@DefProto DECLSPEC_IMPORT, WNetGetConnectionW , stdcall, ,< :LPWSTR, :LPWSTR, :LPDWORD>,12
ifdef UNICODE
WNetGetConnection	EQU	<WNetGetConnectionW>
else 
WNetGetConnection	EQU	<WNetGetConnectionA>
endif 
if (WINVER ge 0400h)
@DefProto DECLSPEC_IMPORT, WNetUseConnectionA , stdcall, ,< :HWND, :LPNETRESOURCEA, :LPSTR, :LPSTR, :DWORD, :LPSTR, :LPDWORD, :LPDWORD>,32
@DefProto DECLSPEC_IMPORT, WNetUseConnectionW , stdcall, ,< :HWND, :LPNETRESOURCEW, :LPWSTR, :LPWSTR, :DWORD, :LPWSTR, :LPDWORD, :LPDWORD>,32
ifdef UNICODE
WNetUseConnection	EQU	<WNetUseConnectionW>
else 
WNetUseConnection	EQU	<WNetUseConnectionA>
endif 
endif 
@DefProto DECLSPEC_IMPORT, WNetConnectionDialog , stdcall, ,< :HWND, :DWORD>,8
@DefProto DECLSPEC_IMPORT, WNetDisconnectDialog , stdcall, ,< :HWND, :DWORD>,8
if (WINVER ge 0400h)
CONNECTDLGSTRUCTA	struct 
cbStructure	DWORD	?
hwndOwner	HWND	?
lpConnRes	LPNETRESOURCEA	?
dwFlags	DWORD	?
dwDevNum	DWORD	?
CONNECTDLGSTRUCTA	ends

LPCONNECTDLGSTRUCTA typedef ptr CONNECTDLGSTRUCTA

CONNECTDLGSTRUCTW	struct 
cbStructure	DWORD	?
hwndOwner	HWND	?
lpConnRes	LPNETRESOURCEW	?
dwFlags	DWORD	?
dwDevNum	DWORD	?
CONNECTDLGSTRUCTW	ends

LPCONNECTDLGSTRUCTW typedef ptr CONNECTDLGSTRUCTW

ifdef UNICODE
CONNECTDLGSTRUCT typedef CONNECTDLGSTRUCTW
LPCONNECTDLGSTRUCT typedef LPCONNECTDLGSTRUCTW
else 
CONNECTDLGSTRUCT typedef CONNECTDLGSTRUCTA
LPCONNECTDLGSTRUCT typedef LPCONNECTDLGSTRUCTA
endif 
CONNDLG_RO_PATH	EQU	00000001h
CONNDLG_CONN_POINT	EQU	00000002h
CONNDLG_USE_MRU	EQU	00000004h
CONNDLG_HIDE_BOX	EQU	00000008h
CONNDLG_PERSIST	EQU	00000010h
CONNDLG_NOT_PERSIST	EQU	00000020h
@DefProto DECLSPEC_IMPORT, WNetConnectionDialog1A , stdcall, ,< :LPCONNECTDLGSTRUCTA>,4
@DefProto DECLSPEC_IMPORT, WNetConnectionDialog1W , stdcall, ,< :LPCONNECTDLGSTRUCTW>,4
ifdef UNICODE
WNetConnectionDialog1	EQU	<WNetConnectionDialog1W>
else 
WNetConnectionDialog1	EQU	<WNetConnectionDialog1A>
endif 
DISCDLGSTRUCTA	struct 
cbStructure	DWORD	?
hwndOwner	HWND	?
lpLocalName	LPSTR	?
lpRemoteName	LPSTR	?
dwFlags	DWORD	?
DISCDLGSTRUCTA	ends

LPDISCDLGSTRUCTA typedef ptr DISCDLGSTRUCTA

DISCDLGSTRUCTW	struct 
cbStructure	DWORD	?
hwndOwner	HWND	?
lpLocalName	LPWSTR	?
lpRemoteName	LPWSTR	?
dwFlags	DWORD	?
DISCDLGSTRUCTW	ends

LPDISCDLGSTRUCTW typedef ptr DISCDLGSTRUCTW

ifdef UNICODE
DISCDLGSTRUCT typedef DISCDLGSTRUCTW
LPDISCDLGSTRUCT typedef LPDISCDLGSTRUCTW
else 
DISCDLGSTRUCT typedef DISCDLGSTRUCTA
LPDISCDLGSTRUCT typedef LPDISCDLGSTRUCTA
endif 
DISC_UPDATE_PROFILE	EQU	00000001h
DISC_NO_FORCE	EQU	00000040h
@DefProto DECLSPEC_IMPORT, WNetDisconnectDialog1A , stdcall, ,< :LPDISCDLGSTRUCTA>,4
@DefProto DECLSPEC_IMPORT, WNetDisconnectDialog1W , stdcall, ,< :LPDISCDLGSTRUCTW>,4
ifdef UNICODE
WNetDisconnectDialog1	EQU	<WNetDisconnectDialog1W>
else 
WNetDisconnectDialog1	EQU	<WNetDisconnectDialog1A>
endif 
endif 
@DefProto DECLSPEC_IMPORT, WNetOpenEnumA , stdcall, ,< :DWORD, :DWORD, :DWORD, :LPNETRESOURCEA, :LPHANDLE>,20
@DefProto DECLSPEC_IMPORT, WNetOpenEnumW , stdcall, ,< :DWORD, :DWORD, :DWORD, :LPNETRESOURCEW, :LPHANDLE>,20
ifdef UNICODE
WNetOpenEnum	EQU	<WNetOpenEnumW>
else 
WNetOpenEnum	EQU	<WNetOpenEnumA>
endif 
@DefProto DECLSPEC_IMPORT, WNetEnumResourceA , stdcall, ,< :HANDLE, :LPDWORD, :LPVOID, :LPDWORD>,16
@DefProto DECLSPEC_IMPORT, WNetEnumResourceW , stdcall, ,< :HANDLE, :LPDWORD, :LPVOID, :LPDWORD>,16
ifdef UNICODE
WNetEnumResource	EQU	<WNetEnumResourceW>
else 
WNetEnumResource	EQU	<WNetEnumResourceA>
endif 
@DefProto DECLSPEC_IMPORT, WNetCloseEnum , stdcall, ,< :HANDLE>,4
if (WINVER ge 0400h)
@DefProto DECLSPEC_IMPORT, WNetGetResourceParentA , stdcall, ,< :LPNETRESOURCEA, :LPVOID, :LPDWORD>,12
@DefProto DECLSPEC_IMPORT, WNetGetResourceParentW , stdcall, ,< :LPNETRESOURCEW, :LPVOID, :LPDWORD>,12
ifdef UNICODE
WNetGetResourceParent	EQU	<WNetGetResourceParentW>
else 
WNetGetResourceParent	EQU	<WNetGetResourceParentA>
endif 
@DefProto DECLSPEC_IMPORT, WNetGetResourceInformationA , stdcall, ,< :LPNETRESOURCEA, :LPVOID, :LPDWORD, :ptr LPSTR>,16
@DefProto DECLSPEC_IMPORT, WNetGetResourceInformationW , stdcall, ,< :LPNETRESOURCEW, :LPVOID, :LPDWORD, :ptr LPWSTR>,16
ifdef UNICODE
WNetGetResourceInformation	EQU	<WNetGetResourceInformationW>
else 
WNetGetResourceInformation	EQU	<WNetGetResourceInformationA>
endif 
endif 
UNIVERSAL_NAME_INFO_LEVEL	EQU	00000001h
REMOTE_NAME_INFO_LEVEL	EQU	00000002h
UNIVERSAL_NAME_INFOA	struct 
lpUniversalName	LPSTR	?
UNIVERSAL_NAME_INFOA	ends

LPUNIVERSAL_NAME_INFOA typedef ptr UNIVERSAL_NAME_INFOA

UNIVERSAL_NAME_INFOW	struct 
lpUniversalName	LPWSTR	?
UNIVERSAL_NAME_INFOW	ends

LPUNIVERSAL_NAME_INFOW typedef ptr UNIVERSAL_NAME_INFOW

ifdef UNICODE
UNIVERSAL_NAME_INFO typedef UNIVERSAL_NAME_INFOW
LPUNIVERSAL_NAME_INFO typedef LPUNIVERSAL_NAME_INFOW
else 
UNIVERSAL_NAME_INFO typedef UNIVERSAL_NAME_INFOA
LPUNIVERSAL_NAME_INFO typedef LPUNIVERSAL_NAME_INFOA
endif 
REMOTE_NAME_INFOA	struct 
lpUniversalName	LPSTR	?
lpConnectionName	LPSTR	?
lpRemainingPath	LPSTR	?
REMOTE_NAME_INFOA	ends

LPREMOTE_NAME_INFOA typedef ptr REMOTE_NAME_INFOA

REMOTE_NAME_INFOW	struct 
lpUniversalName	LPWSTR	?
lpConnectionName	LPWSTR	?
lpRemainingPath	LPWSTR	?
REMOTE_NAME_INFOW	ends

LPREMOTE_NAME_INFOW typedef ptr REMOTE_NAME_INFOW

ifdef UNICODE
REMOTE_NAME_INFO typedef REMOTE_NAME_INFOW
LPREMOTE_NAME_INFO typedef LPREMOTE_NAME_INFOW
else 
REMOTE_NAME_INFO typedef REMOTE_NAME_INFOA
LPREMOTE_NAME_INFO typedef LPREMOTE_NAME_INFOA
endif 
@DefProto DECLSPEC_IMPORT, WNetGetUniversalNameA , stdcall, ,< :LPSTR, :DWORD, :LPVOID, :LPDWORD>,16
@DefProto DECLSPEC_IMPORT, WNetGetUniversalNameW , stdcall, ,< :LPWSTR, :DWORD, :LPVOID, :LPDWORD>,16
ifdef UNICODE
WNetGetUniversalName	EQU	<WNetGetUniversalNameW>
else 
WNetGetUniversalName	EQU	<WNetGetUniversalNameA>
endif 
@DefProto DECLSPEC_IMPORT, WNetGetUserA , stdcall, ,< :LPSTR, :LPSTR, :LPDWORD>,12
@DefProto DECLSPEC_IMPORT, WNetGetUserW , stdcall, ,< :LPWSTR, :LPWSTR, :LPDWORD>,12
ifdef UNICODE
WNetGetUser	EQU	<WNetGetUserW>
else 
WNetGetUser	EQU	<WNetGetUserA>
endif 
if (WINVER ge 0400h)
WNFMT_MULTILINE	EQU	01h
WNFMT_ABBREVIATED	EQU	02h
WNFMT_INENUM	EQU	10h
WNFMT_CONNECTION	EQU	20h
endif 
if (WINVER ge 0400h)
@DefProto DECLSPEC_IMPORT, WNetGetProviderNameA , stdcall, ,< :DWORD, :LPSTR, :LPDWORD>,12
@DefProto DECLSPEC_IMPORT, WNetGetProviderNameW , stdcall, ,< :DWORD, :LPWSTR, :LPDWORD>,12
ifdef UNICODE
WNetGetProviderName	EQU	<WNetGetProviderNameW>
else 
WNetGetProviderName	EQU	<WNetGetProviderNameA>
endif 
NETINFOSTRUCT	struct 
cbStructure	DWORD	?
dwProviderVersion	DWORD	?
dwStatus	DWORD	?
dwCharacteristics	DWORD	?
dwHandle	ULONG_PTR	?
wNetType	WORD	?
dwPrinters	DWORD	?
dwDrives	DWORD	?
NETINFOSTRUCT	ends

LPNETINFOSTRUCT typedef ptr NETINFOSTRUCT

NETINFO_DLL16	EQU	00000001h
NETINFO_DISKRED	EQU	00000004h
NETINFO_PRINTERRED	EQU	00000008h
@DefProto DECLSPEC_IMPORT, WNetGetNetworkInformationA , stdcall, ,< :LPSTR, :LPNETINFOSTRUCT>,8
@DefProto DECLSPEC_IMPORT, WNetGetNetworkInformationW , stdcall, ,< :LPWSTR, :LPNETINFOSTRUCT>,8
ifdef UNICODE
WNetGetNetworkInformation	EQU	<WNetGetNetworkInformationW>
else 
WNetGetNetworkInformation	EQU	<WNetGetNetworkInformationA>
endif 
proto_PFNGETPROFILEPATHA typedef proto WINSTDCALLCONV :LPSTR,:LPSTR,:DWORD
PFNGETPROFILEPATHA typedef ptr proto_PFNGETPROFILEPATHA
proto_PFNGETPROFILEPATHW typedef proto WINSTDCALLCONV :LPWSTR,:LPWSTR,:DWORD
PFNGETPROFILEPATHW typedef ptr proto_PFNGETPROFILEPATHW
ifdef UNICODE
PFNGETPROFILEPATH	EQU	<PFNGETPROFILEPATHW>
else 
PFNGETPROFILEPATH	EQU	<PFNGETPROFILEPATHA>
endif 
proto_PFNRECONCILEPROFILEA typedef proto WINSTDCALLCONV :LPSTR,:LPSTR,:DWORD
PFNRECONCILEPROFILEA typedef ptr proto_PFNRECONCILEPROFILEA
proto_PFNRECONCILEPROFILEW typedef proto WINSTDCALLCONV :LPWSTR,:LPWSTR,:DWORD
PFNRECONCILEPROFILEW typedef ptr proto_PFNRECONCILEPROFILEW
ifdef UNICODE
PFNRECONCILEPROFILE	EQU	<PFNRECONCILEPROFILEW>
else 
PFNRECONCILEPROFILE	EQU	<PFNRECONCILEPROFILEA>
endif 
RP_LOGON	EQU	01h
RP_INIFILE	EQU	02h
proto_PFNPROCESSPOLICIESA typedef proto WINSTDCALLCONV :HWND,:LPSTR,:LPSTR,:LPSTR,:DWORD
PFNPROCESSPOLICIESA typedef ptr proto_PFNPROCESSPOLICIESA
proto_PFNPROCESSPOLICIESW typedef proto WINSTDCALLCONV :HWND,:LPWSTR,:LPWSTR,:LPWSTR,:DWORD
PFNPROCESSPOLICIESW typedef ptr proto_PFNPROCESSPOLICIESW
ifdef UNICODE
PFNPROCESSPOLICIES	EQU	<PFNPROCESSPOLICIESW>
else 
PFNPROCESSPOLICIES	EQU	<PFNPROCESSPOLICIESA>
endif 
PP_DISPLAYERRORS	EQU	01h
endif 
@DefProto DECLSPEC_IMPORT, WNetGetLastErrorA , stdcall, ,< :LPDWORD, :LPSTR, :DWORD, :LPSTR, :DWORD>,20
@DefProto DECLSPEC_IMPORT, WNetGetLastErrorW , stdcall, ,< :LPDWORD, :LPWSTR, :DWORD, :LPWSTR, :DWORD>,20
ifdef UNICODE
WNetGetLastError	EQU	<WNetGetLastErrorW>
else 
WNetGetLastError	EQU	<WNetGetLastErrorA>
endif 
WN_SUCCESS	EQU	<NO_ERROR>
WN_NO_ERROR	EQU	<NO_ERROR>
WN_NOT_SUPPORTED	EQU	<ERROR_NOT_SUPPORTED>
WN_CANCEL	EQU	<ERROR_CANCELLED>
WN_RETRY	EQU	<ERROR_RETRY>
WN_NET_ERROR	EQU	<ERROR_UNEXP_NET_ERR>
WN_MORE_DATA	EQU	<ERROR_MORE_DATA>
WN_BAD_POINTER	EQU	<ERROR_INVALID_ADDRESS>
WN_BAD_VALUE	EQU	<ERROR_INVALID_PARAMETER>
WN_BAD_USER	EQU	<ERROR_BAD_USERNAME>
WN_BAD_PASSWORD	EQU	<ERROR_INVALID_PASSWORD>
WN_ACCESS_DENIED	EQU	<ERROR_ACCESS_DENIED>
WN_FUNCTION_BUSY	EQU	<ERROR_BUSY>
WN_WINDOWS_ERROR	EQU	<ERROR_UNEXP_NET_ERR>
WN_OUT_OF_MEMORY	EQU	<ERROR_NOT_ENOUGH_MEMORY>
WN_NO_NETWORK	EQU	<ERROR_NO_NETWORK>
WN_EXTENDED_ERROR	EQU	<ERROR_EXTENDED_ERROR>
WN_BAD_LEVEL	EQU	<ERROR_INVALID_LEVEL>
WN_BAD_HANDLE	EQU	<ERROR_INVALID_HANDLE>
if (WINVER ge 0400h)
WN_NOT_INITIALIZING	EQU	<ERROR_ALREADY_INITIALIZED>
WN_NO_MORE_DEVICES	EQU	<ERROR_NO_MORE_DEVICES>
endif 
WN_NOT_CONNECTED	EQU	<ERROR_NOT_CONNECTED>
WN_OPEN_FILES	EQU	<ERROR_OPEN_FILES>
WN_DEVICE_IN_USE	EQU	<ERROR_DEVICE_IN_USE>
WN_BAD_NETNAME	EQU	<ERROR_BAD_NET_NAME>
WN_BAD_LOCALNAME	EQU	<ERROR_BAD_DEVICE>
WN_ALREADY_CONNECTED	EQU	<ERROR_ALREADY_ASSIGNED>
WN_DEVICE_ERROR	EQU	<ERROR_GEN_FAILURE>
WN_CONNECTION_CLOSED	EQU	<ERROR_CONNECTION_UNAVAIL>
WN_NO_NET_OR_BAD_PATH	EQU	<ERROR_NO_NET_OR_BAD_PATH>
WN_BAD_PROVIDER	EQU	<ERROR_BAD_PROVIDER>
WN_CANNOT_OPEN_PROFILE	EQU	<ERROR_CANNOT_OPEN_PROFILE>
WN_BAD_PROFILE	EQU	<ERROR_BAD_PROFILE>
WN_BAD_DEV_TYPE	EQU	<ERROR_BAD_DEV_TYPE>
WN_DEVICE_ALREADY_REMEMBERED	EQU	<ERROR_DEVICE_ALREADY_REMEMBERED>
WN_CONNECTED_OTHER_PASSWORD	EQU	<ERROR_CONNECTED_OTHER_PASSWORD>
if (WINVER ge 0501h)
WN_CONNECTED_OTHER_PASSWORD_DEFAULT	EQU	<ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT>
endif 
WN_NO_MORE_ENTRIES	EQU	<ERROR_NO_MORE_ITEMS>
WN_NOT_CONTAINER	EQU	<ERROR_NOT_CONTAINER>
if (WINVER ge 0400h)
WN_NOT_AUTHENTICATED	EQU	<ERROR_NOT_AUTHENTICATED>
WN_NOT_LOGGED_ON	EQU	<ERROR_NOT_LOGGED_ON>
WN_NOT_VALIDATED	EQU	<ERROR_NO_LOGON_SERVERS>
endif 
if (WINVER ge 0400h)
NETCONNECTINFOSTRUCT	struct 
cbStructure	DWORD	?
dwFlags	DWORD	?
dwSpeed	DWORD	?
dwDelay	DWORD	?
dwOptDataSize	DWORD	?
NETCONNECTINFOSTRUCT	ends

LPNETCONNECTINFOSTRUCT typedef ptr NETCONNECTINFOSTRUCT

WNCON_FORNETCARD	EQU	00000001h
WNCON_NOTROUTED	EQU	00000002h
WNCON_SLOWLINK	EQU	00000004h
WNCON_DYNAMIC	EQU	00000008h
@DefProto DECLSPEC_IMPORT, MultinetGetConnectionPerformanceA , stdcall, ,< :LPNETRESOURCEA, :LPNETCONNECTINFOSTRUCT>,8
@DefProto DECLSPEC_IMPORT, MultinetGetConnectionPerformanceW , stdcall, ,< :LPNETRESOURCEW, :LPNETCONNECTINFOSTRUCT>,8
ifdef UNICODE
MultinetGetConnectionPerformance	EQU	<MultinetGetConnectionPerformanceW>
else 
MultinetGetConnectionPerformance	EQU	<MultinetGetConnectionPerformanceA>
endif 
endif 
ifdef __cplusplus
;}
endif 
endif 

;--- errors: 0
;--- end of file ---
