;--- include file created by h2incx v0.99.16, copyright 2005 japheth
;--- source file: D:\Microsoft SDK\Include\MSAcm.h, last modified: 4/11/2001 14:40

ifndef _INC_ACM
_INC_ACM	EQU	<>
if _MSC_VER gt 1000
;#pragma once 
endif 
if  0 eq defined(_INC_MMREG) OR (_INC_MMREG lt 142)
ifndef RC_INVOKED
.err <MMREG.H version 142 or greater to be included first >
endif 
endif 
ifndef defined
defined macro x
ifdef x
  exitm <-1>
else
  exitm <0>
endif
endm
endif
if defined(WIN32) AND  0 eq defined(_WIN32)
ifndef RC_INVOKED
%echo  MSACM.H: defining _WIN32 because application defined WIN32
endif 
_WIN32	EQU	<>
endif 
if defined(UNICODE) AND  0 eq defined(_UNICODE)
ifndef RC_INVOKED
%echo  MSACM.H: defining _UNICODE because application defined UNICODE
endif 
_UNICODE	EQU	<>
endif 
	include pshpack1.inc
ifdef __cplusplus
;extern "C"
;{
endif 
ifndef DRV_MAPPER_PREFERRED_INPUT_GET
DRV_MAPPER_PREFERRED_INPUT_GET	EQU	( DRV_USER + 0 )
endif 
ifndef DRV_MAPPER_PREFERRED_OUTPUT_GET
DRV_MAPPER_PREFERRED_OUTPUT_GET	EQU	( DRV_USER + 2 )
endif 
ifndef DRVM_MAPPER_STATUS
DRVM_MAPPER	EQU	2000h
DRVM_MAPPER_STATUS	EQU	( DRVM_MAPPER + 0 )
endif 
ifndef WIDM_MAPPER_STATUS
WIDM_MAPPER_STATUS	EQU	( DRVM_MAPPER_STATUS + 0 )
WAVEIN_MAPPER_STATUS_DEVICE	EQU	0
WAVEIN_MAPPER_STATUS_MAPPED	EQU	1
WAVEIN_MAPPER_STATUS_FORMAT	EQU	2
endif 
ifndef WODM_MAPPER_STATUS
WODM_MAPPER_STATUS	EQU	( DRVM_MAPPER_STATUS + 0 )
WAVEOUT_MAPPER_STATUS_DEVICE	EQU	0
WAVEOUT_MAPPER_STATUS_MAPPED	EQU	1
WAVEOUT_MAPPER_STATUS_FORMAT	EQU	2
endif 
ifdef _WIN32
ACMAPI	EQU	<WINAPI>
else 
ifdef _WINDLL
ACMAPI	EQU	<_far _pascal _loadds>
else 
ACMAPI	EQU	<_far _pascal>
endif 
endif 
DECLARE_HANDLE( HACMDRIVERID)
PHACMDRIVERID typedef ptr HACMDRIVERID
LPHACMDRIVERID typedef ptr HACMDRIVERID
DECLARE_HANDLE( HACMDRIVER)
PHACMDRIVER typedef ptr HACMDRIVER
LPHACMDRIVER typedef ptr HACMDRIVER
DECLARE_HANDLE( HACMSTREAM)
PHACMSTREAM typedef ptr HACMSTREAM
LPHACMSTREAM typedef ptr HACMSTREAM
DECLARE_HANDLE( HACMOBJ)
PHACMOBJ typedef ptr HACMOBJ
LPHACMOBJ typedef ptr HACMOBJ
ifndef _MMRESULT_
_MMRESULT_	EQU	<>
MMRESULT typedef DWORD
endif 
ACMERR_BASE	EQU	512
ACMERR_NOTPOSSIBLE	EQU	( ACMERR_BASE + 0 )
ACMERR_BUSY	EQU	( ACMERR_BASE + 1 )
ACMERR_UNPREPARED	EQU	( ACMERR_BASE + 2 )
ACMERR_CANCELED	EQU	( ACMERR_BASE + 3 )
MM_ACM_OPEN	EQU	<( MM_STREAM_OPEN )>
MM_ACM_CLOSE	EQU	<( MM_STREAM_CLOSE )>
MM_ACM_DONE	EQU	<( MM_STREAM_DONE )>
acmGetVersion proto stdcall 
acmMetrics proto stdcall :HACMOBJ, :DWORD, :LPVOID
ACM_METRIC_COUNT_DRIVERS	EQU	1
ACM_METRIC_COUNT_CODECS	EQU	2
ACM_METRIC_COUNT_CONVERTERS	EQU	3
ACM_METRIC_COUNT_FILTERS	EQU	4
ACM_METRIC_COUNT_DISABLED	EQU	5
ACM_METRIC_COUNT_HARDWARE	EQU	6
ACM_METRIC_COUNT_LOCAL_DRIVERS	EQU	20
ACM_METRIC_COUNT_LOCAL_CODECS	EQU	21
ACM_METRIC_COUNT_LOCAL_CONVERTERS	EQU	22
ACM_METRIC_COUNT_LOCAL_FILTERS	EQU	23
ACM_METRIC_COUNT_LOCAL_DISABLED	EQU	24
ACM_METRIC_HARDWARE_WAVE_INPUT	EQU	30
ACM_METRIC_HARDWARE_WAVE_OUTPUT	EQU	31
ACM_METRIC_MAX_SIZE_FORMAT	EQU	50
ACM_METRIC_MAX_SIZE_FILTER	EQU	51
ACM_METRIC_DRIVER_SUPPORT	EQU	100
ACM_METRIC_DRIVER_PRIORITY	EQU	101
proto_ACMDRIVERENUMCB typedef proto stdcall :HACMDRIVERID,:DWORD_PTR,:DWORD
ACMDRIVERENUMCB typedef ptr proto_ACMDRIVERENUMCB
acmDriverEnum proto stdcall :ACMDRIVERENUMCB, :DWORD_PTR, :DWORD
ACM_DRIVERENUMF_NOLOCAL	EQU	40000000h
ACM_DRIVERENUMF_DISABLED	EQU	80000000h
acmDriverID proto stdcall :HACMOBJ, :LPHACMDRIVERID, :DWORD
ifdef _WIN32
acmDriverAddA proto stdcall :LPHACMDRIVERID, :HINSTANCE, :LPARAM, :DWORD, :DWORD
acmDriverAddW proto stdcall :LPHACMDRIVERID, :HINSTANCE, :LPARAM, :DWORD, :DWORD
ifdef _UNICODE
acmDriverAdd	EQU	<acmDriverAddW>
else 
acmDriverAdd	EQU	<acmDriverAddA>
endif 
else 
acmDriverAdd proto stdcall :LPHACMDRIVERID, :HINSTANCE, :LPARAM, :DWORD, :DWORD
endif 
ACM_DRIVERADDF_FUNCTION	EQU	00000003h
ACM_DRIVERADDF_NOTIFYHWND	EQU	00000004h
ACM_DRIVERADDF_TYPEMASK	EQU	00000007h
ACM_DRIVERADDF_LOCAL	EQU	00000000h
ACM_DRIVERADDF_GLOBAL	EQU	00000008h
proto_ACMDRIVERPROC typedef proto stdcall :DWORD_PTR,:HACMDRIVERID,:DWORD,:LPARAM,:LPARAM
ACMDRIVERPROC typedef ptr proto_ACMDRIVERPROC
LPACMDRIVERPROC typedef ptr ACMDRIVERPROC
acmDriverRemove proto stdcall :HACMDRIVERID, :DWORD
acmDriverOpen proto stdcall :LPHACMDRIVER, :HACMDRIVERID, :DWORD
acmDriverClose proto stdcall :HACMDRIVER, :DWORD
acmDriverMessage proto stdcall :HACMDRIVER, :DWORD, :LPARAM, :LPARAM
ACMDM_USER	EQU	( DRV_USER + 0000h )
ACMDM_RESERVED_LOW	EQU	( DRV_USER + 2000h )
ACMDM_RESERVED_HIGH	EQU	( DRV_USER + 2FFFh )
ACMDM_BASE	EQU	<ACMDM_RESERVED_LOW>
ACMDM_DRIVER_ABOUT	EQU	( ACMDM_BASE + 11 )
acmDriverPriority proto stdcall :HACMDRIVERID, :DWORD, :DWORD
ACM_DRIVERPRIORITYF_ENABLE	EQU	00000001h
ACM_DRIVERPRIORITYF_DISABLE	EQU	00000002h
ACM_DRIVERPRIORITYF_ABLEMASK	EQU	00000003h
ACM_DRIVERPRIORITYF_BEGIN	EQU	00010000h
ACM_DRIVERPRIORITYF_END	EQU	00020000h
ACM_DRIVERPRIORITYF_DEFERMASK	EQU	00030000h
ACMDRIVERDETAILS_SHORTNAME_CHARS	EQU	32
ACMDRIVERDETAILS_LONGNAME_CHARS	EQU	128
ACMDRIVERDETAILS_COPYRIGHT_CHARS	EQU	80
ACMDRIVERDETAILS_LICENSING_CHARS	EQU	128
ACMDRIVERDETAILS_FEATURES_CHARS	EQU	512
ifdef _WIN32
ACMDRIVERDETAILSA	struct 
cbStruct	DWORD	?
fccType	FOURCC	?
fccComp	FOURCC	?
wMid	WORD	?
wPid	WORD	?
vdwACM	DWORD	?
vdwDriver	DWORD	?
fdwSupport	DWORD	?
cFormatTags	DWORD	?
cFilterTags	DWORD	?
hicon	HICON	?
szShortName	SBYTE ACMDRIVERDETAILS_SHORTNAME_CHARS dup (?)
szLongName	SBYTE ACMDRIVERDETAILS_LONGNAME_CHARS dup (?)
szCopyright	SBYTE ACMDRIVERDETAILS_COPYRIGHT_CHARS dup (?)
szLicensing	SBYTE ACMDRIVERDETAILS_LICENSING_CHARS dup (?)
szFeatures	SBYTE ACMDRIVERDETAILS_FEATURES_CHARS dup (?)
ACMDRIVERDETAILSA	ends

PACMDRIVERDETAILSA typedef ptr ACMDRIVERDETAILSA
LPACMDRIVERDETAILSA typedef ptr ACMDRIVERDETAILSA

ACMDRIVERDETAILSW	struct 
cbStruct	DWORD	?
fccType	FOURCC	?
fccComp	FOURCC	?
wMid	WORD	?
wPid	WORD	?
vdwACM	DWORD	?
vdwDriver	DWORD	?
fdwSupport	DWORD	?
cFormatTags	DWORD	?
cFilterTags	DWORD	?
hicon	HICON	?
szShortName	WCHAR ACMDRIVERDETAILS_SHORTNAME_CHARS dup (?)
szLongName	WCHAR ACMDRIVERDETAILS_LONGNAME_CHARS dup (?)
szCopyright	WCHAR ACMDRIVERDETAILS_COPYRIGHT_CHARS dup (?)
szLicensing	WCHAR ACMDRIVERDETAILS_LICENSING_CHARS dup (?)
szFeatures	WCHAR ACMDRIVERDETAILS_FEATURES_CHARS dup (?)
ACMDRIVERDETAILSW	ends

PACMDRIVERDETAILSW typedef ptr ACMDRIVERDETAILSW
LPACMDRIVERDETAILSW typedef ptr ACMDRIVERDETAILSW

ifdef _UNICODE
ACMDRIVERDETAILS	EQU	<ACMDRIVERDETAILSW>
PACMDRIVERDETAILS	EQU	<PACMDRIVERDETAILSW>
LPACMDRIVERDETAILS	EQU	<LPACMDRIVERDETAILSW>
else 
ACMDRIVERDETAILS	EQU	<ACMDRIVERDETAILSA>
PACMDRIVERDETAILS	EQU	<PACMDRIVERDETAILSA>
LPACMDRIVERDETAILS	EQU	<LPACMDRIVERDETAILSA>
endif 
else 
ACMDRIVERDETAILS	struct 
cbStruct	DWORD	?
fccType	FOURCC	?
fccComp	FOURCC	?
wMid	WORD	?
wPid	WORD	?
vdwACM	DWORD	?
vdwDriver	DWORD	?
fdwSupport	DWORD	?
cFormatTags	DWORD	?
cFilterTags	DWORD	?
hicon	HICON	?
szShortName	SBYTE ACMDRIVERDETAILS_SHORTNAME_CHARS dup (?)
szLongName	SBYTE ACMDRIVERDETAILS_LONGNAME_CHARS dup (?)
szCopyright	SBYTE ACMDRIVERDETAILS_COPYRIGHT_CHARS dup (?)
szLicensing	SBYTE ACMDRIVERDETAILS_LICENSING_CHARS dup (?)
szFeatures	SBYTE ACMDRIVERDETAILS_FEATURES_CHARS dup (?)
ACMDRIVERDETAILS	ends

PACMDRIVERDETAILS typedef ptr ACMDRIVERDETAILS
LPACMDRIVERDETAILS typedef ptr ACMDRIVERDETAILS

endif 
ACMDRIVERDETAILS_FCCTYPE_AUDIOCODEC	EQU	<mmioFOURCC ( 'a' , 'u' , 'd' , 'c' )>
ACMDRIVERDETAILS_FCCCOMP_UNDEFINED	EQU	<mmioFOURCC ( '\0' , '\0' , '\0' , '\0' )>
ACMDRIVERDETAILS_SUPPORTF_CODEC	EQU	00000001h
ACMDRIVERDETAILS_SUPPORTF_CONVERTER	EQU	00000002h
ACMDRIVERDETAILS_SUPPORTF_FILTER	EQU	00000004h
ACMDRIVERDETAILS_SUPPORTF_HARDWARE	EQU	00000008h
ACMDRIVERDETAILS_SUPPORTF_ASYNC	EQU	00000010h
ACMDRIVERDETAILS_SUPPORTF_LOCAL	EQU	40000000h
ACMDRIVERDETAILS_SUPPORTF_DISABLED	EQU	80000000h
ifdef _WIN32
acmDriverDetailsA proto stdcall :HACMDRIVERID, :LPACMDRIVERDETAILSA, :DWORD
acmDriverDetailsW proto stdcall :HACMDRIVERID, :LPACMDRIVERDETAILSW, :DWORD
ifdef _UNICODE
acmDriverDetails	EQU	<acmDriverDetailsW>
else 
acmDriverDetails	EQU	<acmDriverDetailsA>
endif 
else 
acmDriverDetails proto stdcall :HACMDRIVERID, :LPACMDRIVERDETAILS, :DWORD
endif 
ACMFORMATTAGDETAILS_FORMATTAG_CHARS	EQU	48
ifdef _WIN32
ACMFORMATTAGDETAILSA	struct 
cbStruct	DWORD	?
dwFormatTagIndex	DWORD	?
dwFormatTag	DWORD	?
cbFormatSize	DWORD	?
fdwSupport	DWORD	?
cStandardFormats	DWORD	?
szFormatTag	SBYTE ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
ACMFORMATTAGDETAILSA	ends

PACMFORMATTAGDETAILSA typedef ptr ACMFORMATTAGDETAILSA
LPACMFORMATTAGDETAILSA typedef ptr ACMFORMATTAGDETAILSA

ACMFORMATTAGDETAILSW	struct 
cbStruct	DWORD	?
dwFormatTagIndex	DWORD	?
dwFormatTag	DWORD	?
cbFormatSize	DWORD	?
fdwSupport	DWORD	?
cStandardFormats	DWORD	?
szFormatTag	WCHAR ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
ACMFORMATTAGDETAILSW	ends

PACMFORMATTAGDETAILSW typedef ptr ACMFORMATTAGDETAILSW
LPACMFORMATTAGDETAILSW typedef ptr ACMFORMATTAGDETAILSW

ifdef _UNICODE
ACMFORMATTAGDETAILS	EQU	<ACMFORMATTAGDETAILSW>
PACMFORMATTAGDETAILS	EQU	<PACMFORMATTAGDETAILSW>
LPACMFORMATTAGDETAILS	EQU	<LPACMFORMATTAGDETAILSW>
else 
ACMFORMATTAGDETAILS	EQU	<ACMFORMATTAGDETAILSA>
PACMFORMATTAGDETAILS	EQU	<PACMFORMATTAGDETAILSA>
LPACMFORMATTAGDETAILS	EQU	<LPACMFORMATTAGDETAILSA>
endif 
else 
ACMFORMATTAGDETAILS	struct 
cbStruct	DWORD	?
dwFormatTagIndex	DWORD	?
dwFormatTag	DWORD	?
cbFormatSize	DWORD	?
fdwSupport	DWORD	?
cStandardFormats	DWORD	?
szFormatTag	SBYTE ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
ACMFORMATTAGDETAILS	ends

PACMFORMATTAGDETAILS typedef ptr ACMFORMATTAGDETAILS
LPACMFORMATTAGDETAILS typedef ptr ACMFORMATTAGDETAILS

endif 
ifdef _WIN32
acmFormatTagDetailsA proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILSA, :DWORD
acmFormatTagDetailsW proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILSW, :DWORD
ifdef _UNICODE
acmFormatTagDetails	EQU	<acmFormatTagDetailsW>
else 
acmFormatTagDetails	EQU	<acmFormatTagDetailsA>
endif 
else 
acmFormatTagDetails proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILS, :DWORD
endif 
ACM_FORMATTAGDETAILSF_INDEX	EQU	00000000h
ACM_FORMATTAGDETAILSF_FORMATTAG	EQU	00000001h
ACM_FORMATTAGDETAILSF_LARGESTSIZE	EQU	00000002h
ACM_FORMATTAGDETAILSF_QUERYMASK	EQU	0000000Fh
ifdef _WIN32
proto_ACMFORMATTAGENUMCBA typedef proto stdcall :HACMDRIVERID,:LPACMFORMATTAGDETAILSA,:DWORD_PTR,:DWORD
ACMFORMATTAGENUMCBA typedef ptr proto_ACMFORMATTAGENUMCBA
acmFormatTagEnumA proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILSA, :ACMFORMATTAGENUMCBA, :DWORD_PTR, :DWORD
proto_ACMFORMATTAGENUMCBW typedef proto stdcall :HACMDRIVERID,:LPACMFORMATTAGDETAILSW,:DWORD_PTR,:DWORD
ACMFORMATTAGENUMCBW typedef ptr proto_ACMFORMATTAGENUMCBW
acmFormatTagEnumW proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILSW, :ACMFORMATTAGENUMCBW, :DWORD_PTR, :DWORD
ifdef _UNICODE
ACMFORMATTAGENUMCB	EQU	<ACMFORMATTAGENUMCBW>
acmFormatTagEnum	EQU	<acmFormatTagEnumW>
else 
ACMFORMATTAGENUMCB	EQU	<ACMFORMATTAGENUMCBA>
acmFormatTagEnum	EQU	<acmFormatTagEnumA>
endif 
else 
proto_ACMFORMATTAGENUMCB typedef proto stdcall :HACMDRIVERID,:LPACMFORMATTAGDETAILS,:DWORD_PTR,:DWORD
ACMFORMATTAGENUMCB typedef ptr proto_ACMFORMATTAGENUMCB
acmFormatTagEnum proto stdcall :HACMDRIVER, :LPACMFORMATTAGDETAILS, :ACMFORMATTAGENUMCB, :DWORD_PTR, :DWORD
endif 
ACMFORMATDETAILS_FORMAT_CHARS	EQU	128
ifdef _WIN32
ACMFORMATDETAILSA	struct 
cbStruct	DWORD	?
dwFormatIndex	DWORD	?
dwFormatTag	DWORD	?
fdwSupport	DWORD	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
szFormat	SBYTE ACMFORMATDETAILS_FORMAT_CHARS dup (?)
ACMFORMATDETAILSA	ends

PACMFORMATDETAILSA typedef ptr ACMFORMATDETAILSA
LPACMFORMATDETAILSA typedef ptr ACMFORMATDETAILSA

ACMFORMATDETAILSW	struct 
cbStruct	DWORD	?
dwFormatIndex	DWORD	?
dwFormatTag	DWORD	?
fdwSupport	DWORD	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
szFormat	WCHAR ACMFORMATDETAILS_FORMAT_CHARS dup (?)
ACMFORMATDETAILSW	ends

PACMFORMATDETAILSW typedef ptr ACMFORMATDETAILSW
LPACMFORMATDETAILSW typedef ptr ACMFORMATDETAILSW

ifdef _UNICODE
ACMFORMATDETAILS	EQU	<ACMFORMATDETAILSW>
PACMFORMATDETAILS	EQU	<PACMFORMATDETAILSW>
LPACMFORMATDETAILS	EQU	<LPACMFORMATDETAILSW>
else 
ACMFORMATDETAILS	EQU	<ACMFORMATDETAILSA>
PACMFORMATDETAILS	EQU	<PACMFORMATDETAILSA>
LPACMFORMATDETAILS	EQU	<LPACMFORMATDETAILSA>
endif 
else 
ACMFORMATDETAILS	struct 
cbStruct	DWORD	?
dwFormatIndex	DWORD	?
dwFormatTag	DWORD	?
fdwSupport	DWORD	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
szFormat	SBYTE ACMFORMATDETAILS_FORMAT_CHARS dup (?)
ACMFORMATDETAILS	ends

PACMFORMATDETAILS typedef ptr ACMFORMATDETAILS
LPACMFORMATDETAILS typedef ptr ACMFORMATDETAILS

endif 
ifdef _WIN32
acmFormatDetailsA proto stdcall :HACMDRIVER, :LPACMFORMATDETAILSA, :DWORD
acmFormatDetailsW proto stdcall :HACMDRIVER, :LPACMFORMATDETAILSW, :DWORD
ifdef _UNICODE
acmFormatDetails	EQU	<acmFormatDetailsW>
else 
acmFormatDetails	EQU	<acmFormatDetailsA>
endif 
else 
acmFormatDetails proto stdcall :HACMDRIVER, :LPACMFORMATDETAILS, :DWORD
endif 
ACM_FORMATDETAILSF_INDEX	EQU	00000000h
ACM_FORMATDETAILSF_FORMAT	EQU	00000001h
ACM_FORMATDETAILSF_QUERYMASK	EQU	0000000Fh
ifdef _WIN32
proto_ACMFORMATENUMCBA typedef proto stdcall :HACMDRIVERID,:LPACMFORMATDETAILSA,:DWORD_PTR,:DWORD
ACMFORMATENUMCBA typedef ptr proto_ACMFORMATENUMCBA
acmFormatEnumA proto stdcall :HACMDRIVER, :LPACMFORMATDETAILSA, :ACMFORMATENUMCBA, :DWORD_PTR, :DWORD
proto_ACMFORMATENUMCBW typedef proto stdcall :HACMDRIVERID,:LPACMFORMATDETAILSW,:DWORD_PTR,:DWORD
ACMFORMATENUMCBW typedef ptr proto_ACMFORMATENUMCBW
acmFormatEnumW proto stdcall :HACMDRIVER, :LPACMFORMATDETAILSW, :ACMFORMATENUMCBW, :DWORD_PTR, :DWORD
ifdef _UNICODE
ACMFORMATENUMCB	EQU	<ACMFORMATENUMCBW>
acmFormatEnum	EQU	<acmFormatEnumW>
else 
ACMFORMATENUMCB	EQU	<ACMFORMATENUMCBA>
acmFormatEnum	EQU	<acmFormatEnumA>
endif 
else 
proto_ACMFORMATENUMCB typedef proto stdcall :HACMDRIVERID,:LPACMFORMATDETAILS,:DWORD_PTR,:DWORD
ACMFORMATENUMCB typedef ptr proto_ACMFORMATENUMCB
acmFormatEnum proto stdcall :HACMDRIVER, :LPACMFORMATDETAILS, :ACMFORMATENUMCB, :DWORD_PTR, :DWORD
endif 
ACM_FORMATENUMF_WFORMATTAG	EQU	00010000h
ACM_FORMATENUMF_NCHANNELS	EQU	00020000h
ACM_FORMATENUMF_NSAMPLESPERSEC	EQU	00040000h
ACM_FORMATENUMF_WBITSPERSAMPLE	EQU	00080000h
ACM_FORMATENUMF_CONVERT	EQU	00100000h
ACM_FORMATENUMF_SUGGEST	EQU	00200000h
ACM_FORMATENUMF_HARDWARE	EQU	00400000h
ACM_FORMATENUMF_INPUT	EQU	00800000h
ACM_FORMATENUMF_OUTPUT	EQU	01000000h
acmFormatSuggest proto stdcall :HACMDRIVER, :LPWAVEFORMATEX, :LPWAVEFORMATEX, :DWORD, :DWORD
ACM_FORMATSUGGESTF_WFORMATTAG	EQU	00010000h
ACM_FORMATSUGGESTF_NCHANNELS	EQU	00020000h
ACM_FORMATSUGGESTF_NSAMPLESPERSEC	EQU	00040000h
ACM_FORMATSUGGESTF_WBITSPERSAMPLE	EQU	00080000h
ACM_FORMATSUGGESTF_TYPEMASK	EQU	00FF0000h
ifdef _WIN32
ACMHELPMSGSTRINGA	EQU	<"acmchoose_help">
ACMHELPMSGSTRINGW	EQU	<L("acmchoose_help")>
ACMHELPMSGCONTEXTMENUA	EQU	<"acmchoose_contextmenu">
ACMHELPMSGCONTEXTMENUW	EQU	<L("acmchoose_contextmenu")>
ACMHELPMSGCONTEXTHELPA	EQU	<"acmchoose_contexthelp">
ACMHELPMSGCONTEXTHELPW	EQU	<L("acmchoose_contexthelp")>
ifdef _UNICODE
ACMHELPMSGSTRING	EQU	<ACMHELPMSGSTRINGW>
ACMHELPMSGCONTEXTMENU	EQU	<ACMHELPMSGCONTEXTMENUW>
ACMHELPMSGCONTEXTHELP	EQU	<ACMHELPMSGCONTEXTHELPW>
else 
ACMHELPMSGSTRING	EQU	<ACMHELPMSGSTRINGA>
ACMHELPMSGCONTEXTMENU	EQU	<ACMHELPMSGCONTEXTMENUA>
ACMHELPMSGCONTEXTHELP	EQU	<ACMHELPMSGCONTEXTHELPA>
endif 
else 
ACMHELPMSGSTRING	EQU	<"acmchoose_help">
ACMHELPMSGCONTEXTMENU	EQU	<"acmchoose_contextmenu">
ACMHELPMSGCONTEXTHELP	EQU	<"acmchoose_contexthelp">
endif 
MM_ACM_FORMATCHOOSE	EQU	8000h
FORMATCHOOSE_MESSAGE	EQU	0
FORMATCHOOSE_FORMATTAG_VERIFY	EQU	( FORMATCHOOSE_MESSAGE + 0 )
FORMATCHOOSE_FORMAT_VERIFY	EQU	( FORMATCHOOSE_MESSAGE + 1 )
FORMATCHOOSE_CUSTOM_VERIFY	EQU	( FORMATCHOOSE_MESSAGE + 2 )
ifdef _WIN32
proto_ACMFORMATCHOOSEHOOKPROCA typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFORMATCHOOSEHOOKPROCA typedef ptr proto_ACMFORMATCHOOSEHOOKPROCA
proto_ACMFORMATCHOOSEHOOKPROCW typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFORMATCHOOSEHOOKPROCW typedef ptr proto_ACMFORMATCHOOSEHOOKPROCW
ifdef _UNICODE
ACMFORMATCHOOSEHOOKPROC	EQU	<ACMFORMATCHOOSEHOOKPROCW>
else 
ACMFORMATCHOOSEHOOKPROC	EQU	<ACMFORMATCHOOSEHOOKPROCA>
endif 
else 
proto_ACMFORMATCHOOSEHOOKPROC typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFORMATCHOOSEHOOKPROC typedef ptr proto_ACMFORMATCHOOSEHOOKPROC
endif 
ifdef _WIN32
ACMFORMATCHOOSEA	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
pszTitle	LPSTR	?
szFormatTag	SBYTE ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
szFormat	SBYTE ACMFORMATDETAILS_FORMAT_CHARS dup (?)
pszName	LPSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfxEnum	LPWAVEFORMATEX	?
hInstance	HINSTANCE	?
pszTemplateName	LPSTR	?
lCustData	LPARAM	?
pfnHook	ACMFORMATCHOOSEHOOKPROCA	?
ACMFORMATCHOOSEA	ends

PACMFORMATCHOOSEA typedef ptr ACMFORMATCHOOSEA
LPACMFORMATCHOOSEA typedef ptr ACMFORMATCHOOSEA

ACMFORMATCHOOSEW	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
pszTitle	LPWSTR	?
szFormatTag	WCHAR ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
szFormat	WCHAR ACMFORMATDETAILS_FORMAT_CHARS dup (?)
pszName	LPWSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfxEnum	LPWAVEFORMATEX	?
hInstance	HINSTANCE	?
pszTemplateName	LPWSTR	?
lCustData	LPARAM	?
pfnHook	ACMFORMATCHOOSEHOOKPROCW	?
ACMFORMATCHOOSEW	ends

PACMFORMATCHOOSEW typedef ptr ACMFORMATCHOOSEW
LPACMFORMATCHOOSEW typedef ptr ACMFORMATCHOOSEW

ifdef _UNICODE
ACMFORMATCHOOSE	EQU	<ACMFORMATCHOOSEW>
PACMFORMATCHOOSE	EQU	<PACMFORMATCHOOSEW>
LPACMFORMATCHOOSE	EQU	<LPACMFORMATCHOOSEW>
else 
ACMFORMATCHOOSE	EQU	<ACMFORMATCHOOSEA>
PACMFORMATCHOOSE	EQU	<PACMFORMATCHOOSEA>
LPACMFORMATCHOOSE	EQU	<LPACMFORMATCHOOSEA>
endif 
else 
ACMFORMATCHOOSE	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfx	LPWAVEFORMATEX	?
cbwfx	DWORD	?
pszTitle	LPSTR	?
szFormatTag	SBYTE ACMFORMATTAGDETAILS_FORMATTAG_CHARS dup (?)
szFormat	SBYTE ACMFORMATDETAILS_FORMAT_CHARS dup (?)
pszName	LPSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfxEnum	LPWAVEFORMATEX	?
hInstance	HINSTANCE	?
pszTemplateName	LPSTR	?
lCustData	LPARAM	?
pfnHook	ACMFORMATCHOOSEHOOKPROC	?
ACMFORMATCHOOSE	ends

PACMFORMATCHOOSE typedef ptr ACMFORMATCHOOSE
LPACMFORMATCHOOSE typedef ptr ACMFORMATCHOOSE

endif 
ACMFORMATCHOOSE_STYLEF_SHOWHELP	EQU	00000004h
ACMFORMATCHOOSE_STYLEF_ENABLEHOOK	EQU	00000008h
ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATE	EQU	00000010h
ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATEHANDLE	EQU	00000020h
ACMFORMATCHOOSE_STYLEF_INITTOWFXSTRUCT	EQU	00000040h
ACMFORMATCHOOSE_STYLEF_CONTEXTHELP	EQU	00000080h
ifdef _WIN32
acmFormatChooseA proto stdcall :LPACMFORMATCHOOSEA
acmFormatChooseW proto stdcall :LPACMFORMATCHOOSEW
ifdef _UNICODE
acmFormatChoose	EQU	<acmFormatChooseW>
else 
acmFormatChoose	EQU	<acmFormatChooseA>
endif 
else 
acmFormatChoose proto stdcall :LPACMFORMATCHOOSE
endif 
ACMFILTERTAGDETAILS_FILTERTAG_CHARS	EQU	48
ifdef _WIN32
ACMFILTERTAGDETAILSA	struct 
cbStruct	DWORD	?
dwFilterTagIndex	DWORD	?
dwFilterTag	DWORD	?
cbFilterSize	DWORD	?
fdwSupport	DWORD	?
cStandardFilters	DWORD	?
szFilterTag	SBYTE ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
ACMFILTERTAGDETAILSA	ends

PACMFILTERTAGDETAILSA typedef ptr ACMFILTERTAGDETAILSA
LPACMFILTERTAGDETAILSA typedef ptr ACMFILTERTAGDETAILSA

ACMFILTERTAGDETAILSW	struct 
cbStruct	DWORD	?
dwFilterTagIndex	DWORD	?
dwFilterTag	DWORD	?
cbFilterSize	DWORD	?
fdwSupport	DWORD	?
cStandardFilters	DWORD	?
szFilterTag	WCHAR ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
ACMFILTERTAGDETAILSW	ends

PACMFILTERTAGDETAILSW typedef ptr ACMFILTERTAGDETAILSW
LPACMFILTERTAGDETAILSW typedef ptr ACMFILTERTAGDETAILSW

ifdef _UNICODE
ACMFILTERTAGDETAILS	EQU	<ACMFILTERTAGDETAILSW>
PACMFILTERTAGDETAILS	EQU	<PACMFILTERTAGDETAILSW>
LPACMFILTERTAGDETAILS	EQU	<LPACMFILTERTAGDETAILSW>
else 
ACMFILTERTAGDETAILS	EQU	<ACMFILTERTAGDETAILSA>
PACMFILTERTAGDETAILS	EQU	<PACMFILTERTAGDETAILSA>
LPACMFILTERTAGDETAILS	EQU	<LPACMFILTERTAGDETAILSA>
endif 
else 
ACMFILTERTAGDETAILS	struct 
cbStruct	DWORD	?
dwFilterTagIndex	DWORD	?
dwFilterTag	DWORD	?
cbFilterSize	DWORD	?
fdwSupport	DWORD	?
cStandardFilters	DWORD	?
szFilterTag	SBYTE ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
ACMFILTERTAGDETAILS	ends

PACMFILTERTAGDETAILS typedef ptr ACMFILTERTAGDETAILS
LPACMFILTERTAGDETAILS typedef ptr ACMFILTERTAGDETAILS

endif 
ifdef _WIN32
acmFilterTagDetailsA proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILSA, :DWORD
acmFilterTagDetailsW proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILSW, :DWORD
ifdef _UNICODE
acmFilterTagDetails	EQU	<acmFilterTagDetailsW>
else 
acmFilterTagDetails	EQU	<acmFilterTagDetailsA>
endif 
else 
acmFilterTagDetails proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILS, :DWORD
endif 
ACM_FILTERTAGDETAILSF_INDEX	EQU	00000000h
ACM_FILTERTAGDETAILSF_FILTERTAG	EQU	00000001h
ACM_FILTERTAGDETAILSF_LARGESTSIZE	EQU	00000002h
ACM_FILTERTAGDETAILSF_QUERYMASK	EQU	0000000Fh
ifdef _WIN32
proto_ACMFILTERTAGENUMCBA typedef proto stdcall :HACMDRIVERID,:LPACMFILTERTAGDETAILSA,:DWORD_PTR,:DWORD
ACMFILTERTAGENUMCBA typedef ptr proto_ACMFILTERTAGENUMCBA
acmFilterTagEnumA proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILSA, :ACMFILTERTAGENUMCBA, :DWORD_PTR, :DWORD
proto_ACMFILTERTAGENUMCBW typedef proto stdcall :HACMDRIVERID,:LPACMFILTERTAGDETAILSW,:DWORD_PTR,:DWORD
ACMFILTERTAGENUMCBW typedef ptr proto_ACMFILTERTAGENUMCBW
acmFilterTagEnumW proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILSW, :ACMFILTERTAGENUMCBW, :DWORD_PTR, :DWORD
ifdef _UNICODE
ACMFILTERTAGENUMCB	EQU	<ACMFILTERTAGENUMCBW>
acmFilterTagEnum	EQU	<acmFilterTagEnumW>
else 
ACMFILTERTAGENUMCB	EQU	<ACMFILTERTAGENUMCBA>
acmFilterTagEnum	EQU	<acmFilterTagEnumA>
endif 
else 
proto_ACMFILTERTAGENUMCB typedef proto stdcall :HACMDRIVERID,:LPACMFILTERTAGDETAILS,:DWORD_PTR,:DWORD
ACMFILTERTAGENUMCB typedef ptr proto_ACMFILTERTAGENUMCB
acmFilterTagEnum proto stdcall :HACMDRIVER, :LPACMFILTERTAGDETAILS, :ACMFILTERTAGENUMCB, :DWORD_PTR, :DWORD
endif 
ACMFILTERDETAILS_FILTER_CHARS	EQU	128
ifdef _WIN32
ACMFILTERDETAILSA	struct 
cbStruct	DWORD	?
dwFilterIndex	DWORD	?
dwFilterTag	DWORD	?
fdwSupport	DWORD	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
szFilter	SBYTE ACMFILTERDETAILS_FILTER_CHARS dup (?)
ACMFILTERDETAILSA	ends

PACMFILTERDETAILSA typedef ptr ACMFILTERDETAILSA
LPACMFILTERDETAILSA typedef ptr ACMFILTERDETAILSA

ACMFILTERDETAILSW	struct 
cbStruct	DWORD	?
dwFilterIndex	DWORD	?
dwFilterTag	DWORD	?
fdwSupport	DWORD	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
szFilter	WCHAR ACMFILTERDETAILS_FILTER_CHARS dup (?)
ACMFILTERDETAILSW	ends

PACMFILTERDETAILSW typedef ptr ACMFILTERDETAILSW
LPACMFILTERDETAILSW typedef ptr ACMFILTERDETAILSW

ifdef _UNICODE
ACMFILTERDETAILS	EQU	<ACMFILTERDETAILSW>
PACMFILTERDETAILS	EQU	<PACMFILTERDETAILSW>
LPACMFILTERDETAILS	EQU	<LPACMFILTERDETAILSW>
else 
ACMFILTERDETAILS	EQU	<ACMFILTERDETAILSA>
PACMFILTERDETAILS	EQU	<PACMFILTERDETAILSA>
LPACMFILTERDETAILS	EQU	<LPACMFILTERDETAILSA>
endif 
else 
ACMFILTERDETAILS	struct 
cbStruct	DWORD	?
dwFilterIndex	DWORD	?
dwFilterTag	DWORD	?
fdwSupport	DWORD	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
szFilter	SBYTE ACMFILTERDETAILS_FILTER_CHARS dup (?)
ACMFILTERDETAILS	ends

PACMFILTERDETAILS typedef ptr ACMFILTERDETAILS
LPACMFILTERDETAILS typedef ptr ACMFILTERDETAILS

endif 
ifdef _WIN32
acmFilterDetailsA proto stdcall :HACMDRIVER, :LPACMFILTERDETAILSA, :DWORD
acmFilterDetailsW proto stdcall :HACMDRIVER, :LPACMFILTERDETAILSW, :DWORD
ifdef _UNICODE
acmFilterDetails	EQU	<acmFilterDetailsW>
else 
acmFilterDetails	EQU	<acmFilterDetailsA>
endif 
else 
acmFilterDetails proto stdcall :HACMDRIVER, :LPACMFILTERDETAILS, :DWORD
endif 
ACM_FILTERDETAILSF_INDEX	EQU	00000000h
ACM_FILTERDETAILSF_FILTER	EQU	00000001h
ACM_FILTERDETAILSF_QUERYMASK	EQU	0000000Fh
ifdef _WIN32
proto_ACMFILTERENUMCBA typedef proto stdcall :HACMDRIVERID,:LPACMFILTERDETAILSA,:DWORD_PTR,:DWORD
ACMFILTERENUMCBA typedef ptr proto_ACMFILTERENUMCBA
acmFilterEnumA proto stdcall :HACMDRIVER, :LPACMFILTERDETAILSA, :ACMFILTERENUMCBA, :DWORD_PTR, :DWORD
proto_ACMFILTERENUMCBW typedef proto stdcall :HACMDRIVERID,:LPACMFILTERDETAILSW,:DWORD_PTR,:DWORD
ACMFILTERENUMCBW typedef ptr proto_ACMFILTERENUMCBW
acmFilterEnumW proto stdcall :HACMDRIVER, :LPACMFILTERDETAILSW, :ACMFILTERENUMCBW, :DWORD_PTR, :DWORD
ifdef _UNICODE
ACMFILTERENUMCB	EQU	<ACMFILTERENUMCBW>
acmFilterEnum	EQU	<acmFilterEnumW>
else 
ACMFILTERENUMCB	EQU	<ACMFILTERENUMCBA>
acmFilterEnum	EQU	<acmFilterEnumA>
endif 
else 
proto_ACMFILTERENUMCB typedef proto stdcall :HACMDRIVERID,:LPACMFILTERDETAILS,:DWORD_PTR,:DWORD
ACMFILTERENUMCB typedef ptr proto_ACMFILTERENUMCB
acmFilterEnum proto stdcall :HACMDRIVER, :LPACMFILTERDETAILS, :ACMFILTERENUMCB, :DWORD_PTR, :DWORD
endif 
ACM_FILTERENUMF_DWFILTERTAG	EQU	00010000h
MM_ACM_FILTERCHOOSE	EQU	8000h
FILTERCHOOSE_MESSAGE	EQU	0
FILTERCHOOSE_FILTERTAG_VERIFY	EQU	( FILTERCHOOSE_MESSAGE + 0 )
FILTERCHOOSE_FILTER_VERIFY	EQU	( FILTERCHOOSE_MESSAGE + 1 )
FILTERCHOOSE_CUSTOM_VERIFY	EQU	( FILTERCHOOSE_MESSAGE + 2 )
ifdef _WIN32
proto_ACMFILTERCHOOSEHOOKPROCA typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFILTERCHOOSEHOOKPROCA typedef ptr proto_ACMFILTERCHOOSEHOOKPROCA
proto_ACMFILTERCHOOSEHOOKPROCW typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFILTERCHOOSEHOOKPROCW typedef ptr proto_ACMFILTERCHOOSEHOOKPROCW
ifdef _UNICODE
ACMFILTERCHOOSEHOOKPROC	EQU	<ACMFILTERCHOOSEHOOKPROCW>
else 
ACMFILTERCHOOSEHOOKPROC	EQU	<ACMFILTERCHOOSEHOOKPROCA>
endif 
else 
proto_ACMFILTERCHOOSEHOOKPROC typedef proto stdcall :HWND,:DWORD,:WPARAM,:LPARAM
ACMFILTERCHOOSEHOOKPROC typedef ptr proto_ACMFILTERCHOOSEHOOKPROC
endif 
ifdef _WIN32
ACMFILTERCHOOSEA	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
pszTitle	LPSTR	?
szFilterTag	SBYTE ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
szFilter	SBYTE ACMFILTERDETAILS_FILTER_CHARS dup (?)
pszName	LPSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfltrEnum	LPWAVEFILTER	?
hInstance	HINSTANCE	?
pszTemplateName	LPSTR	?
lCustData	LPARAM	?
pfnHook	ACMFILTERCHOOSEHOOKPROCA	?
ACMFILTERCHOOSEA	ends

PACMFILTERCHOOSEA typedef ptr ACMFILTERCHOOSEA
LPACMFILTERCHOOSEA typedef ptr ACMFILTERCHOOSEA

ACMFILTERCHOOSEW	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
pszTitle	LPWSTR	?
szFilterTag	WCHAR ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
szFilter	WCHAR ACMFILTERDETAILS_FILTER_CHARS dup (?)
pszName	LPWSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfltrEnum	LPWAVEFILTER	?
hInstance	HINSTANCE	?
pszTemplateName	LPWSTR	?
lCustData	LPARAM	?
pfnHook	ACMFILTERCHOOSEHOOKPROCW	?
ACMFILTERCHOOSEW	ends

PACMFILTERCHOOSEW typedef ptr ACMFILTERCHOOSEW
LPACMFILTERCHOOSEW typedef ptr ACMFILTERCHOOSEW

ifdef _UNICODE
ACMFILTERCHOOSE	EQU	<ACMFILTERCHOOSEW>
PACMFILTERCHOOSE	EQU	<PACMFILTERCHOOSEW>
LPACMFILTERCHOOSE	EQU	<LPACMFILTERCHOOSEW>
else 
ACMFILTERCHOOSE	EQU	<ACMFILTERCHOOSEA>
PACMFILTERCHOOSE	EQU	<PACMFILTERCHOOSEA>
LPACMFILTERCHOOSE	EQU	<LPACMFILTERCHOOSEA>
endif 
else 
ACMFILTERCHOOSE	struct 
cbStruct	DWORD	?
fdwStyle	DWORD	?
hwndOwner	HWND	?
pwfltr	LPWAVEFILTER	?
cbwfltr	DWORD	?
pszTitle	LPSTR	?
szFilterTag	SBYTE ACMFILTERTAGDETAILS_FILTERTAG_CHARS dup (?)
szFilter	SBYTE ACMFILTERDETAILS_FILTER_CHARS dup (?)
pszName	LPSTR	?
cchName	DWORD	?
fdwEnum	DWORD	?
pwfltrEnum	LPWAVEFILTER	?
hInstance	HINSTANCE	?
pszTemplateName	LPSTR	?
lCustData	LPARAM	?
pfnHook	ACMFILTERCHOOSEHOOKPROC	?
ACMFILTERCHOOSE	ends

PACMFILTERCHOOSE typedef ptr ACMFILTERCHOOSE
LPACMFILTERCHOOSE typedef ptr ACMFILTERCHOOSE

endif 
ACMFILTERCHOOSE_STYLEF_SHOWHELP	EQU	00000004h
ACMFILTERCHOOSE_STYLEF_ENABLEHOOK	EQU	00000008h
ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATE	EQU	00000010h
ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATEHANDLE	EQU	00000020h
ACMFILTERCHOOSE_STYLEF_INITTOFILTERSTRUCT	EQU	00000040h
ACMFILTERCHOOSE_STYLEF_CONTEXTHELP	EQU	00000080h
ifdef _WIN32
acmFilterChooseA proto stdcall :LPACMFILTERCHOOSEA
acmFilterChooseW proto stdcall :LPACMFILTERCHOOSEW
ifdef _UNICODE
acmFilterChoose	EQU	<acmFilterChooseW>
else 
acmFilterChoose	EQU	<acmFilterChooseA>
endif 
else 
acmFilterChoose proto stdcall :LPACMFILTERCHOOSE
endif 
ifdef _WIN64
_DRVRESERVED	EQU	15
else 
_DRVRESERVED	EQU	10
endif 
ACMSTREAMHEADER	struct 
cbStruct	DWORD	?
fdwStatus	DWORD	?
dwUser	DWORD_PTR	?
pbSrc	LPBYTE	?
cbSrcLength	DWORD	?
cbSrcLengthUsed	DWORD	?
dwSrcUser	DWORD_PTR	?
pbDst	LPBYTE	?
cbDstLength	DWORD	?
cbDstLengthUsed	DWORD	?
dwDstUser	DWORD_PTR	?
dwReservedDriver	DWORD _DRVRESERVED dup (?)
ACMSTREAMHEADER	ends

PACMSTREAMHEADER typedef ptr ACMSTREAMHEADER
LPACMSTREAMHEADER typedef ptr ACMSTREAMHEADER

ACMSTREAMHEADER_STATUSF_DONE	EQU	00010000h
ACMSTREAMHEADER_STATUSF_PREPARED	EQU	00020000h
ACMSTREAMHEADER_STATUSF_INQUEUE	EQU	00100000h
acmStreamOpen proto stdcall :LPHACMSTREAM, :HACMDRIVER, :LPWAVEFORMATEX, :LPWAVEFORMATEX, :LPWAVEFILTER, :DWORD_PTR, :DWORD_PTR, :DWORD
ACM_STREAMOPENF_QUERY	EQU	00000001h
ACM_STREAMOPENF_ASYNC	EQU	00000002h
ACM_STREAMOPENF_NONREALTIME	EQU	00000004h
acmStreamClose proto stdcall :HACMSTREAM, :DWORD
acmStreamSize proto stdcall :HACMSTREAM, :DWORD, :LPDWORD, :DWORD
ACM_STREAMSIZEF_SOURCE	EQU	00000000h
ACM_STREAMSIZEF_DESTINATION	EQU	00000001h
ACM_STREAMSIZEF_QUERYMASK	EQU	0000000Fh
acmStreamReset proto stdcall :HACMSTREAM, :DWORD
acmStreamMessage proto stdcall :HACMSTREAM, :DWORD, :LPARAM, :LPARAM
acmStreamConvert proto stdcall :HACMSTREAM, :LPACMSTREAMHEADER, :DWORD
ACM_STREAMCONVERTF_BLOCKALIGN	EQU	00000004h
ACM_STREAMCONVERTF_START	EQU	00000010h
ACM_STREAMCONVERTF_END	EQU	00000020h
acmStreamPrepareHeader proto stdcall :HACMSTREAM, :LPACMSTREAMHEADER, :DWORD
acmStreamUnprepareHeader proto stdcall :HACMSTREAM, :LPACMSTREAMHEADER, :DWORD
	include poppack.inc
ifdef __cplusplus
;}
endif 
endif 

;--- errors: 0
;--- end of file ---
